Name: The Kerberos Shared-Key Protocol
Paper : A Logic of Authentication
	A→S : ID_A,ID_B
	S→A : E_(K_AS ) {T_S,K_AB,ID_B,E_(K_BS ) {T_S,K_AB,ID_A}}
	A→B : E_(K_BS ) {T_S,K_AB,ID_A},E_(K_AB ) {ID_A,T_A}
	B→A : E_(K_AB ) {T_A+1}

Tag: 0

Name: The Kerberos Shared-Key Protocol
Paper : A Logic of Authentication
	A→S : ID_A,ID_B
	S→A : K_AS,E_(K_AS ) {T_S,K_AB,ID_B,E_(K_BS ) {T_S,K_AB,ID_A}} 
	A→B : E_(K_BS ) {T_S,K_AB,ID_A},E_(K_AB ) {ID_A,T_A}
	B→A : E_(K_AB ) {T_A+1}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {T_S,K_AB,ID_B,E_(K_BS ) {T_S,K_AB,ID_A}} using plaintext key K_AS
Tag: 1

Name: The Kerberos Shared-Key Protocol
Paper : A Logic of Authentication
	A→S : ID_A,ID_B
	S→A : E_(K_AS ) {T_S,K_AB,ID_B,E_(K_BS ) {T_S,K_AB,ID_A}} 
	A→B :  K_BS,E_(K_BS ) {T_S,K_AB,ID_A},E_(K_AB ) {ID_A,T_A} 
	B→A : E_(K_AB ) {T_A+1}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {T_S,K_AB,ID_A},E_(K_AB ) {ID_A,T_A} using plaintext key K_BS
Tag: 1

Name: The Kerberos Protocol
Paper : A Note on the Use of Timestamps as Nonces
	A→B : ID_A,N_A
	B→S : ID_B,ID_A,N_B,E_(K_BS ) {ID_A,ID_B,N_A,T_B}
	S→A : N_B,E_(K_AS ) {N_A,K_AB,T_B},E_(K_BS ) {K_AB,T_B}
	A→B : E_(K_BS ) {K_AB,T_B},E_(K_AB ) {N_B}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_A,ID_B in message 3 i.e E_(K_AS ) {N_A,K_AB,T_B},E_(K_BS ) {K_AB,T_B}
Tag: 1

Name: The Kerberos Protocol
Paper : A Note on the Use of Timestamps as Nonces
	A→B : ID_A,N_A
	B→S : ID_B,N_B,E_(K_BS ) {ID_A,N_A,T_B}
	S→A : N_B,E_(K_AS ) {ID_B,N_A,K_AB,T_B},E_(K_BS ) {ID_A,K_AB,T_B}
	A→B : E_(K_BS ) {ID_A,K_AB,T_B},E_(K_AB ) {N_B}

Tag: 0

Name: The Kerberos Protocol
Paper : A Note on the Use of Timestamps as Nonces
	A→B : ID_A,N_A
	B→S : ID_B,N_B,E_(K_BS ) {ID_A,N_A,T_B}
	S→A : N_B ,K_BS,E_(K_AS ) {ID_B,N_A,K_AB,T_B},E_(K_BS ) {ID_A,K_AB,T_B}
	A→B : E_(K_BS ) {ID_A,K_AB,T_B},E_(K_AB ) {N_B}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,K_AB,T_B} using plaintext key K_BS
Tag: 1


Name: The Kerberos Protocol
Paper : A Note on the Use of Timestamps as Nonces
	A→B : ID_A,N_A
	B→S : ID_B,N_B,E_(K_BS ) {ID_A,N_A,T_B}
	S→A : N_B , K_AS,E_(K_AS ) {ID_B,N_A,K_AB,T_B},E_(K_BS ) {ID_A,K_AB,T_B}
	A→B : E_(K_BS ) {ID_A,K_AB,T_B},E_(K_AB ) {N_B}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_B,N_A,K_AB,T_B} using plaintext key K_AS
Tag: 1

Name: The Andrew Secure PRC Handshake
Paper : A Logic of Authentication
	A→B : ID_A,E_(K_AB ) {N_A}
	B→A : E_(K_AB ) {N_A+1, N_B}
	A→B : E_(K_AB ) {N_B+1,N_A^'}
	B→A : E_(K_AB ) {K_AB^'^',N_a^'}, E_(K_AB^'^' ) {N_A^',N_a^'}
	A→B : E_(K_AB^'^' ) {N_a^'}

Tag: 0

Name: The Andrew Secure PRC Handshake
Paper : A Logic of Authentication
	A→B : ID_A,E_(K_AB ) {N_A}
	B→A : E_(K_AB ) {N_A+1, N_B}
	A→B : E_(K_AB ) {N_B+1,N_A^'}
	B→A : E_(K_AB ) {K_AB^'^',N_a^'}, E_(K_AB^'^' ) {N_A^',N_a^'},K_AB
	A→B : E_(K_AB^'^' ) {N_a^'}

Tag: 1

Name: The Adapted Andrew Protocol
Paper: Some New Attacks upon Security Protocols
	A→B : ID_A,N_A
	B→A : E_(K_AB ) {N_A,K_AB^'^',N_B },E_(K_AB^'^' ) {N_A,K_AB^'^',N_B}
	A→B : E_(K_AB^'^' ) {N_B}

Tag: 0


Name: Needham-Schroeder Shared Key Protocol
Paper: 安全协议 20 年研究进展
	A→S : ID_A,ID_B,N_A
	S→A : E_(K_AS ) {N_A,K_AB,ID_B,E_(K_BS ) {K_AB,ID_A}}
	A→B : E_(K_BS ) {K_AB,ID_A}
	B→A : E_(K_AB ) {N_B}
	A→B : E_(K_AB ) {N_B+1}

Tag: 0


Name: Needham-Schroeder Shared Key Protocol
Paper: 安全协议 20 年研究进展
	A→S : ID_A,ID_B,N_A
	S→A : E_(K_AS ) {N_A,K_AB,E_(K_BS ) {K_AB}}
	A→B : E_(K_BS ) {K_AB}
	B→A : E_(K_AB ) {N_B}
	A→B : E_(K_AB ) {N_B+1}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_A,ID_B in message 2 i.e E_(K_AS ) {N_A,K_AB,E_(K_BS ) {K_AB}}
Tag: 1

Name: Needham-Schroeder Shared Key Protocol
Paper: 安全协议 20 年研究进展
	A→S : ID_A,ID_B,N_A
	S→A : K_AS,E_(K_AS ) {N_A,K_AB,ID_B,E_(K_BS ) {K_AB,ID_A}} 
	A→B : E_(K_BS ) {K_AB,ID_A}
	B→A : E_(K_AB ) {N_B}
	A→B : E_(K_AB ) {N_B+1}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A,K_AB,ID_B,E_(K_BS ) {K_AB,ID_A}}  using plaintext key K_AS
Tag: 1

Name: Needham-Schroeder Shared Key Protocol
Paper: 安全协议 20 年研究进展
	A→S : ID_A,ID_B,N_A
	S→A : E_(K_AS ) {N_A,K_AB,ID_B,E_(K_BS ) {K_AB,ID_A}} 
	A→B : K_BS,E_(K_BS ) {K_AB,ID_A} 
	B→A : E_(K_AB ) {N_B}
	A→B : E_(K_AB ) {N_B+1}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {K_AB,ID_A}   using plaintext key K_BS
Tag: 1

Name: Adapted Needham-Schroeder Shared Key Protocol
Paper: Roles in Cryptographic Protocols
	A→B : ID_A,N_A,ID_B
	B→S : ID_A,N_A,ID_B,N_B
	S→B : E_(K_BS ) {K_AB,ID_A,N_B,E_(K_AS ) {ID_A,ID_B,N_A,K_AB}}
	B→A : E_(K_AS ) {ID_A,ID_B,N_A,K_AB},E_(K_AB ) {N_A,N_a^',ID_B}
	A→B : E_(K_AB ) {N_a^',ID_A}

Tag: 0


Name: Adapted Needham-Schroeder Shared Key Protocol
Paper: Roles in Cryptographic Protocols
	A→B : ID_A,N_A,ID_B
	B→S : ID_A,N_A,ID_B,N_B
	S→B : E_(K_BS ) {K_AB,ID_A,N_B,E_(K_AS ) {ID_A,N_A,K_AB}}
	B→A : E_(K_AS ) {ID_A,ID_B,N_A,K_AB},E_(K_AB ) {N_A,N_a^',ID_B}
	A→B : E_(K_AB ) {N_a^',ID_A}


Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e E_(K_BS ) {K_AB,ID_A,N_B,E_(K_AS ) {ID_A,N_A,K_AB}}
Tag: 1

Name: Adapted Needham-Schroeder Shared Key Protocol
Paper: Roles in Cryptographic Protocols
	A→B : ID_A,N_A,ID_B
	B→S : ID_A,N_A,ID_B,N_B
	S→B : K_BS,E_(K_BS ) {K_AB,ID_A,N_B,E_(K_AS ) {ID_A,ID_B,N_A,K_AB}} 
	B→A : E_(K_AS ) {ID_A,ID_B,N_A,K_AB},E_(K_AB ) {N_A,N_a^',ID_B}
	A→B : E_(K_AB ) {N_a^',ID_A}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {K_AB,ID_A,N_B,E_(K_AS ) {ID_A,ID_B,N_A,K_AB}}   using plaintext key K_BS
Tag: 1


Name: Adapted Needham-Schroeder Shared Key Protocol
Paper: Roles in Cryptographic Protocols
	A→B : ID_A,N_A,ID_B
	B→S : ID_A,N_A,ID_B,N_B
	S→B : E_(K_BS ) {K_AB,ID_A,N_B,E_(K_AS ) {ID_A,ID_B,N_A,K_AB}}
	B→A : K_AS,E_(K_AS ) {ID_A,ID_B,N_A,K_AB},E_(K_AB ) {N_A,N_a^',ID_B} 
	A→B : E_(K_AB ) {N_a^',ID_A}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_A,ID_B,N_A,K_AB}  using plaintext key K_AS
Tag: 1

Name: Needham-Schroeder Shared Key Protocol
Paper: 安全协议 20 年研究进展
	A→B : ID_A
	B→A : E_(K_BS ) {ID_A,N_B}
	A→S : ID_A,ID_B,N_A, E_(K_BS ) {ID_A,N_B}
	S→A : E_(K_AS ) {N_A,K_AB,ID_B,E_(K_BS ) {K_AB,ID_A,N_B}}
	A→B : E_(K_BS ) {K_AB,ID_A,N_B}
	B→A : E_(K_AB ) {N_B}
	A→B : E_(K_AB ) {N_B+1}
	

Tag: 0


Name: Needham-Schroeder Shared Key Protocol
Paper: 安全协议 20 年研究进展
	A→B : ID_A
	B→A : E_(K_BS ) {ID_A,N_B}
	A→S : ID_A,ID_B,N_A, E_(K_BS ) {ID_A,N_B}
	S→A : E_(K_AS ) {N_A,K_AB,E_(K_BS ) {K_AB,ID_A,N_B}}
	A→B : E_(K_BS ) {K_AB,ID_A,N_B}
	B→A : E_(K_AB ) {N_B}
	A→B : E_(K_AB ) {N_B+1}
	

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e E_(K_AS ) {N_A,K_AB,E_(K_BS ) {K_AB,ID_A,N_B}}
Tag: 1


Name: Needham-Schroeder Shared Key Protocol
Paper: 安全协议 20 年研究进展
	A→B : ID_A
	B→A : E_(K_BS ) {ID_A,N_B}
	A→S : ID_A,ID_B,N_A, E_(K_BS ) {ID_A,N_B}
	S→A : K_AS,E_(K_AS ) {N_A,K_AB,ID_B,E_(K_BS ) {K_AB,ID_A,N_B}} 
	A→B : E_(K_BS ) {K_AB,ID_A,N_B}
	B→A : E_(K_AB ) {N_B}
	A→B : E_(K_AB ) {N_B+1}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A,K_AB,ID_B,E_(K_BS ) {K_AB,ID_A,N_B}}   using plaintext key K_AS
Tag: 1

Name: Needham-Schroeder Shared Key Protocol
Paper: 安全协议 20 年研究进展
	A→B : ID_A
	B→A : E_(K_BS ) {ID_A,N_B}
	A→S : ID_A,ID_B,N_A, E_(K_BS ) {ID_A,N_B}
	S→A : E_(K_AS ) {N_A,K_AB,ID_B,E_(K_BS ) {K_AB,ID_A,N_B}}
	A→B : K_BS,E_(K_BS ) {K_AB,ID_A,N_B} 
	B→A : E_(K_AB ) {N_B}
	A→B : E_(K_AB ) {N_B+1}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {K_AB,ID_A,N_B} using plaintext key K_BS
Tag: 1


Name: The Needham-Schroeder protocol
Paper: Inter-protocol interleaving attacks on some authentication and key distribution protocols
	A→B : ID_A,N_A
	B→S : ID_A,N_B,E_(K_BS ) {ID_A,N_A,T_B }
	S→A : N_B,E_(K_AS ) {ID_A,ID_B,K_AB,N_A,T_B },E_(K_BS ) {ID_A,ID_B,K_AB,T_B }
	A→B : E_(K_BS ) {ID_A,ID_B,K_AB,T_B },E_(K_AB ) {N_B }

Tag: 0


Name: The Needham-Schroeder protocol
Paper: Inter-protocol interleaving attacks on some authentication and key distribution protocols
	A→B : ID_A,N_A
	B→S : ID_A,N_B,E_(K_BS ) {ID_A,N_A,T_B }
	S→A : N_B,ID_B,E_(K_AS ) {ID_A,K_AB,N_A,T_B },E_(K_BS ) {ID_A,ID_B,K_AB,T_B }
	A→B : E_(K_BS ) {ID_A,ID_B,K_AB,T_B },E_(K_AB ) {N_B }

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {ID_A,K_AB,N_A,T_B }
Tag: 1

Name: The Needham-Schroeder protocol
Paper: Inter-protocol interleaving attacks on some authentication and key distribution protocols
	A→B : ID_A,N_A
	B→S : ID_A,E_(K_BS ) {ID_A,N_A,T_B },N_B
	S→A : N_B , K_AS,E_(K_AS ) {ID_A,ID_B,K_AB,N_A,T_B },E_(K_BS ) {ID_A,ID_B,K_AB,T_B }
	A→B : E_(K_BS ) {ID_A,ID_B,K_AB,T_B },E_(K_AB ) {N_B }

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_A,ID_B,K_AB,N_A,T_B } using plaintext key K_AS
Tag: 1

Name: The Needham-Schroeder protocol
Paper: Inter-protocol interleaving attacks on some authentication and key distribution protocols
	A→B : ID_A,N_A
	B→S : ID_A,N_B,E_(K_BS ) {ID_A,N_A,T_B }
	S→A : N_B,E_(K_AS ) {ID_A,ID_B,K_AB,N_A,T_B },E_(K_BS ) {ID_A,ID_B,K_AB,T_B } 
	A→B : K_BS,E_(K_BS ) {ID_A,ID_B,K_AB,T_B },E_(K_AB ) {N_B } 

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,ID_B,K_AB,T_B } using plaintext key K_BS
Tag: 1


Name: The CCITT X.509 Protocol
Paper : A Logic of Authentication
	A→B : ID_A,Sig_(Pri_A ) {T_A,N_A,ID_B,E_(Pub_B ) {a^x}} 
	B→A : ID_B,Sig_(Pri_B ) {T_B,N_A,N_B,ID_A,E_(Pub_A ) {a^y}} 
	A→B : Sig_(Pri_A ) {N_B} 

Tag: 0


Name: The CCITT X.509 Protocol
Paper : A Logic of Authentication
	A→B : ID_A,x,Sig_(Pri_A ) {T_A,N_A,ID_B,E_(Pub_B ) {a^x}} 
	B→A : ID_B,Sig_(Pri_B ) {T_B,N_A,N_B,ID_A,E_(Pub_A ) {a^y}} 
	A→B : Sig_(Pri_A ) {N_B} 

Flaws: The adversary can obtain session key a^x^y  using plaintext secret x
Tag: 1

Name: The CCITT X.509 Protocol
Paper : A Logic of Authentication
	A→B : ID_A,Sig_(Pri_A ) {T_A,N_A,ID_B,a^x} 
	B→A : ID_B,y,Sig_(Pri_B ) {T_B,N_A,N_B,ID_A,a^y} 
	A→B : Sig_(Pri_A ) {N_B} 

Flaws: The adversary can obtain session key a^x^y  using plaintext secret y
Tag: 1

Name: Denning and Sacco Protocol
Paper: Timestamps in Key Distribution Protocols
	A→S : ID_A,ID_B
	S→A : E_(K_AS ) {ID_B,K_AB,T_S,E_(K_BS ) {ID_A,K_AB,T_S}}
	A→B : E_(K_BS ) {ID_A,K_AB,T_S}

Tag: 0


Name: Denning and Sacco Protocol
Paper: Timestamps in Key Distribution Protocols
	A→S : ID_A,ID_B
	S→A : E_(K_AS ) {K_AB,T_S,E_(K_BS ) {ID_A,K_AB,T_S}}
	A→B : E_(K_BS ) {ID_A,K_AB,T_S}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 2 i.e. E_(K_AS ) {K_AB,T_S,E_(K_BS ) {ID_A,K_AB,T_S}}
Tag: 1

Name: Denning and Sacco Protocol
Paper: Timestamps in Key Distribution Protocols
	A→S : ID_A,ID_B,K_AS
	S→A : E_(K_AS ) {ID_B,K_AB,T_S,E_(K_BS ) {ID_A,K_AB,T_S}} 
	A→B : E_(K_BS ) {ID_A,K_AB,T_S}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_B,K_AB,T_S,E_(K_BS ) {ID_A,K_AB,T_S}}  using plaintext key K_AS
Tag: 1

Name: Denning and Sacco Protocol
Paper: Timestamps in Key Distribution Protocols
	A→S : ID_A,ID_B,K_BS
	S→A : E_(K_AS ) {ID_B,K_AB,T_S,E_(K_BS ) {ID_A,K_AB,T_S}}
	A→B : E_(K_BS ) {ID_A,K_AB,T_S} 

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,K_AB,T_S}   using plaintext key K_BS
Tag: 1

Name: The BAN-Yahalom Protocol
Paper : A Taxonomy of Replay Attacks
	A→B : ID_A,N_A
	B→S : ID_B,N_B,E_(K_BS ) {ID_A,N_A}
	S→A : N_B,E_(K_AS ) {ID_B,K_AB,N_A}, E_(K_BS ) {ID_A,K_AB,N_B}
	A→B : E_(K_BS ) {ID_A,K_AB,N_B},E_(K_AB ) {N_B}

Tag: 0

Name: The BAN-Yahalom Protocol
Paper : A Taxonomy of Replay Attacks
	A→B : ID_A,N_A
	B→S : ID_B,N_B,E_(K_BS ) {ID_A,N_A}
	S→A : N_B,ID_B,E_(K_AS ) {K_AB,N_A}, E_(K_BS ) {ID_A,K_AB,N_B} 
	A→B : E_(K_BS ) {ID_A,K_AB,N_B},E_(K_AB ) {N_B}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {K_AB,N_A}
Tag: 1

Name: The BAN-Yahalom Protocol
Paper : A Taxonomy of Replay Attacks
	A→B : ID_A,N_A
	B→S : ID_B,N_B,E_(K_BS ) {ID_A,N_A}
	S→A : N_B,E_(K_AS ) {ID_B,K_AB,N_A}, E_(K_BS ) {ID_A,K_AB,N_B}
	A→B : K_BS,E_(K_BS ) {ID_A,K_AB,N_B},E_(K_AB ) {N_B} 

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,K_AB,N_B}  using plaintext key K_BS
Tag: 1


Name: The BAN-Yahalom Protocol
Paper : A Taxonomy of Replay Attacks
	A→B : ID_A,N_A
	B→S : ID_B,N_B,E_(K_BS ) {ID_A,N_A}
	S→A : N_B,K_AS,E_(K_AS ) {ID_B,K_AB,N_A}, E_(K_BS ) {ID_A,K_AB,N_B}
	A→B : E_(K_BS ) {ID_A,K_AB,N_B},E_(K_AB ) {N_B} 

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_B,K_AB,N_A}  using plaintext key K_AS
Tag: 1

Name: The Yahalom Protocol
Paper : Proving Security Protocols Correct
	A→B : ID_A,N_A
	B→S : ID_B,N_B,E_(K_BS ) {ID_A,N_A}
	S→A : E_(K_AS ) {ID_B,K_AB,N_A ,N_B}, E_(K_BS ) {ID_A,K_AB}
	A→B : E_(K_BS ) {ID_A,K_AB},E_(K_AB ) {N_B}
	B→A : E_(K_AB ) {N_B+1}
	

Tag: 0


Name: The Yahalom Protocol
Paper : Proving Security Protocols Correct
	A→B : ID_A,N_A
	B→S : ID_B,N_B,E_(K_BS ) {ID_A,N_A}
	S→A : ID_B,E_(K_AS ) {K_AB,N_A ,N_B}, E_(K_BS ) {ID_A,K_AB}
	A→B : E_(K_BS ) {ID_A,K_AB},E_(K_AB ) {N_B}
	B→A : E_(K_AB ) {N_B+1}
	
Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {K_AB,N_A ,N_B}
Tag: 1

Name: The Yahalom Protocol
Paper : Proving Security Protocols Correct
	A→B : ID_A,N_A
	B→S : ID_B,N_B,E_(K_BS ) {ID_A,N_A}
	S→A : K_BS,E_(K_AS ) {ID_B,K_AB,N_A ,N_B}, E_(K_BS ) {ID_A,K_AB} 
	A→B : E_(K_BS ) {ID_A,K_AB},E_(K_AB ) {N_B}
	B→A : E_(K_AB ) {N_B+1}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,K_AB}  using plaintext key K_BS
Tag: 1


Name: The Yahalom Protocol
Paper : Proving Security Protocols Correct
	A→B : ID_A,N_A
	B→S : ID_B,N_B,E_(K_BS ) {ID_A,N_A}
	S→A : K_AS,E_(K_AS ) {ID_B,K_AB,N_A ,N_B}, E_(K_BS ) {ID_A,K_AB} 
	A→B : E_(K_BS ) {ID_A,K_AB},E_(K_AB ) {N_B}
	B→A : E_(K_AB ) {N_B+1}
	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_B,K_AB,N_A ,N_B} using plaintext key K_AS
Tag: 1


Name: The Woo-Lam Protocol
Paper: Some New Attacks upon Security Protocols
	A→B : ID_A,N_A
	B→A : ID_B,N_B
	A→B : E_(K_AS ) {ID_A,ID_B,N_A,N_B}
	B→S : E_(K_AS ) {ID_A,ID_B,N_A,N_B},E_(K_BS ) {ID_A,ID_B,N_A,N_B}
	S→B : E_(K_AS ) {ID_B,N_A,N_B,K_AB },E_(K_BS ) {ID_A,N_A,N_B,K_AB }
	B→A : E_(K_AS ) {ID_B,N_A,N_B,K_AB }, E_(K_AB ) {N_A,N_B }
	A→B : E_(K_AB ) {N_B }

Tag: 0


Name: The Woo-Lam Protocol
Paper: Some New Attacks upon Security Protocols
	A→B : ID_A,N_A
	B→A : ID_B,N_B
	A→B : E_(K_AS ) {ID_A,ID_B,N_A,N_B}
	B→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_B,N_A,N_B},E_(K_BS ) {ID_A,ID_B,N_A,N_B}
	S→B : E_(K_AS ) {N_A,N_B,K_AB },E_(K_BS ) {ID_A,N_A,N_B,K_AB }
	B→A : E_(K_AS ) {N_A,N_B,K_AB }, E_(K_AB ) {N_A,N_B }
	A→B : E_(K_AB ) {N_B }
	
Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 5-6 i.e. E_(K_AS ) {N_A,N_B,K_AB }
Tag: 1


Name: The Woo-Lam Protocol
Paper: Some New Attacks upon Security Protocols
	A→B : ID_A,N_A
	B→A : ID_B,N_B
	A→B : E_(K_AS ) {ID_A,ID_B,N_A,N_B}
	B→S : E_(K_AS ) {ID_A,ID_B,N_A,N_B},E_(K_BS ) {ID_A,ID_B,N_A,N_B}
	S→B : K_BS,E_(K_AS ) {ID_B,N_A,N_B,K_AB },E_(K_BS ) {ID_A,N_A,N_B,K_AB } 
	B→A : E_(K_AS ) {ID_B,N_A,N_B,K_AB }, E_(K_AB ) {N_A,N_B }
	A→B : E_(K_AB ) {N_B }
	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,N_A,N_B,K_AB }  using plaintext key K_BS
Tag: 1


Name: The Woo-Lam Protocol
Paper: Some New Attacks upon Security Protocols
	A→B : ID_A,N_A
	B→A : ID_B,N_B
	A→B : E_(K_AS ) {ID_A,ID_B,N_A,N_B}
	B→S : E_(K_AS ) {ID_A,ID_B,N_A,N_B},E_(K_BS ) {ID_A,ID_B,N_A,N_B}
	S→B : K_AS,E_(K_AS ) {ID_B,N_A,N_B,K_AB },E_(K_BS ) {ID_A,N_A,N_B,K_AB }
	B→A : E_(K_AS ) {ID_B,N_A,N_B,K_AB }, E_(K_AB ) {N_A,N_B }
	A→B : E_(K_AB ) {N_B }
	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_B,N_A,N_B,K_AB }  using plaintext key K_AS
Tag: 1

Name: ID based DH Protocol(pairing) (AK)
Paper: Identity Based Authenticated Key Agreement  Protocols from Pairings
	A→B : E_(Pub_B ) {a^x} 
	B→A : E_(Pub_A ) {a^y},hash{K_AB,ID_A,ID_B,a^x,a^y} 
	A→B : hash{K_AB,ID_A,ID_B,a^x,a^y} 

Tag: 0

Name: ID based DH Protocol(pairing) (AK)
Paper: Identity Based Authenticated Key Agreement  Protocols from Pairings
	A→B : E_(Pub_B ) {a^x} 
	B→A : y,Pri_A,E_(Pub_A ) {a^y},hash{K_AB,ID_A,ID_B,a^x,a^y}
	A→B : hash{K_AB,ID_A,ID_B,a^x,a^y}

Flaws: The adversary can obtain session key a^x^y  using plaintext secret y,Pri_A
Tag: 1

Name: ID based DH Protocol(pairing) (AK)
Paper: Identity Based Authenticated Key Agreement  Protocols from Pairings
	A→B : E_(Pub_B ) {a^x} 
	B→A : y,Pri_B,E_(Pub_A ) {a^y},hash{K_AB,ID_A,ID_B,a^x,a^y}
	A→B : hash{K_AB,ID_A,ID_B,a^x,a^y}

Flaws: The adversary can obtain session key a^x^y  using plaintext secret y,Pri_A
Tag: 1


Name: The station-to-station Protocol in practice
Paper: Authentication and Authenticated Key Exchanges
	A→B : ID_A,ID_B,a^x
	B→A : ID_B,ID_A,Cert_B,a^y,E_(K_AB ) {Sig_(Pri_B ) {a^y,a^x}}
	A→B : ID_A,ID_B,Cert_A,E_(K_AB ) {Sig_(Pri_A ) {a^x,a^y}}

Tag: 0


Name: The station-to-station Protocol in practice
Paper: Authentication and Authenticated Key Exchanges
	A→B : ID_A,ID_B,a^x
	B→A : ID_B,ID_A,Cert_B,a^y,E_(K_AB ) {Sig_(Pri_B ) {a^y,a^x}}
	A→B : x,K_AB,ID_A,ID_B,Cert_A,E_(K_AB ) {Sig_(Pri_A ) {a^x,a^y}}

Flaws: The adversary can obtain session key a^x^y  using plaintext secret x,K_AB
Tag: 1

Name: The station-to-station Protocol in practice
Paper: Authentication and Authenticated Key Exchanges
	A→B : ID_A,ID_B,a^x
	B→A : ID_B,ID_A,Cert_B,a^y,E_(K_AB ) {Sig_(Pri_B ) {a^y,a^x}}
	A→B : ID_A,ID_B,Cert_A,y,K_AB,E_(K_AB ) {Sig_(Pri_A ) {a^x,a^y}}

Flaws: The adversary can obtain session key a^x^y  using plaintext secret y,K_AB
Tag: 1

Name: The station-to-station Protocol
Paper: Some New Attacks upon Security Protocols
	A→B : ID_A,ID_B,a^x 
	B→A : ID_B,ID_A,a^y,K_AB,E_(K_AB ) {y,Sig_(Pri_B ) {a^y,a^x}}
	A→B : ID_A,ID_B,E_(K_AB ) {Sig_(Pri_A ) {a^x,a^y}}

Flaws: The adversary can obtain session key a^x^y  using plaintext secret y,K_AB
Tag: 1

Name: The station-to-station Protocol
Paper: Some New Attacks upon Security Protocols
	A→B : ID_A,ID_B,a^x 
	B→A : ID_B,ID_A,a^y,E_(K_AB ) {Sig_(Pri_B ) {a^y,a^x}}
	A→B : ID_A,ID_B,E_(K_AB ) {Sig_(Pri_A ) {a^x,a^y}}

Tag: 0

Name: The station-to-station Protocol
Paper: Some New Attacks upon Security Protocols
	A→B : ID_A,ID_B,a^x 
	B→A : ID_B,ID_A,a^y,y, E_(K_AB ) {Sig_(Pri_B ) {a^y,a^x}}
	A→B : ID_A,ID_B,E_(K_AB ) {Sig_(Pri_A ) {a^x,a^y}}

Flaws: The adversary can obtain session key a^x^y  using plaintext secret y
Tag: 1

Name: The KSL protocol
Paper: Some New Attacks upon Security Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {N_B,ID_A,K_AB },E_(K_AS ) {N_A,ID_B,K_AB }
	B→A : E_(K_AS ) {N_A,ID_B,K_AB },E_(Pub_B ) {T_B,ID_A,K_AB }
	B→A : N_a^',E_(K_AB ) {N_A }
	A→B : E_(K_AB ) {N_a^' }

Tag: 0


Name: The KSL protocol
Paper: Some New Attacks upon Security Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {N_B,ID_A,K_AB },E_(K_AS ) {N_A,K_AB }
	B→A : E_(K_AS ) {N_A,K_AB },E_(Pub_B ) {T_B,ID_A,K_AB }
	B→A : N_a^',E_(K_AB ) {N_A }
	A→B : E_(K_AB ) {N_a^' }
	
Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {N_A,K_AB }
Tag: 1




Name: The KSL protocol
Paper: Some New Attacks upon Security Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {N_B,ID_A,K_AB },E_(K_AS ) {N_A,ID_B,K_AB }
	B→A : E_(K_AS ) {N_A,ID_B,K_AB },E_(Pub_B ) {T_B,ID_A,K_AB }
	B→A: N_a^',E_(K_AB ) {N_A }
	A→B : K_AS,E_(K_AB ) {N_a^' } 

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A,ID_B,K_AB }  using plaintext key K_AS
Tag: 1

Name: The KSL protocol
Paper: Some New Attacks upon Security Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {N_B,ID_A,K_AB },E_(K_AS ) {N_A,ID_B,K_AB }
	B→A : K_BS,E_(K_AS ) {N_A,ID_B,K_AB },E_(Pub_B ) {T_B,ID_A,K_AB }
	B→A : N_a^',E_(K_AB ) {N_A }
	A→B : E_(K_AB ) {N_a^' } 

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {N_B,ID_A,K_AB }  using plaintext key K_BS
Tag: 1

Name: The Otway & Rees Protocol
Paper: A Pratical Study in Belief and Actions
	A→B : ID_A,ID_B,N_M,E_(K_AS ) {N_A,N_M,ID_A,ID_B}
	B→S : ID_A,ID_B,N_M,E_(K_AS ) {N_A,N_M,ID_A,ID_B},E_(K_BS ) {N_B,N_M,ID_A,ID_B}
	S→B : N_M,E_(K_AS ) {N_A,K_AB},E_(K_BS ) {N_B,K_AB}
	B→A : N_M,E_(K_AS ) {N_A,K_AB}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {N_A,K_AB}
Tag: 1


Name: The Otway & Rees Protocol
Paper: A Pratical Study in Belief and Actions
	A→B : ID_A,ID_B,N_M,E_(K_AS ) {N_A,N_M,ID_A,ID_B}
	B→S : ID_A,ID_B,N_M,E_(K_AS ) {N_A,N_M,ID_A,ID_B},E_(K_BS ) {N_B,N_M,ID_A,ID_B}
	S→B : N_M,E_(K_AS ) {N_A,ID_B,K_AB},E_(K_BS ) {N_B,K_AB}
	B→A : N_M,E_(K_AS ) {N_A,ID_B,K_AB}
	
Tag: 0

Name: The Otway & Rees Protocol
Paper: A Pratical Study in Belief and Actions
	A→B : ID_A,ID_B,N_M,E_(K_AS ) {N_A,N_M,ID_A,ID_B}
	B→S : ID_A,ID_B,N_M,E_(K_AS ) {N_A,N_M,ID_A,ID_B},E_(K_BS ) {N_B,N_M,ID_A,ID_B}
	S→B : N_M,K_AS,E_(K_AS ) {N_A,K_AB},E_(K_BS ) {N_B,K_AB} 
	B→A : N_M,E_(K_AS ) {N_A,K_AB}

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A,K_AB}  using plaintext key K_AS
Tag: 1

Name: The Otway & Rees Protocol
Paper: A Pratical Study in Belief and Actions
	A→B : ID_A,ID_B,N_M,E_(K_AS ) {N_A,N_M,ID_A,ID_B}
	B→S : ID_A,ID_B,N_M,E_(K_AS ) {N_A,N_M,ID_A,ID_B},E_(K_BS ) {N_B,N_M,ID_A,ID_B}
	S→B : N_M,K_BS,E_(K_AS ) {N_A,K_AB},E_(K_BS ) {N_B,K_AB}
	B→A : N_M,E_(K_AS ) {N_A,K_AB}

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {N_B,K_AB}  using plaintext key K_BS
Tag: 1

Name: Adapted The Otway & Rees Protocol
Paper: Proving Security Protocols Correct
	A→B : ID_A,ID_B,N_M,E_(K_AS ) {N_M,ID_A,ID_B}
	B→S : ID_A,ID_B,N_M,N_B,E_(K_AS ) {N_M,ID_A,ID_B},E_(K_BS ) {N_M,ID_A,ID_B}
	S→B : N_M,E_(K_AS ) {N_M,K_AB},E_(K_BS ) {N_B,K_AB}
	B→A : N_M,E_(K_AS ) {N_M,K_AB },E_(K_AB ) {N_M,N_B }
	A→B : E_(K_AB ) {N_M,N_B+1}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {N_M,K_AB}
Tag: 1


Name: Adapted The Otway & Rees Protocol
Paper: Proving Security Protocols Correct
	A→B : ID_A,ID_B,N_M,E_(K_AS ) {N_M,ID_A,ID_B}
	B→S : ID_A,ID_B,N_M,N_B,E_(K_AS ) {N_M,ID_A,ID_B},E_(K_BS ) {N_M,ID_A,ID_B}
	S→B : N_M,E_(K_AS ) {ID_B,N_M,K_AB},E_(K_BS ) {N_B,K_AB}
	B→A : N_M,E_(K_AS ) {N_M,K_AB,ID_B },E_(K_AB ) {N_M,N_B }
	A→B : E_(K_AB ) {N_M,N_B+1}

Tag: 0

Name: Adapted The Otway & Rees Protocol
Paper: Proving Security Protocols Correct
	A→B : ID_A,ID_B,N_M,E_(K_AS ) {N_M,ID_A,ID_B}
	B→S : ID_A,ID_B,N_M,N_B,E_(K_AS ) {N_M,ID_A,ID_B},E_(K_BS ) {N_M,ID_A,ID_B}
	S→B : N_M,E_(K_AS ) {N_M,K_AB},E_(K_BS ) {N_B,K_AB}
	B→A : N_M,K_AS,E_(K_AS ) {N_M,K_AB },E_(K_AB ) {N_M,N_B } 
	A→B : E_(K_AB ) {N_M,N_B+1}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_M,K_AB}  using plaintext key K_AS
Tag: 1

Name: Adapted The Otway & Rees Protocol
Paper: Proving Security Protocols Correct
	A→B : ID_A,ID_B,N_M,E_(K_AS ) {N_M,ID_A,ID_B}
	B→S : ID_A,ID_B,N_M,N_B,E_(K_AS ) {N_M,ID_A,ID_B},E_(K_BS ) {N_M,ID_A,ID_B}
	S→B : N_M,E_(K_AS ) {N_M,K_AB},E_(K_BS ) {N_B,K_AB} 
	B→A : N_M,K_BS,E_(K_AS ) {N_M,K_AB },E_(K_AB ) {N_M,N_B }
	A→B : E_(K_AB ) {N_M,N_B+1}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {N_B,K_AB}   using plaintext key K_BS
Tag: 1

Name: The Otway & Rees Protocol
Paper: Proving Security Protocols Correct
	A→B : ID_A,ID_B,N_M,E_(K_AS ) {N_M,ID_A,ID_B}
	B→S : ID_A,ID_B,N_M,N_B,E_(K_AS ) {N_M,ID_A,ID_B},E_(K_BS ) {N_M,ID_A,ID_B}
	S→B : N_M,E_(K_AS ) {ID_B,N_M,K_AB},E_(K_BS ) {ID_A,N_B,K_AB}
	B→A : N_M,E_(K_AB ) {N_a^',N_M},E_(K_AS ) {ID_B,N_M,K_AB}
	A→B : N_M,E_(K_AB ) {N_a^'}

Tag: 0

Name: The Otway & Rees Protocol
Paper: Proving Security Protocols Correct
	A→B : ID_A,ID_B,N_M,E_(K_AS ) {N_M,ID_A,ID_B}
	B→S : ID_A,ID_B,N_M,N_B,E_(K_AS ) {N_M,ID_A,ID_B},E_(K_BS ) {N_M,ID_A,ID_B}
	S→B : N_M,E_(K_AS ) {N_M,K_AB},E_(K_BS ) {ID_A,N_B,K_AB} , K_AS
	B→A : N_M,E_(K_AB ) {N_a^',N_M},E_(K_AS ) {N_M,K_AB}
	A→B : N_M,E_(K_AB ) {N_a^'}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {N_M,K_AB}
Tag: 1


Name: The Otway & Rees Protocol
Paper: Proving Security Protocols Correct
	A→B : ID_A,ID_B,N_M,E_(K_AS ) {N_M,ID_A,ID_B}
	B→S : ID_A,ID_B,N_M,N_B,E_(K_AS ) {N_M,ID_A,ID_B},E_(K_BS ) {N_M,ID_A,ID_B}
	S→B : N_M,K_BS,E_(K_AS ) {ID_B,N_M,K_AB},E_(K_BS ) {ID_A,N_B,K_AB} 
	B→A : N_M,E_(K_AB ) {N_a^',N_M},E_(K_AS ) {ID_B,N_M,K_AB}
	A→B : N_M,E_(K_AB ) {N_a^'}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,N_B,K_AB}   using plaintext key K_BS
Tag: 1

Name: The simpler Otaway-Rees protocol
Paper: Prudent Engineering Practice For Cryptographic Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {N_B,ID_A ,ID_B,K_AB },E_(K_AS ) {N_A,ID_A,ID_B,K_AB }
	B→A : E_(K_AS ) {N_A,ID_A,ID_B,K_AB }

Tag: 0


Name: The simpler Otaway-Rees protocol
Paper: Prudent Engineering Practice For Cryptographic Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {N_B,ID_A ,K_AB },E_(K_AS ) {N_A,ID_A,K_AB }
	B→A : E_(K_AS ) {N_A,ID_A,K_AB }

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {N_A,ID_A,K_AB }
Tag: 1

Name: The simpler Otaway-Rees protocol
Paper: Prudent Engineering Practice For Cryptographic Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : K_AS,E_(K_BS ) {N_B,ID_A ,ID_B,K_AB },E_(K_AS ) {N_A,ID_A,ID_B,K_AB } 
	B→A : E_(K_AS ) {N_A,ID_A,ID_B,K_AB }

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A,ID_A,ID_B,K_AB }   using plaintext key K_AS
Tag: 1

Name: The simpler Otaway-Rees protocol
Paper: Prudent Engineering Practice For Cryptographic Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : K_BS,E_(K_BS ) {N_B,ID_A ,ID_B,K_AB },E_(K_AS ) {N_A,ID_A,ID_B,K_AB } 
	B→A : E_(K_AS ) {N_A,ID_A,ID_B,K_AB }

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {N_B,ID_A ,ID_B,K_AB }   using plaintext key K_BS
Tag: 1

Name: The Adapted Otway-Rees Protocol
Paper: Timed Models for Protocol Security
	A→B : ID_A,ID_B,N_A,E_(K_AS ) {N_A,ID_A,ID_B}
	B→S : ID_A,ID_B,E_(K_AS ) {N_A,ID_A,ID_B},E_(K_BS ) {N_A,N_B,ID_A,ID_B}
	S→B : E_(K_BS ) {E_(K_AS ) {N_A,K_AB},N_B,K_AB}
	B→A : E_(K_AS ) {N_A,K_AB}, E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_BS ) {E_(K_AS ) {N_A,K_AB},N_B,K_AB}
Tag: 1



Name: The Adapted Otway-Rees Protocol
Paper: Timed Models for Protocol Security
	A→B : ID_A,ID_B,N_A,E_(K_AS ) {N_A,ID_A,ID_B}
	B→S : E_(K_AS ) {N_A,ID_A,ID_B},E_(K_BS ) {N_A,N_B,ID_A,ID_B}
	S→B : E_(K_BS ) {E_(K_AS ) {N_A,K_AB},N_B,K_AB,ID_A,ID_B}
	B→A : E_(K_AS ) {N_A,K_AB,ID_A,ID_B}, E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}

Tag: 0

Name: The Adapted Otway-Rees Protocol
Paper: Timed Models for Protocol Security
	A→B : ID_A,ID_B,N_A,E_(K_AS ) {N_A,ID_A,ID_B}
	B→S : E_(K_AS ) {N_A,ID_A,ID_B},E_(K_BS ) {N_A,N_B,ID_A,ID_B}
	S→B : K_AS,E_(K_BS ) {E_(K_AS ) {N_A,K_AB},N_B,K_AB} 
	B→A : E_(K_AS ) {N_A,K_AB}, E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A,K_AB}  using plaintext key K_AS
Tag: 1


Name: The Adapted Otway-Rees Protocol
Paper: Timed Models for Protocol Security
	A→B : ID_A,ID_B,N_A,E_(K_AS ) {N_A,ID_A,ID_B}
	B→S : E_(K_AS ) {N_A,ID_A,ID_B},E_(K_BS ) {N_A,N_B,ID_A,ID_B}
	S→B : K_BS,E_(K_BS ) {E_(K_AS ) {N_A,K_AB},N_B,K_AB} 
	B→A : E_(K_AS ) {N_A,K_AB}, E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {E_(K_AS ) {N_A,K_AB},N_B,K_AB}   using plaintext key K_BS
Tag: 1

Name: Kao-Chow protocol
Paper: An efficient and secure authentication protocol using uncertified keys
	A→S : ID_A,ID_B,N_A
	S→B : E_(K_AS ) {ID_A,ID_B,N_A,K_AB},E_(K_BS ) {ID_A,ID_B,N_A,K_AB}
	B→A : N_B,E_(K_AS ) {ID_A,ID_B,N_A,K_AB},E_(K_AB ) {N_A}
	A→B : E_(K_AB ) {N_B}

Tag: 0


Name: Kao-Chow protocol
Paper: An efficient and secure authentication protocol using uncertified keys
	A→S : ID_A,ID_B,N_A
	S→B : E_(K_AS ) {N_A,K_AB},E_(K_BS ) {N_A,K_AB}
	B→A : N_B,E_(K_AS ) {N_A,K_AB},E_(K_AB ) {N_A}
	A→B : E_(K_AB ) {N_B}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 2 i.e. E_(K_AS ) {N_A,K_AB},E_(K_BS ) {N_A,K_AB}
Tag: 1


Name: Kao-Chow protocol
Paper: An efficient and secure authentication protocol using uncertified keys
	A→S : ID_A,ID_B,N_A
	S→B : K_BS,E_(K_AS ) {ID_A,ID_B,N_A,K_AB},E_(K_BS ) {ID_A,ID_B,N_A,K_AB} 
	B→A : N_B,E_(K_AS ) {ID_A,ID_B,N_A,K_AB},E_(K_AB ) {N_A}
	A→B : E_(K_AB ) {N_B}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,ID_B,N_A,K_AB}   using plaintext key K_BS
Tag: 1

Name: Kao-Chow protocol
Paper: An efficient and secure authentication protocol using uncertified keys
	A→S : ID_A,ID_B,N_A
	S→B : K_AS,E_(K_AS ) {ID_A,ID_B,N_A,K_AB},E_(K_BS ) {ID_A,ID_B,N_A,K_AB} 
	B→A : N_B,E_(K_AS ) {ID_A,ID_B,N_A,K_AB},E_(K_AB ) {N_A}
	A→B : E_(K_AB ) {N_B}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_A,ID_B,N_A,K_AB}  using plaintext key K_AS
Tag: 1

Name: MUAP Protocol
Paper : Authentication of mobile users
	A→B : ID_A,T_A,N_A,hash{K_AB,ID_A,T_A,N_A}
	B→S : ID_A,ID_B,T_A,N_A,N_B,E_(K_BS ) {N_a^' },hash{K_BS,N_B,N_a^',ID_B}
	S→B : E_(K_BS ) {ID_S,K_AB,ID_B,ID_A,N_a^'}
	B→A : E_(K_AB ) {ID_S,K_AB^'^',ID_B,ID_A}, E_(K_AB^'^' ) {N_A,N_B }
	A→B : E_(K_AB^'^' ) {N_B+1}

Tag: 0


Name: MUAP Protocol
Paper : Authentication of mobile users
	A→B : ID_A,T_A,N_A,hash{K_AB,ID_A,T_A,N_A}
	B→S : ID_A,ID_B,T_A,N_A,N_B,E_(K_BS ) {N_a^' },hash{K_BS,N_B,N_a^',ID_B}
	S→B : K_AB,E_(K_BS ) {ID_S,K_AB,ID_B,ID_A,N_a^'} 
	B→A : E_(K_AB ) {ID_S,K_AB^'^',ID_B,ID_A}, E_(K_AB^'^' ) {N_A,N_B }
	A→B : E_(K_AB^'^' ) {N_B+1}

Flaws: The adversary can obtain session key K_AB SINCE IT'S sent in plaintext
Tag: 1


Name: MUAP Protocol
Paper : Authentication of mobile users
	A→B : ID_A,T_A,N_A,hash{K_AB,ID_A,T_A,N_A}
	B→S : ID_A,ID_B,T_A,N_A,N_B,E_(K_BS ) {N_a^' },hash{K_BS,N_B,N_a^',ID_B}
	S→B : K_BS,E_(K_BS ) {ID_S,K_AB,ID_B,ID_A,N_a^'} 
	B→A : E_(K_AB ) {ID_S,K_AB^'^',ID_B,ID_A}, E_(K_AB^'^' ) {N_A,N_B }
	A→B : E_(K_AB^'^' ) {N_B+1}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_S,K_AB,ID_B,ID_A,N_a^'}  using plaintext key K_BS
Tag: 1

Name: Peer to Peer Authentication Protocol
Paper : Authentication For Distributed System
	A→S : ID_A,ID_B
	S→A : Sig_(Pri_S ) {K_(Pub_B ),ID_B}
	A→B : E_(Pub_B ) {N_A,ID_A}
	B→S : ID_B,ID_A, E_(Pub_S ) {N_A }
	S→B : E_(Pub_B ) {Sig_(Pri_S ) {N_A,K_AB,ID_B }},Sig_(Pri_S ) {K_(Pub_A ),ID_A }
	B→A : E_(Pub_A ) {Sig_(Pri_S ) {N_A,K_AB,ID_B },N_B }
	A→B : E_(K_AB ) {N_B}

Tag: 0


Name: Peer to Peer Authentication Protocol
Paper : Authentication For Distributed System
	A→S : ID_A,ID_B
	S→A : Sig_(Pri_S ) {K_(Pub_B ),ID_B}
	A→B : E_(Pub_B ) {N_A,ID_A}
	B→S : ID_B,ID_A, E_(Pub_S ) {N_A }
	S→B : E_(Pub_B ) {Sig_(Pri_S ) {N_A,K_AB }},Sig_(Pri_S ) {K_(Pub_A ),ID_A }
	B→A : E_(Pub_A ) {Sig_(Pri_S ) {N_A,K_AB },N_B }
	A→B : E_(K_AB ) {N_B}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 5-6 i.e. E_(Pub_A ) {Sig_(Pri_S ) {N_A,K_AB },N_B }
Tag: 1




Name: Peer to Peer Authentication Protocol
Paper : Authentication For Distributed System
	A→S : ID_A,ID_B
	S→A : Sig_(Pri_S ) {K_(Pub_B ),ID_B}
	A→B : E_(Pub_B ) {N_A,ID_A}
	B→S : ID_B,ID_A, E_(Pub_S ) {N_A }
	S→B : Pri_B,Sig_(Pri_S ) {K_(Pub_A ),ID_A },E_(Pub_B ) {Sig_(Pri_S ) {N_A,K_AB,ID_B }} 
	B→A : E_(Pub_A ) {Sig_(Pri_S ) {N_A,K_AB,ID_B },N_B }
	A→B : E_(K_AB ) {N_B}

Flaws: The adversary can obtain session key K_AB by decrypting E_(Pub_B ) {Sig_(Pri_S ) {N_A,K_AB,ID_B }}   using plaintext key Pri_B
Tag: 1

Name: Peer to Peer Authentication Protocol
Paper : Authentication For Distributed System
	A→S : ID_A,ID_B
	S→A : Sig_(Pri_S ) {K_(Pub_B ),ID_B}
	A→B : E_(Pub_B ) {N_A,ID_A}
	B→S : ID_B,ID_A, E_(Pub_S ) {N_A }
	S→B : Pri_A,Sig_(Pri_S ) {K_(Pub_A ),ID_A },E_(Pub_B ) {Sig_(Pri_S ) {N_A,K_AB,ID_B }} 
	B→A : E_(Pub_A ) {Sig_(Pri_S ) {N_A,K_AB,ID_B },N_B } 
	A→B : E_(K_AB ) {N_B}

Flaws: The adversary can obtain session key K_AB by decrypting E_(Pub_A ) {Sig_(Pri_S ) {N_A,K_AB,ID_B },N_B }    using plaintext key Pri_A
Tag: 1

Name: Bellare–Rogaway 3PKD protocol Key
Paper: Examining Indistinguishability Based Proof Models for Key Establishment Protocols
	A→B : ID_A,N_A
	B→S : ID_A,ID_B,N_A,N_B
	S→A : E_(K_AS ) {K_AB}, hash{K_AS,ID_A,ID_B,N_A,E_(K_AS ) {K_AB}}
	S→B : E_(K_BS ) {K_AB}, hash{K_BS,ID_A,ID_B,N_B,E_(K_BS ) {K_AB}}

Tag: 0


Name: Bellare–Rogaway 3PKD protocol Key
Paper: Examining Indistinguishability Based Proof Models for Key Establishment Protocols
	A→B : ID_A,N_A
	B→S : ID_A,ID_B,N_A,N_B
	S→A : E_(K_AS ) {K_AB}, hash{K_AS,N_A,E_(K_AS ) {K_AB}}
	S→B : E_(K_BS ) {K_AB}, hash{K_BS,N_B,E_(K_BS ) {K_AB}}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. hash{K_AS,N_A,E_(K_AS ) {K_AB}}
Tag: 1


Name: Bellare–Rogaway 3PKD protocol Key
Paper: Examining Indistinguishability Based Proof Models for Key Establishment Protocols
	A→B : ID_A,N_A
	B→S : ID_A,ID_B,N_A,N_B
	S→A : K_AS,E_(K_AS ) {K_AB}, hash{K_AS,ID_A,ID_B,N_A,E_(K_AS ) {K_AB}} 
	S→B : E_(K_BS ) {K_AB}, hash{K_BS,ID_A,ID_B,N_B,E_(K_BS ) {K_AB}}

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {K_AB}  using plaintext key K_AS
Tag: 1

Name: Bellare–Rogaway 3PKD protocol Key
Paper: Examining Indistinguishability Based Proof Models for Key Establishment Protocols
	A→B : ID_A,N_A
	B→S : ID_A,ID_B,N_A,N_B
	S→A : K_BS,E_(K_AS ) {K_AB}, hash{K_AS,ID_A,ID_B,N_A,E_(K_AS ) {K_AB}} 
	S→B : E_(K_BS ) {K_AB}, hash{K_BS,ID_A,ID_B,N_B,E_(K_BS ) {K_AB}}
	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {K_AB}  using plaintext key K_BS
Tag: 1

Name: Improved Bellare–Rogaway 3PKD protocol Key
Paper : Examining Indistinguishability-Based Proof Models for Key Establishment Protocols
	A→B : ID_A,N_A
	B→S : ID_A,ID_B,N_A,N_B
	S→A : N_B,E_(K_AS ) {K_AB}, hash{K_AS,ID_A,ID_B,N_A,N_B,E_(K_AS ) {K_AB}}
	S→B : E_(K_BS ) {K_AB}, hash{K_BS,ID_A,ID_B,N_A,N_B,E_(K_BS ) {K_AB}}
	A→B : E_(K_AB ) {N_A,N_B,ID_B}


Tag: 0


Name: Improved Bellare–Rogaway 3PKD protocol Key
Paper : Examining Indistinguishability-Based Proof Models for Key Establishment Protocols
	A→B : ID_A,N_A
	B→S : ID_A,ID_B,N_A,N_B
	S→A : N_B,E_(K_AS ) {K_AB}, hash{K_AS,ID_A,N_A,N_B,E_(K_AS ) {K_AB}}
	S→B : E_(K_BS ) {K_AB}, hash{K_BS,ID_A,ID_B,N_A,N_B,E_(K_BS ) {K_AB}}
	A→B : E_(K_AB ) {N_A,N_B,ID_B}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. hash{K_AS,ID_A,N_A,N_B,E_(K_AS ) {K_AB}}
Tag: 1


Name: Improved Bellare–Rogaway 3PKD protocol Key
Paper : Examining Indistinguishability-Based Proof Models for Key Establishment Protocols
	A→B : ID_A,N_A
	B→S : ID_A,ID_B,N_A,N_B
	S→A : N_B,E_(K_AS ) {K_AB}, hash{K_AS,ID_A,ID_B,N_A,N_B,E_(K_AS ) {K_AB}}
	S→B : K_AS,E_(K_BS ) {K_AB}, hash{K_BS,ID_A,ID_B,N_A,N_B,E_(K_BS ) {K_AB}} 
	A→B : E_(K_AB ) {N_A,N_B,ID_B}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {K_AB}  using plaintext key K_AS
Tag: 1

Name: Improved Bellare–Rogaway 3PKD protocol Key
Paper : Examining Indistinguishability-Based Proof Models for Key Establishment Protocols
	A→B : ID_A,N_A
	B→S : ID_A,ID_B,N_A,N_B
	S→A : N_B,E_(K_AS ) {K_AB}, hash{K_AS,ID_A,ID_B,N_A,N_B,E_(K_AS ) {K_AB}}
	S→B : K_BS,E_(K_BS ) {K_AB}, hash{K_BS,ID_A,ID_B,N_A,N_B,E_(K_BS ) {K_AB}} 
	A→B : E_(K_AB ) {N_A,N_B,ID_B}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {K_AB}  using plaintext key K_BS
Tag: 1


Name: Improved Bellare–Rogaway 3PKD protocol Key
Paper : Examining Indistinguishability-Based Proof Models for Key Establishment Protocols
	A→B : ID_A,N_A
	B→S : ID_A,ID_B,N_A,N_B
	S→A : N_B,E_(K_AS ) {K_AB}, hash{K_AS,ID_A,ID_B,N_A,N_B,E_(K_AS ) {K_AB}}
	S→B : E_(K_BS ) {K_AB}, hash{K_BS,ID_A,ID_B,N_A,N_B,E_(K_BS ) {K_AB}}
	A→B : E_(K_AB ) {N_A,N_B,ID_B}
	B→A : E_(K_AB ) {N_A+1}

Tag: 0


Name: Improved Bellare–Rogaway 3PKD protocol Key
Paper : Examining Indistinguishability-Based Proof Models for Key Establishment Protocols
	A→B : ID_A,N_A
	B→S : ID_A,ID_B,N_A,N_B
	S→A : N_B,E_(K_AS ) {K_AB}, hash{K_AS,ID_A,N_A,N_B,E_(K_AS ) {K_AB}}
	S→B : E_(K_BS ) {K_AB}, hash{K_BS,ID_A,ID_B,N_A,N_B,E_(K_BS ) {K_AB}}
	A→B : E_(K_AB ) {N_A,N_B,ID_B}
	B→A : E_(K_AB ) {N_A+1}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. hash{K_AS,ID_A,N_A,N_B,E_(K_AS ) {K_AB}}
Tag: 1



Name: Improved Bellare–Rogaway 3PKD protocol Key
Paper : Examining Indistinguishability-Based Proof Models for Key Establishment Protocols
	A→B : ID_A,N_A
	B→S : ID_A,ID_B,N_A,N_B
	S→A : N_B,E_(K_AS ) {K_AB}, hash{K_AS,ID_A,ID_B,N_A,N_B,E_(K_AS ) {K_AB}}
	S→B : K_AS,E_(K_BS ) {K_AB}, hash{K_BS,ID_A,ID_B,N_A,N_B,E_(K_BS ) {K_AB}} 
	A→B : E_(K_AB ) {N_A,N_B,ID_B}
	B→A : E_(K_AB ) {N_A+1}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {K_AB}  using plaintext key K_AS
Tag: 1

Name: Improved Bellare–Rogaway 3PKD protocol Key
Paper : Examining Indistinguishability-Based Proof Models for Key Establishment Protocols
	A→B : ID_A,N_A
	B→S : ID_A,ID_B,N_A,N_B
	S→A : N_B,E_(K_AS ) {K_AB}, hash{K_AS,ID_A,ID_B,N_A,N_B,E_(K_AS ) {K_AB}}
	S→B : K_BS,E_(K_BS ) {K_AB}, hash{K_BS,ID_A,ID_B,N_A,N_B,E_(K_BS ) {K_AB}} 
	A→B : E_(K_AB ) {N_A,N_B,ID_B}
	B→A : E_(K_AB ) {N_A+1}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {K_AB}  using plaintext key K_BS
Tag: 1


Name: The SSL Protocol
Paper: Prudent Engineering Practice For Cryptographic Protocols
	A→B : E_(Pub_B ) {K_AB}
	B→A : E_(K_AB ) {N_B}
	A→B : E_(K_AB ) {Cert_A,Sig_(Pri_A ) {N_B}}

Tag: 0


Name: The SSL Protocol
Paper: Prudent Engineering Practice For Cryptographic Protocols
	A→B : Pri_B,E_(Pub_B ) {K_AB} 
	B→A : E_(K_AB ) {N_B}
	A→B : E_(K_AB ) {Cert_A,Sig_(Pri_A ) {N_B}}

Flaws: The adversary can obtain session key K_AB by decrypting E_(Pub_B ) {K_AB}   using plaintext key Pri_B
Tag: 1

Name: A-B-K ticket distribution protocol
Paper : The KryptoKnight Family of Light-Weight Protocols for Authentication and Key
	A→B : ID_A,N_A
	B→S : N_A,N_B,ID_A,ID_B
	S→B : N_S,T_S, E_(K_AS ) {N_A,T_S,K_AB},E_(K_BS ) {ID_A,N_B,T_S,K_AB}
	B→A : N_S,T_S, N_B,E_(K_AS ) {N_A,T_S,K_AB },hash{K_AB,N_A,N_B,ID_B}
	A→B : hash{K_AS,N_A,N_S},hash{K_AB,N_A,N_B}
	B→S : hash{K_AS,N_A,N_S},hash{K_BS,N_B,N_S}
	
Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3-4 i.e. E_(K_AS ) {N_A,T_S,K_AB }
Tag: 1


Name: A-B-K ticket distribution protocol
Paper : The KryptoKnight Family of Light-Weight Protocols for Authentication and Key
	A→B : ID_A,N_A
	B→S : N_A,N_B,ID_A,ID_B
	S→B : N_S,T_S, E_(K_AS ) {ID_B,N_A,T_S,K_AB},E_(K_BS ) {ID_A,N_B,T_S,K_AB}
	B→A : N_S,T_S,K_AS,N_B,E_(K_AS ) {ID_B,N_A,T_S,K_AB },hash{K_AB,N_A,N_B,ID_B} 
	A→B : hash{K_AS,N_A,N_S},hash{K_AB,N_A,N_B}
	B→S : hash{K_AS,N_A,N_S},hash{K_BS,N_B,N_S}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_B,N_A,T_S,K_AB}  using plaintext key K_AS
Tag: 1

Name: A-B-K ticket distribution protocol
Paper : The KryptoKnight Family of Light-Weight Protocols for Authentication and Key
	A→B : ID_A,N_A
	B→S : N_A,N_B,ID_A,ID_B
	S→B : N_S,T_S,K_BS, E_(K_AS ) {ID_B,N_A,T_S,K_AB},E_(K_BS ) {ID_A,N_B,T_S,K_AB} 
	B→A : N_S,T_S,N_B,E_(K_AS ) {ID_B,N_A,T_S,K_AB },hash{K_AB,N_A,N_B,ID_B}
	A→B : hash{K_AS,N_A,N_S},hash{K_AB,N_A,N_B}
	B→S : hash{K_AS,N_A,N_S},hash{K_BS,N_B,N_S}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,N_B,T_S,K_AB}   using plaintext key K_BS
Tag: 1


Name: A-B-K ticket distribution protocol(Push Scenario)
Paper : The KryptoKnight Family of Light-Weight Protocols for Authentication and Key Distribution
	A→B : ID_A,N_A
	B→A : ID_B,N_B,hash{K_BS,N_A ,N_B,ID_B}
	A→S : N_A,N_B,ID_A,ID_B, hash{K_BS,N_A ,N_B,ID_B}
	S→A : N_S,T_S, E_(K_AS ) {ID_B,N_A,T_S,K_AB },E_(K_BS ) {ID_A,N_B,T_S,K_AB },hash{K_AB,N_A,N_B,ID_B}
	A→B : N_S,T_S, E_(K_AS ) {ID_B,N_A,T_S,K_AB },E_(K_BS ) {ID_A,N_B,T_S,K_AB },hash{K_AB,N_A,N_B,ID_B}

Tag: 0

Name: A-B-K ticket distribution protocol(Push Scenario)
Paper : The KryptoKnight Family of Light-Weight Protocols for Authentication and Key Distribution
	A→B : ID_A,N_A
	B→A : ID_B,N_B,hash{K_BS,N_A ,N_B,ID_B}
	A→S : N_A,N_B,ID_A,ID_B, hash{K_BS,N_A ,N_B,ID_B}
	S→A : N_S,T_S,K_AS, E_(K_AS ) {N_A,T_S,K_AB },E_(K_BS ) {ID_A,N_B,T_S,K_AB },hash{K_AB,N_A,N_B} 
	A→B : N_S,T_S, E_(K_AS ) {ID_B,N_A,T_S,K_AB },E_(K_BS ) {ID_A,N_B,T_S,K_AB },hash{K_AB,N_A,N_B,ID_B}

	
Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 4 i.e. E_(K_AS ) {N_A,T_S,K_AB },
Tag: 1

Name: A-B-K ticket distribution protocol(Push Scenario)
Paper : The KryptoKnight Family of Light-Weight Protocols for Authentication and Key Distribution
	A→B : ID_A,N_A
	B→A : ID_B,N_B,hash{K_BS,N_A ,N_B,ID_B}
	A→S : N_A,N_B,ID_A,ID_B, hash{K_BS,N_A ,N_B,ID_B}
	S→A : N_S,T_S, E_(K_AS ) {ID_B,N_A,T_S,K_AB },E_(K_BS ) {ID_A,N_B,T_S,K_AB },hash{K_AB,N_A,N_B,ID_B}
	A→B : N_S,T_S,K_BS, E_(K_AS ) {ID_B,N_A,T_S,K_AB },E_(K_BS ) {ID_A,N_B,T_S,K_AB },hash{K_AB,N_A,N_B,ID_B} 


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,N_B,T_S,K_AB } using plaintext key K_BS
Tag: 1


Name: A-B-K ticket distribution protocol(Push Scenario)
Paper : The KryptoKnight Family of Light-Weight Protocols for Authentication and Key Distribution
	A→B : ID_A,N_A
	B→A : ID_B,N_B,hash{K_BS,N_A ,N_B,ID_B}
	A→S : N_A,N_B,ID_A,ID_B, hash{K_BS,N_A ,N_B,ID_B}
	S→A : N_S,T_S, E_(K_AS ) {ID_B,N_A,T_S,K_AB },E_(K_BS ) {ID_A,N_B,T_S,K_AB },hash{K_AB,N_A,N_B,ID_B}
	A→B : N_S,T_S,K_AS, E_(K_AS ) {ID_B,N_A,T_S,K_AB },E_(K_BS ) {ID_A,N_B,T_S,K_AB },hash{K_AB,N_A,N_B,ID_B} 


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_B,N_A,T_S,K_AB } using plaintext key K_AS
Tag: 1

Name: A-B-K ticket distribution protocol(Push Scenario)
Paper : The KryptoKnight Family of Light-Weight Protocols for Authentication and Key
	A→S : N_A,ID_A,ID_B
	S→A : N_S,T_S, E_(K_AS ) {ID_B,N_A,T_S,K_AB },E_(K_BS ) {ID_A,T_S,K_AB }
	A→B : ID_A,N_A,E_(K_AS ) {ID_B,N_A,T_S,K_AB },E_(K_BS ) {ID_A,T_S,K_AB },N_S,T_S
	B→A : ID_B,N_B,K_AS,hash{K_BS,N_B,N_S}, hash{K_AB,N_A,ID_B}
	A→B : hash{K_AB,N_A,N_B }
	A→S : hash{K_AS,N_A,N_S},hash{K_BS,N_B,N_S}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_B,N_A,T_S,K_AB } using plaintext key K_AS
Tag: 1


Name: A-B-K ticket distribution protocol(Push Scenario)
Paper : The KryptoKnight Family of Light-Weight Protocols for Authentication and Key
	A→S : N_A,ID_A,ID_B
	S→A : N_S,T_S, E_(K_AS ) {ID_B,N_A,T_S,K_AB },E_(K_BS ) {ID_A,T_S,K_AB }
	A→B : ID_A,N_A,E_(K_AS ) {ID_B,N_A,T_S,K_AB },E_(K_BS ) {ID_A,T_S,K_AB },N_S,T_S
	B→A : K_BS,ID_B,N_B,hash{K_BS,N_B,N_S}, hash{K_AB,N_A,ID_B} 
	A→B : hash{K_AB,N_A,N_B }
	A→S : hash{K_AS,N_A,N_S},hash{K_BS,N_B,N_S}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,T_S,K_AB } using plaintext key K_BS
Tag: 1

Name: The Encrypted Key Exchange Protocol (EKE) with Weak Password
Paper : A Compiler for the Analysis of Security Protocol
	A→B : ID_A, E_(Password_A ) {K_(Pub_A )}
	B→A : E_(Password_A ) {E_(Pub_A ) {K_AB}}
	A→B : E_(K_AB ) {N_A}
	B→A : E_(K_AB ) {N_A,N_B}
	A→B : E_(K_AB ) {N_B}

Tag: 0


Name: The Encrypted Key Exchange Protocol (EKE) with Weak Password
Paper : A Compiler for the Analysis of Security Protocol
	A→B : ID_A, Password_A , Pri_A,E_(Password_A ) {K_(Pub_A )} 
	B→A : E_(Password_A ) {E_(Pub_A ) {K_AB}}
	A→B : E_(K_AB ) {N_A}
	B→A : E_(K_AB ) {N_A,N_B}
	A→B : E_(K_AB ) {N_B}


Flaws: The adversary can obtain session key K_AB by decrypting E_(Password_A ) {K_(Pub_A )}  using plaintext key Password_A , Pri_A
Tag: 1


Name: Simple Key Distribution Protocol
Paper : Towards a Completeness Result for Model Checking of Security Protocol
	A→B : Sig_(Pri_A ) {E_(Pub_B ) {ID_A,K_AB,N_A}}
	B→A : E_(K_AB ) {ID_B,ID_A,N_A,N_B }
	A→B : E_(K_AB ) {ID_A,ID_B,N_B }

Tag: 0


Name: Simple Key Distribution Protocol
Paper : Towards a Completeness Result for Model Checking of Security Protocol
	A→B : Pri_A,Sig_(Pri_A ) {E_(Pub_B ) {ID_A,K_AB,N_A}} 
	B→A : E_(K_AB ) {ID_B,ID_A,N_A,N_B }
	A→B : E_(K_AB ) {ID_A,ID_B,N_B }

Flaws: The adversary can obtain session key K_AB by decrypting Sig_(Pri_A ) {E_(Pub_B ) {ID_A,K_AB,N_A}}   using plaintext key  Pri_A
Tag: 1

Name: Simple Key Distribution Protocol
Paper : A Compiler for the Analysis of Security Protocol
	A→B : Sig_(Pri_A ) {N_A,E_(Pub_B ) {ID_A,K_AB }}
	B→A : E_(K_AB ) {N_A,N_B },Sig_(Pri_B ) {E_(Pub_A ) {ID_B,K_AB }}
	A→B : E_(K_AB ) {N_B+1}

Tag: 0

Name: Simple Key Distribution Protocol
Paper : A Compiler for the Analysis of Security Protocol
	A→B : Sig_(Pri_A ) {N_A,E_(Pub_B ) {ID_A,K_AB }}
	B→A : Pri_A,E_(K_AB ) {N_A,N_B },Sig_(Pri_B ) {E_(Pub_A ) {ID_B,K_AB }} 
	A→B : E_(K_AB ) {N_B+1}

Flaws: The adversary can obtain session key K_AB by decrypting Sig_(Pri_B ) {E_(Pub_A ) {ID_B,K_AB }}  using plaintext key  Pri_A
Tag: 1

Name: Simple Key Distribution Protocol
Paper : A Compiler for the Analysis of Security Protocol
	A→B : Sig_(Pri_A ) {N_A,E_(Pub_B ) {ID_A,K_AB }}
	B→A : Pri_B,E_(K_AB ) {N_A,N_B } ,Sig_(Pri_B ) {E_(Pub_A ) {ID_B,K_AB }}
	A→B : E_(K_AB ) {N_B+1}


Flaws: The adversary can obtain session key K_AB by decrypting Sig_(Pri_A ) {N_A,E_(Pub_B ) {ID_A,K_AB }}   using plaintext key  Pri_B
Tag: 1


Name: Simple Key Distribution Protocol
Paper : A Compiler for the Analysis of Security Protocol
	A→B : Sig_(Pri_A ) {E_(Pub_B ) {ID_A,K_AB,T_A }}
	B→A : Sig_(Pri_B ) {E_(Pub_A ) {ID_B,K_AB,T_B }}

Tag: 0

Name: Simple Key Distribution Protocol
Paper : A Compiler for the Analysis of Security Protocol
	A→B : Sig_(Pri_A ) {E_(Pub_B ) {ID_A,K_AB,T_A }}
	B→A : Pri_A,Sig_(Pri_B ) {E_(Pub_A ) {ID_B,K_AB,T_B }} 

Flaws: The adversary can obtain session key K_AB by decrypting Sig_(Pri_B ) {E_(Pub_A ) {ID_B,K_AB,T_B }}  using plaintext key  Pri_A
Tag: 1


Name: Simple Key Distribution Protocol
Paper : A Compiler for the Analysis of Security Protocol
	A→B : Sig_(Pri_A ) {E_(Pub_B ) {ID_A,K_AB,T_A }}
	B→A : Pri_B,Sig_(Pri_B ) {E_(Pub_A ) {ID_B,K_AB,T_B }} 


Flaws: The adversary can obtain session key K_AB by decrypting Sig_(Pri_A ) {E_(Pub_B ) {ID_A,K_AB,T_A }}  using plaintext key  Pri_B
Tag: 1


Name: Simple Key Distribution Protocol
Paper : A Survey of Authentication Protocol Literature Version 1.0
	A→B : ID_A,E_(Pub_B ) {N_A,ID_A}
	B→A : E_(Pub_A ) {N_A+1,N_B,ID_B,K_AB }
	A→B : E_(Pub_B ) {N_B+1}

Tag: 0



Name: Simple Key Distribution Protocol
Paper : A Survey of Authentication Protocol Literature Version 1.0
	A→B : ID_A,E_(Pub_B ) {N_A,ID_A}
	B→A : Pri_A,E_(Pub_A ) {N_A+1,N_B,ID_B,K_AB } 
	A→B : E_(Pub_B ) {N_B+1}


Flaws: The adversary can obtain session key K_AB by decrypting E_(Pub_A ) {N_A+1,N_B,ID_B,K_AB }   using plaintext key  Pri_A
Tag: 1



Name: Simple Key Distribution Protocol
Paper : A Survey of Authentication Protocol Literature Version 1.0
	A→B : ID_A,E_(Pub_B ) {N_A,ID_A}
	B→A : E_(Pub_A ) {N_A+1,N_B,ID_B,K_AB }
	A→B : E_(K_AB ) {N_B+1}

Tag: 0


Name: Simple Key Distribution Protocol
Paper : A Survey of Authentication Protocol Literature Version 1.0
	A→B : ID_A,E_(Pub_B ) {N_A,ID_A}
	B→A : Pri_A,E_(Pub_A ) {N_A+1,N_B,ID_B,K_AB } 
	A→B : E_(K_AB ) {N_B+1}


Flaws: The adversary can obtain session key K_AB by decrypting E_(Pub_A ) {N_A+1,N_B,ID_B,K_AB } using plaintext key  Pri_A
Tag: 1

Name: Adapted Simple Key Distribution Protocol
Paper : A Compiler for the Analysis of Security Protocol
	A→B : Sig_(Pri_A ) {E_(Pub_B ) {ID_A,ID_B,K_AB},ID_B,N_A}
	B→A : Sig_(Pri_B ) {E_(Pub_A ) {ID_B,ID_A,N_A,K_AB},ID_A}


Tag: 0

Name: Adapted Simple Key Distribution Protocol
Paper : A Compiler for the Analysis of Security Protocol
	A→B : Sig_(Pri_A ) {E_(Pub_B ) {ID_A,ID_B,K_AB},ID_B,N_A}
	B→A : Pri_A,Sig_(Pri_B ) {E_(Pub_A ) {ID_B,ID_A,N_A,K_AB},ID_A} 


Flaws: The adversary can obtain session key K_AB by decrypting Sig_(Pri_B ) {E_(Pub_A ) {ID_B,ID_A,N_A,K_AB},ID_A}  using plaintext key  Pri_A
Tag: 1


Name: Adapted Simple Key Distribution Protocol
Paper : A Compiler for the Analysis of Security Protocol
	A→B : Pri_B,Sig_(Pri_A ) {E_(Pub_B ) {ID_A,ID_B,K_AB},ID_B,N_A} 
	B→A : Sig_(Pri_B ) {E_(Pub_A ) {ID_B,ID_A,N_A,K_AB},ID_A}


Flaws: The adversary can obtain session key K_AB by decrypting Sig_(Pri_A ) {E_(Pub_B ) {ID_A,ID_B,K_AB},ID_B,N_A}   using plaintext key  Pri_B
Tag: 1



Name: Key Exchange Protocol Phase-1 Using the NRL Protocol Analyzer
Paper: Analysis of the Internet Key Exchange Protocol Using the NRL Protocol Analyzer
	A→B : a^x,N_A,ID_A
	B→A : a^y,N_B,ID_B,Sig_(Pri_B ) {hash{K_AB,a^y,a^x,ID_B }}
	A→B : Sig_(Pri_A ) {hash{K_AB,a^x,a^y,ID_A }}

Tag: 0


Name: Key Exchange Protocol Phase-1 Using the NRL Protocol Analyzer
Paper: Analysis of the Internet Key Exchange Protocol Using the NRL Protocol Analyzer
	A→B : a^x,N_A,ID_A ,y
	B→A : a^y,N_B,ID_B,Sig_(Pri_B ) {hash{K_AB,a^y,a^x,ID_B }}
	A→B : Sig_(Pri_A ) {hash{K_AB,a^x,a^y,ID_A }}
	
Flaws: The adversary can obtain session key a^x^y  using plaintext secret y
Tag: 1


Name: Key Exchange Protocol Phase-1 Using the NRL Protocol Analyzer
Paper: Analysis of the Internet Key Exchange Protocol Using the NRL Protocol Analyzer
	A→B : a^x,N_A,ID_A ,x
	B→A : a^y,N_B,ID_B,Sig_(Pri_B ) {hash{K_AB,a^y,a^x,ID_B }}
	A→B : Sig_(Pri_A ) {hash{K_AB,a^x,a^y,ID_A }}

Flaws: The adversary can obtain session key a^x^y  using plaintext secret x
Tag: 1

Name: Key Exchange Protocol Phase-2 Using the NRL Protocol Analyzer
Paper: Analysis of the Internet Key Exchange Protocol Using the NRL Protocol Analyzer
	A→B : E_(K_AB ) {hash{K_AB,N_M,N_A,a^x },N_A,a^x}
	B→A : E_(K_AB ) {hash{K_AB,N_M,N_A,N_B,a^y },N_B,a^y}
	A→B : hash{K_AB,N_M,N_A,N_B}

Tag: 0


Name: Key Exchange Protocol Phase-2 Using the NRL Protocol Analyzer
Paper: Analysis of the Internet Key Exchange Protocol Using the NRL Protocol Analyzer
	A→B : E_(K_AB ) {hash{K_AB,N_M,N_A,a^x },N_A,a^x}
	B→A : x,K_AB,E_(K_AB ) {hash{K_AB,N_M,N_A,N_B,a^y },N_B,a^y}
	A→B : hash{K_AB,N_M,N_A,N_B}

Flaws: The adversary can obtain session key a^x^y  using plaintext secret x,K_AB
Tag: 1

Name: Key Exchange Protocol Phase-2 Using the NRL Protocol Analyzer
Paper: Analysis of the Internet Key Exchange Protocol Using the NRL Protocol Analyzer
	A→B : y,K_AB,E_(K_AB ) {hash{K_AB,N_M,N_A,a^x },N_A,a^x}
	B→A : E_(K_AB ) {hash{K_AB,N_M,N_A,N_B,a^y },N_B,a^y}
	A→B : hash{K_AB,N_M,N_A,N_B}

Flaws: The adversary can obtain session key a^x^y  using plaintext secret y,K_AB
Tag: 1

Name: Adapted Key Exchange Protocol Phase-2 Using the NRL Protocol Analyzer
Paper: Analysis of the Internet Key Exchange Protocol Using the NRL Protocol Analyzer
	A→B : E_(K_AB ) {hash{K_AB,N_M,N_A,a^x,ID_A },N_A,a^x,ID_A}
	B→A : E_(K_AB ) {hash{K_AB,N_M,N_A,N_B,a^y,ID_B },N_B,a^y,ID_B}
	A→B : hash{K_AB,N_M,N_A,N_B,ID_B}

Tag: 0

Name: Adapted Key Exchange Protocol Phase-2 Using the NRL Protocol Analyzer
Paper: Analysis of the Internet Key Exchange Protocol Using the NRL Protocol Analyzer
	A→B : E_(K_AB ) {hash{K_AB,N_M,N_A,a^x,ID_A },N_A,a^x,ID_A}
	B→A : E_(K_AB ) {hash{K_AB,N_M,N_A,N_B,a^y,ID_B },N_B,a^y,ID_B}
	A→B : x,K_AB,hash{K_AB,N_M,N_A,N_B,ID_B}


Flaws: The adversary can obtain session key a^x^y  using plaintext secret x,K_AB
Tag: 1

Name: Adapted Key Exchange Protocol Phase-2 Using the NRL Protocol Analyzer
Paper: Analysis of the Internet Key Exchange Protocol Using the NRL Protocol Analyzer
	A→B : E_(K_AB ) {hash{K_AB,N_M,N_A,a^x,ID_A },N_A,a^x,ID_A}
	B→A : y,K_AB,E_(K_AB ) {hash{K_AB,N_M,N_A,N_B,a^y,ID_B },N_B,a^y,ID_B}
	A→B : hash{K_AB,N_M,N_A,N_B,ID_B}

Flaws: The adversary can obtain session key a^x^y  using plaintext secret y,K_AB
Tag: 1

Name: LSH-3PEKE
Paper: A Novel three-party encrypted key exchange protocol
	A→B : ID_A,E_(Pub_S ) {K_AS,a^x,Password_A}
	B→S : ID_A,E_(Pub_S ) {K_AS,a^x,Password_A},E_(Pub_S ) {K_BS,a^y,Password_B}
	S→B : E_(K_AS ) {ID_B,a^y},E_(K_BS ) {ID_A,a^x}
	B→A : E_(K_AS ) {ID_B,a^y}
	B→A : E_(K_AB ) {hash{ID_A,E_(Pub_S ) {K_AS,a^x,Password_A }},N_B}
	A→B : E_(K_AB ) {N_B}

Tag: 0

Name: LSH-3PEKE
Paper: A Novel three-party encrypted key exchange protocol
	A→B : ID_A,E_(Pub_S ) {K_AS,a^x,Password_A}
	B→S : ID_A,E_(Pub_S ) {K_AS,a^x,Password_A},E_(Pub_S ) {K_BS,a^y,Password_B}
	S→B : K_AS ,y,E_(K_AS ) {ID_B,a^y},E_(K_BS ) {ID_A,a^x}
	B→A : E_(K_AS ) {ID_B,a^y}
	B→A : E_(K_AB ) {hash{ID_A,E_(Pub_S ) {K_AS,a^x,Password_A }},N_B}
	A→B : E_(K_AB ) {N_B}


Flaws: The adversary can obtain session key a^x^y  using plaintext secret y,K_AS
Tag: 1


Name: LSH-3PEKE
Paper: A Novel three-party encrypted key exchange protocol
	A→B : ID_A,E_(Pub_S ) {K_AS,a^x,Password_A}
	B→S : ID_A,E_(Pub_S ) {K_AS,a^x,Password_A},E_(Pub_S ) {K_BS,a^y,Password_B}
	S→B : E_(K_AS ) {ID_B,a^y},E_(K_BS ) {ID_A,a^x}
	B→A : E_(K_AS ) {ID_B,a^y}
	B→A : E_(K_AB ) {hash{ID_A,E_(Pub_S ) {K_AS,a^x,Password_A }},N_B}
	A→B : K_BS ,x,E_(K_AB ) {N_B}
 
Flaws: The adversary can obtain session key a^x^y  using plaintext secret x,K_BS
Tag: 1

Name: LSH-3PEKE
Paper: A Novel three-party encrypted key exchange protocol
	A→B : ID_A,E_(Pub_S ) {K_AS,a^x,Password_A}
	B→S : ID_A,E_(Pub_S ) {K_AS,a^x,Password_A},E_(Pub_S ) {K_BS,a^y,Password_B}
	S→B : E_(K_AS ) {ID_B,a^y},E_(K_BS ) {ID_A,a^x}
	B→A : E_(K_AS ) {ID_B,a^y}
	B→A : E_(K_AB ) {hash{ID_A,E_(Pub_S ) {K_AS,a^x,Password_A }},N_B}
	A→B : E_(K_AB ) {N_B}

Tag: 0


Name: LSH-3PEKE
Paper: A Novel three-party encrypted key exchange protocol
	A→B : ID_A,E_(Pub_S ) {K_AS,a^x,Password_A}
	B→S : ID_A,E_(Pub_S ) {K_AS,a^x,Password_A},E_(Pub_S ) {K_BS,a^y,Password_B}
	S→B : E_(K_AS ) {ID_B,a^y},E_(K_BS ) {ID_A,a^x}
	B→A : E_(K_AS ) {ID_B,a^y}
	B→A :E_(K_AB ) {hash{ID_A,E_(Pub_S ) {K_AS,a^x,Password_A }},N_B}
	A→B : Pri_S,y,E_(K_AB ) {N_B} 
	
Flaws: The adversary can obtain session key a^x^y  using plaintext secret y,Pri_S
Tag: 1

Name: LSSH-3PEKE
Paper: A Novel three-party encrypted key exchange protocol
	A→S : ID_A,ID_B
	S→A : E_(Password_A ) {a^x},E_(Password_B ) {a^y}
	A→B : ID_A,a^x,E_(K_AS ) {ID_A,ID_B,a^x},E_(Password_B ) {a^y}
	B→S : a^x,a^y,E_(K_AS ) {ID_A,ID_B,a^x},E_(K_BS ) {ID_A,ID_B,a^y}
	S→B : E_(K_AS ) {ID_A,ID_B,a^x,a^y },E_(K_BS ) {ID_A,ID_B,a^x,a^y }
	B→A :  E_(K_AS ) {ID_A,ID_B,a^x,a^y },E_(K_AB ) {ID_A,ID_B,a^x,a^y }
	A→B :  E_(K_AB ) {ID_A,ID_B,a^y }

Tag: 0


Name: LSSH-3PEKE
Paper: A Novel three-party encrypted key exchange protocol
	A→S : ID_A,ID_B
	S→A : Password_B,E_(Password_A ) {a^x},E_(Password_B ) {a^y}
	A→B : ID_A,a^x,E_(K_AS ) {ID_A,ID_B,a^x},E_(Password_B ) {a^y}
	B→S : a^x,E_(K_AS ) {ID_A,ID_B,a^x},a^y,E_(K_BS ) {ID_A,ID_B,a^y}
	S→B : E_(K_AS ) {ID_A,ID_B,a^x,a^y },E_(K_BS ) {ID_A,ID_B,a^x,a^y }
	B→A :  E_(K_AS ) {ID_A,ID_B,a^x,a^y },E_(K_AB ) {ID_A,ID_B,a^x,a^y }
	A→B :  E_(K_AB ) {ID_A,ID_B,a^y }

Tag: 0


Name: LSSH-3PEKE
Paper: A Novel three-party encrypted key exchange protocol
	A→S : ID_A,ID_B
	S→A : Password_A,y,E_(Password_A ) {a^x},E_(Password_B ) {a^y}
	A→B : ID_A,a^x,E_(K_AS ) {ID_A,ID_B,a^x},E_(Password_B ) {a^y}
	B→S : a^x,E_(K_AS ) {ID_A,ID_B,a^x},a^y,E_(K_BS ) {ID_A,ID_B,a^y}
	S→B : E_(K_AS ) {ID_A,ID_B,a^x,a^y },E_(K_BS ) {ID_A,ID_B,a^x,a^y }
	B→A :  E_(K_AS ) {ID_A,ID_B,a^x,a^y },E_(K_AB ) {ID_A,ID_B,a^x,a^y }
	A→B :  E_(K_AB ) {ID_A,ID_B,a^y }

Flaws: The adversary can obtain session key a^x^y  using plaintext secret y,Password_A
Tag: 1

Name: LSSH-3PEKE
Paper: A Novel three-party encrypted key exchange protocol
	A→S : ID_A,ID_B
	S→A : Password_A,x,E_(Password_A ) {a^x},E_(Password_B ) {a^y}
	A→B : ID_A,a^x,E_(K_AS ) {ID_A,ID_B,a^x},E_(Password_B ) {a^y}
	B→S : a^x,E_(K_AS ) {ID_A,ID_B,a^x},a^y,E_(K_BS ) {ID_A,ID_B,a^y}
	S→B : E_(K_AS ) {ID_A,ID_B,a^x,a^y },E_(K_BS ) {ID_A,ID_B,a^x,a^y }
	B→A :  E_(K_AS ) {ID_A,ID_B,a^x,a^y },E_(K_AB ) {ID_A,ID_B,a^x,a^y }
	A→B :  E_(K_AB ) {ID_A,ID_B,a^y }

Flaws: The adversary can obtain session key a^x^y  using plaintext secret y,Password_A
Tag: 1


Name: Two-party Key Distribution Protocol
Paper: Adding Time to a Logic of Authentication
	A→B : ID_A,N_A
	B→S : ID_B,N_B,E_(K_BS ) {N_B,N_A,ID_A}
	S→A : ID_S,ID_B,N_S,E_(K_AS ) {N_A,N_S,ID_B}
	A→S : ID_A,E_(K_AS ) {K_AB,N_S,ID_B}
	S→B : ID_S,E_(K_BS ) {N_B,K_AB,ID_A}
	B→A : E_(K_AB ) {N_A+1}

Tag: 0


Name: Two-party Key Distribution Protocol
Paper: Adding Time to a Logic of Authentication
	A→B : ID_A,N_A
	B→S : ID_B,N_B,E_(K_BS ) {N_B,N_A,ID_A}
	S→A : ID_S,ID_B,N_S,E_(K_AS ) {N_A,N_S,ID_B}
	A→S : ID_A,K_AS,E_(K_AS ) {K_AB,N_S,ID_B} 
	S→B : ID_S,E_(K_BS ) {N_B,K_AB,ID_A}
	B→A : E_(K_AB ) {N_A+1}

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {K_AB,N_S,ID_B}   using plaintext key K_AS
Tag: 1



Name: Two-party Key Distribution Protocol
Paper: Adding Time to a Logic of Authentication
	A→B : ID_A,N_A
	B→S : ID_B,N_B,E_(K_BS ) {N_B,N_A,ID_A}
	S→A : ID_S,ID_B,N_S,E_(K_AS ) {N_A,N_S,ID_B}
	A→S : ID_A,E_(K_AS ) {K_AB,N_S,ID_B}
	S→B : ID_S,K_BS,E_(K_BS ) {N_B,K_AB,ID_A} 
	B→A : E_(K_AB ) {N_A+1}
	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {N_B,K_AB,ID_A}   using plaintext key K_BS
Tag: 1

Name: BBF Event Marker Protocol
Paper: A Key Distribution Protocol Using Event Markers
	A→B : ID_A,N_A
	B→S : ID_A,N_A,ID_B,N_B  
	S→B : E_(K_BS ) {K_AB,ID_A,N_B},E_(K_AS ) {K_AB ,ID_B,N_A}
	B→A : E_(K_AS ) {K_AB ,ID_B,N_A}
	
Tag: 0


Name: BBF Event Marker Protocol
Paper: A Key Distribution Protocol Using Event Markers
	A→B : ID_A,N_A
	B→S : ID_A,N_A,ID_B,N_B  
	S→B : E_(K_BS ) {K_AB,ID_A,N_B},E_(K_AS ) {K_AB ,N_A}
	B→A : E_(K_AS ) {K_AB ,N_A}


Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {K_AB ,N_A}
Tag: 1


Name: BBF Event Marker Protocol
Paper: A Key Distribution Protocol Using Event Markers
	A→B : ID_A,N_A
	B→S : ID_A,N_A,ID_B,N_B  
	S→B : K_AS,E_(K_BS ) {K_AB,ID_A,N_B},E_(K_AS ) {K_AB ,ID_B,N_A}
	B→A : E_(K_AS ) {K_AB ,ID_B,N_A}
	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {K_AB,ID_A,N_B}  using plaintext key K_BS
Tag: 1

Name: BBF Event Marker Protocol
Paper: A Key Distribution Protocol Using Event Markers
	A→B : ID_A,N_A
	B→S : ID_A,N_A,ID_B,N_B  
	S→B : K_BS,E_(K_BS ) {K_AB,ID_A,N_B},E_(K_AS ) {K_AB ,ID_B,N_A}
	B→A : E_(K_AS ) {K_AB ,ID_B,N_A}
	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {K_AB,ID_A,N_B}  using plaintext key K_BS
Tag: 1


Name: TKSMN Protocol
Paper: A Hierarchical Key Management Scheme for End-To-End Encryption
	A→B : ID_A,E_(K_AS ) {N_A}
	B→S : ID_A,E_(K_AS ) {N_A},ID_B,E_(K_BS ) {N_B} 
	S→B : E_(K_BS ) {K_AB,ID_A,N_B},E_(K_AS ) {K_AB ,ID_B,N_A}
	B→A : E_(K_AS ) {K_AB ,ID_B,N_A}

Tag: 0



Name: TKSMN Protocol
Paper: A Hierarchical Key Management Scheme for End-To-End Encryption
	A→B : ID_A,E_(K_AS ) {N_A}
	B→S : ID_A,E_(K_AS ) {N_A},ID_B,E_(K_BS ) {N_B} 
	S→B : E_(K_BS ) {K_AB,ID_A,N_B},E_(K_AS ) {K_AB ,N_A}
	B→A : E_(K_AS ) {K_AB ,N_A}

	
Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {K_AB ,N_A}
Tag: 1

Name: TKSMN Protocol
Paper: A Hierarchical Key Management Scheme for End-To-End Encryption
	A→B : ID_A,E_(K_AS ) {N_A}
	B→S : ID_A,E_(K_AS ) {N_A},ID_B,E_(K_BS ) {N_B} 
	S→B : K_AS,E_(K_BS ) {K_AB,ID_A,N_B},E_(K_AS ) {K_AB ,ID_B,N_A}
	B→A : E_(K_AS ) {K_AB ,ID_B,N_A}
	

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {K_AB ,ID_B,N_A}  using plaintext key K_AS
Tag: 1


Name: TKSMN Protocol
Paper: A Hierarchical Key Management Scheme for End-To-End Encryption
	A→B : ID_A,E_(K_AS ) {N_A}
	B→S : ID_A,E_(K_AS ) {N_A},ID_B,E_(K_BS ) {N_B} 
	S→B : K_BS,E_(K_BS ) {K_AB,ID_A,N_B},E_(K_AS ) {K_AB ,ID_B,N_A}
	B→A : E_(K_AS ) {K_AB ,ID_B,N_A}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {K_AB,ID_A,N_B}  using plaintext key K_BS
Tag: 1

Name: TKSMN Protocol
Paper: A Hierarchical Key Management Scheme for End-To-End Encryption
	A→B : ID_A,N_A
	B→S : ID_A,N_A,ID_B,N_B  
	S→B : E_(K_BS ) {K_AB,ID_A,N_B},E_(K_AS ) {K_AB ,ID_B,N_A}
	B→A : E_(K_AS ) {K_AB ,ID_B,N_A},E_(K_AB ) {ID_A,N_A}

Tag: 0


Name: TKSMN Protocol
Paper: A Hierarchical Key Management Scheme for End-To-End Encryption
	A→B : ID_A,N_A
	B→S : ID_A,N_A,ID_B,N_B  
	S→B : E_(K_BS ) {K_AB,ID_A,N_B},E_(K_AS ) {K_AB ,N_A}
	B→A : E_(K_AS ) {K_AB ,N_A},E_(K_AB ) {ID_A,N_A}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {K_AB ,N_A}
Tag: 1

Name: TKSMN Protocol
Paper: A Hierarchical Key Management Scheme for End-To-End Encryption
	A→B : ID_A,N_A
	B→S : ID_A,N_A,ID_B,N_B  
	S→B : E_(K_BS ) {K_AB,ID_A,N_B},E_(K_AS ) {K_AB ,ID_B,N_A}
	B→A : K_AS,E_(K_AS ) {K_AB ,ID_B,N_A},E_(K_AB ) {ID_A,N_A} 


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {K_AB ,ID_B,N_A}  using plaintext key K_AS
Tag: 1

Name: TKSMN Protocol
Paper: A Hierarchical Key Management Scheme for End-To-End Encryption
	A→B : ID_A,N_A
	B→S : ID_A,N_A,ID_B,N_B  
	S→B : E_(K_BS ) {K_AB,ID_A,N_B},E_(K_AS ) {K_AB ,ID_B,N_A}
	B→A : K_BS,E_(K_AS ) {K_AB ,ID_B,N_A},E_(K_AB ) {ID_A,N_A} 


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {K_AB,ID_A,N_B}  using plaintext key K_BS
Tag: 1


Name: TKSMN Protocol
Paper: A Hierarchical Key Management Scheme for End-To-End Encryption
	A→B : ID_A,N_A
	B→S : ID_A,N_A,ID_B,N_B  
	S→B : E_(K_BS ) {K_AB,ID_A,N_B},E_(K_AS ) {K_AB ,ID_B,N_A}
	B→A : K_BS,E_(K_AS ) {K_AB ,ID_B,N_A },E_(K_AB ) {ID_A,N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {K_AB,ID_A,N_B}  using plaintext key K_BS
Tag: 1

Name: Wide Mouth Frog Protocol
Paper: A Compiler for the Analysis of Security Protocol
	A→S : ID_A,E_(K_AS ) {T_A,ID_B,K_AB}
	S→B : E_(K_BS ) {T_B,ID_A,K_AB}

Tag: 0

Name: Wide Mouth Frog Protocol
Paper: A Compiler for the Analysis of Security Protocol
	A→S : ID_A,K_AS,E_(K_AS ) {T_A,ID_B,K_AB} 
	S→B : E_(K_BS ) {T_B,ID_A,K_AB}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {T_A,ID_B,K_AB}   using plaintext key K_AS
Tag: 1

Name: Wide Mouth Frog Protocol
Paper: A Compiler for the Analysis of Security Protocol
	A→S : ID_A,E_(K_AS ) {T_A,ID_B,K_AB}
	S→B : K_BS,E_(K_BS ) {T_B,ID_A,K_AB}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {T_B,ID_A,K_AB} using plaintext key K_BS
Tag: 1

Name: Adapted Wide Mouth Frog Protocol
Paper: A Compiler for the Analysis of Security Protocol
	A→S : ID_A,E_(K_AS ) {T_A,ID_B,K_AB}
	S→B : E_(K_BS ) {T_B,T_A,ID_A,ID_B,K_AB}
	B→A : E_(K_AB ) {T_A,N_B}
	A→B : E_(K_AB ) {N_B+1}
	
Tag: 0


Name: Adapted Wide Mouth Frog Protocol
Paper: A Compiler for the Analysis of Security Protocol
	A→S : ID_A,ID_B,E_(K_AS ) {T_A,K_AB}
	S→B : E_(K_BS ) {T_B,T_A,ID_A,ID_B,K_AB}
	B→A : E_(K_AB ) {T_A,N_B}
	A→B : E_(K_AB ) {N_B+1}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 1 i.e. E_(K_AS ) {T_A,K_AB}
Tag: 1

Name: Adapted Wide Mouth Frog Protocol
Paper: A Compiler for the Analysis of Security Protocol
	A→S : ID_A,E_(K_AS ) {T_A,ID_B,K_AB}
	S→B : E_(K_BS ) {T_B,T_A,ID_A,ID_B,K_AB}
	B→A : K_AS,E_(K_AB ) {T_A,N_B}
	A→B : E_(K_AB ) {N_B+1}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {T_A,ID_B,K_AB}  using plaintext key K_AS
Tag: 1

Name: Adapted Wide Mouth Frog Protocol
Paper: A Compiler for the Analysis of Security Protocol
	A→S : ID_A,E_(K_AS ) {T_A,ID_B,K_AB}
	S→B : E_(K_BS ) {T_B,T_A,ID_A,ID_B,K_AB}
	B→A : K_BS,E_(K_AB ) {T_A,N_B}
	A→B : E_(K_AB ) {N_B+1}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {T_B,T_A,ID_A,ID_B,K_AB}  using plaintext key K_BS
Tag: 1

Name: TMN Protocol
Paper : Key Distribution Protocol for Digital Mobile Communication Systems
	A→S : ID_B,E_(Pub_S ) {T_A,hash{K_AS,ID_A,ID_B},K_(Pub_A )}
	S→B : ID_A
	B→S : ID_A,E_(Pub_S ) {T_B,hash{K_BS,ID_B,ID_A},K_AB}
	S→A : E_(Pub_A ) {T_S,K_AB,ID_B}

Tag: 0


Name: TMN Protocol
Paper : Key Distribution Protocol for Digital Mobile Communication Systems
	A→S : ID_B,E_(Pub_S ) {T_A,hash{K_AS,ID_A,ID_B},K_(Pub_A )}
	S→B : ID_A
	B→S : ID_A,E_(Pub_S ) {T_B,hash{K_BS,ID_B,ID_A},K_AB}
	S→A : E_(Pub_A ) {T_S,K_AB}
	
Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 4  i.e. E_(Pub_A ) {T_S,K_AB}
Tag: 1


Name: TMN Protocol
Paper : Key Distribution Protocol for Digital Mobile Communication Systems
	A→S : ID_B,E_(Pub_S ) {T_A,hash{K_AS,ID_A,ID_B},K_(Pub_A )}
	S→B : ID_A
	B→S : ID_A,Pri_S,E_(Pub_S ) {T_B,hash{K_BS,ID_B,ID_A},K_AB}
	S→A : E_(Pub_A ) {T_S,K_AB}


Flaws: The adversary can obtain session key K_AB by decrypting E_(Pub_S ) {T_B,hash{K_BS,ID_B,ID_A},K_AB}  using plaintext key Pri_S
Tag: 1

Name: TMN Protocol
Paper : Key Distribution Protocol for Digital Mobile Communication Systems
	A→S : ID_B,E_(Pub_S ) {T_A,hash{K_AS,ID_A,ID_B},K_(Pub_A )}
	S→B : ID_A,Pri_A
	B→S : ID_A,E_(Pub_S ) {T_B,hash{K_BS,ID_B,ID_A},K_AB}
	S→A : E_(Pub_A ) {T_S,K_AB}


Flaws: The adversary can obtain session key K_AB by decrypting E_(Pub_A ) {T_S,K_AB} using plaintext key Pri_A
Tag: 1


Name: TMN Protocol
Paper : Using CSP to Detect Errors in the TMN Protocol
	A→S : ID_B,N_A,E_(Pub_S ) {ID_B,hash{K_AS,ID_A},K_(Pub_A )}
	S→B : ID_A,N_A
	B→S : ID_A,E_(Pub_S ) {ID_A,hash{K_BS,ID_B },K_AB },E_(K_AB ) {N_A,N_B}
	S→A : E_(Pub_A ) {K_AB,ID_B},E_(K_AB ) {N_A,N_B}
	A→B : E_(K_AB ) {N_B+1}

Tag: 0


Name: TMN Protocol
Paper : Using CSP to Detect Errors in the TMN Protocol
	A→S : ID_B,N_A,E_(Pub_S ) {ID_B,hash{K_AS,ID_A},K_(Pub_A )}
	S→B : ID_A,N_A
	B→S : ID_A,E_(Pub_S ) {ID_A,hash{K_BS,ID_B },K_AB },E_(K_AB ) {N_A,N_B}
	S→A : E_(Pub_A ) {K_AB},E_(K_AB ) {N_A,N_B}
	A→B : E_(K_AB ) {N_B+1}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message  4  i.e. E_(Pub_A ) {K_AB}
Tag: 1


Name: TMN Protocol
Paper : Using CSP to Detect Errors in the TMN Protocol
	A→S : ID_B,N_A,E_(Pub_S ) {ID_B,hash{K_AS,ID_A},K_(Pub_A )}
	S→B : ID_A,N_A
	B→S : ID_A,E_(Pub_S ) {ID_A,hash{K_BS,ID_B },K_AB },E_(K_AB ) {N_A,N_B}
	S→A : Pri_A,E_(Pub_A ) {K_AB},E_(K_AB ) {N_A,N_B}
	A→B : E_(K_AB ) {N_B+1}

Flaws: The adversary can obtain session key K_AB by decrypting E_(Pub_A ) {T_S,K_AB} using plaintext key Pri_A
Tag: 1

Name: TMN Protocol
Paper : Using CSP to Detect Errors in the TMN Protocol
	A→S : ID_B,N_A,E_(Pub_S ) {ID_B,hash{K_AS,ID_A},K_(Pub_A )}
	S→B : ID_A,N_A
	B→S : ID_A,E_(Pub_S ) {ID_A,hash{K_BS,ID_B },K_AB },E_(K_AB ) {N_A,N_B}
	S→A : Pri_S,E_(Pub_A ) {K_AB},E_(K_AB ) {N_A,N_B}
	A→B : E_(K_AB ) {N_B+1}

Flaws: The adversary can obtain session key K_AB by decrypting E_(Pub_S ) {ID_A,hash{K_BS,ID_B },K_AB } using plaintext key Pri_S
Tag: 1


Name: Using Non-Reversible Functions
Paper : A Survey of Authentication Protocol Literature Version 1.0
	A→B : N_A 
	B→A : ID_A,E_(K_AB ) {hash{N_A },N_B,ID_B,K_AB^'^'}
	A→B : ID_B,E_(K_AB^'^' ) {N_B}
	
Tag: 0

Name: The Session Key Updated Protocol
Paper: Timed Models for Protocol Security
	A→B : E_(K_AB ) {ID_B,N_A}
	B→S : E_(K_BS ) {ID_A,ID_B}
	S→B : E_(K_BS ) {ID_A,K_AB^'^' }
	B→A : E_(K_AB ) {N_A,N_B,K_AB^'^'}
	A→B : E_(K_AB ) {N_B,K_AB^'^'}

Tag: 0

Name: The Session Key Updated Protocol
Paper: Timed Models for Protocol Security
	A→B : E_(K_AB ) {ID_B,N_A}
	B→S : E_(K_BS ) {ID_A,ID_B}
	S→B : K_BS,E_(K_BS ) {ID_A,K_AB^'^' }
	B→A : E_(K_AB ) {N_A,N_B,K_AB^'^'}
	A→B : E_(K_AB ) {N_B,K_AB^'^'}
	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,K_AB^'^' } using plaintext key K_BS
Tag: 1


Name: The Adapted NS protocol
Paper: p 9
	A→B : ID_A
	B→S : ID_A,ID_B
	S→B : E_(K_BS ) {ID_A,K_AB },E_(K_AS ) {ID_B,K_AB }
	B→A : E_(K_AS ) {ID_B,K_AB }, E_(K_AB ) {N_B }
	A→B : E_(K_AB ) {N_B,N_A }
	B→A : E_(K_AB ) {N_A }

Tag: 0


Name: The Adapted NS protocol
Paper: p 9
	A→B : ID_A
	B→S : ID_A,ID_B
	S→B : E_(K_BS ) {ID_A,K_AB },E_(K_AS ) {K_AB }
	B→A : E_(K_AS ) {K_AB }, E_(K_AB ) {N_B }
	A→B : E_(K_AB ) {N_B,N_A }
	B→A : E_(K_AB ) {N_A }


Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3-4 i.e. E_(K_AS ) {K_AB }
Tag: 1



Name: The Adapted NS protocol
Paper: p 9
	A→B : ID_A
	B→S : ID_A,ID_B
	S→B : K_AS,E_(K_BS ) {ID_A,K_AB },E_(K_AS ) {ID_B,K_AB }
	B→A : E_(K_AS ) {ID_B,K_AB }, E_(K_AB ) {N_B }
	A→B : E_(K_AB ) {N_B,N_A }
	B→A : E_(K_AB ) {N_A }

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_B,K_AB }  using plaintext key K_AS
Tag: 1


Name: The Adapted NS protocol
Paper: p 9
	A→B : ID_A
	B→S : ID_A,ID_B
	S→B : K_BS,E_(K_BS ) {ID_A,K_AB },E_(K_AS ) {ID_B,K_AB }
	B→A : E_(K_AS ) {ID_B,K_AB }, E_(K_AB ) {N_B }
	A→B : E_(K_AB ) {N_B,N_A }
	B→A : E_(K_AB ) {N_A }

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,K_AB }  using plaintext key K_BS
Tag: 1

Name: The Adapted NS protocol
Paper: p 11
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {N_B,ID_A,K_AB },E_(K_AS ) {N_A,ID_B,K_AB }
	B→A : E_(K_AS ) {N_A,ID_B,K_AB }
	
Tag: 0


Name: The Adapted NS protocol
Paper: p 11
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {N_B,ID_A,K_AB },E_(K_AS ) {N_A,K_AB }
	B→A : E_(K_AS ) {N_A,K_AB }


Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3-4 i.e. E_(K_AS ) {N_A,K_AB }
Tag: 1



Name: The Adapted NS protocol
Paper: p 11
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : K_AS,E_(K_BS ) {N_B,ID_A,K_AB },E_(K_AS ) {N_A,ID_B,K_AB }
	B→A : E_(K_AS ) {N_A,ID_B,K_AB }


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A,ID_B,K_AB }  using plaintext key K_AS
Tag: 1

Name: The Adapted NS protocol
Paper: p 11
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : K_BS,E_(K_BS ) {N_B,ID_A,K_AB },E_(K_AS ) {N_A,ID_B,K_AB }
	B→A : E_(K_AS ) {N_A,ID_B,K_AB }


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {N_B,ID_A,K_AB }  using plaintext key K_BS
Tag: 1


Name: A protocol in an unusual class
Paper: p 14
	A→B : N_A,ID_A
	B→S : ID_A,ID_B,E_(K_BS ) {N_B,ID_A,ID_B }
	S→A : E_(K_AS ) {K_AB,ID_A,ID_B,N_A }
	A→B : N_S,E_(K_AB ) {ID_A,ID_B }
	B→A : E_(K_AB ) {ID_A,ID_B,N_S+1}

Tag: 0

Name: A protocol in an unusual class
Paper: p 14
	A→B : N_A,ID_A
	B→S : N_A,K_AS,E_(K_BS ) {N_B,ID_A,ID_B }
	S→A : E_(K_AS ) {K_AB,ID_A,ID_B,N_A }
	A→B : N_S,E_(K_AB ) {ID_A,ID_B }
	B→A : E_(K_AB ) {ID_A,ID_B,N_S+1}

Flaws: The adversary can obtain session key K_AB by decrypting  E_(K_AS ) {K_AB,ID_A,ID_B,N_A }  using plaintext key K_AS
Tag: 1

Name: A protocol in an unusual class
Paper: p 14
	A→B : N_A,ID_A
	B→S : N_A ,K_BS,E_(K_BS ) {N_B,ID_A,ID_B }
	S→A : N_S,E_(K_AS ) {K_AB,ID_A,ID_B,N_A }
	A→B : N_S,E_(K_AB ) {ID_A,ID_B }
	B→A : E_(K_AB ) {ID_A,ID_B,N_S+1}

Tag: 0

Name: The Key Transport Protocol Providing Forward Secrecy
Paper: p51
	A→B : K_(Pub_A ),N_A,Sig_(Pri_A ) {K_(Pub_A ),ID_B,T_A}
	B→A : E_(Pub_A ) {K_AB },Sig_(Pri_B ) {hash{K_AB},N_A,ID_A}

Tag: 0

Name: The Key Transport Protocol Providing Forward Secrecy
Paper: p51
	A→B : K_(Pub_A ),N_A,Sig_(Pri_A ) {K_(Pub_A ),ID_B,T_A}
	B→A : Pri_A,E_(Pub_A ) {K_AB },Sig_(Pri_B ) {hash{K_AB},N_A,ID_A}

Flaws: The adversary can obtain session key K_AB by decrypting  E_(Pub_A ) {K_AB }  using plaintext key Pri_A
Tag: 1

Name: Server Based protocol
Paper: p51
	A→B : ID_A,ID_B,a^x 
	B→S : E_(K_BS ) {ID_A,ID_B,a^y },E_(K_AB ) {ID_A,a^x,a^y }
	S→A : E_(K_AS ) {ID_A,ID_B,a^y },E_(K_AB ) {ID_A,a^x,a^y }
	A→B : E_(K_AB ) {ID_B,a^x,a^y }

Tag: 0

Name: Server Based protocol
Paper: p51
	A→B : ID_A,ID_B,a^x 
	B→S : y,E_(K_BS ) {ID_A,ID_B,a^y },E_(K_AB ) {ID_A,a^x,a^y }
	S→A : E_(K_AS ) {ID_A,ID_B,a^y },E_(K_AB ) {ID_A,a^x,a^y }
	A→B : E_(K_AB ) {ID_B,a^x,a^y }

Flaws: The adversary can obtain session key a^x^y  using plaintext secret y
Tag: 1


Name: Server Based protocol
Paper: p51
	A→B : ID_A,ID_B,a^x 
	B→S : K_BS,x,E_(K_BS ) {ID_A,ID_B,a^y },E_(K_AB ) {ID_A,a^x,a^y }
	S→A : E_(K_AS ) {ID_A,ID_B,a^y },E_(K_AB ) {ID_A,a^x,a^y }
	A→B : E_(K_AB ) {ID_B,a^x,a^y }

Flaws: The adversary can obtain session key a^x^y  using plaintext secret x
Tag: 1


Name: Janson-Tsudik 2PKDP Protocol
Paper : p83
	A→B : ID_A,N_A
	B→A : E_(K_AB ) {N_A,N_B,K_AB^'^',ID_B},hash{AB^', {N_A,K_AB^'^',ID_B}
	A→B : E_(K_AB ) {N_B,K_AB^'^',ID_A}

Tag: 0



Name: ISO 11779-2 Key Establishment Protocol
Paper : p85
	A→B : N_A
	B→A : E_(K_AB ) {N_A,ID_A,K_AB^'^'}

Tag: 0


Name: ISO 11779-2 Key Establishment Protocol
Paper : p85
	A→B : E_(K_AB ) {T_A,ID_A,a^x}
	B→A : E_(K_AB ) {T_B,ID_B,a^y}

Tag: 0

Name: Bauer-Berson-Feier protocol
Paper: p88
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {N_B,ID_A ,K_AB },E_(K_AS ) {N_A,ID_B,K_AB }
	B→A : E_(K_AS ) {N_A,ID_B,K_AB }

Tag: 0


Name: Bauer-Berson-Feier protocol
Paper: p88
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {N_B,ID_A ,K_AB },E_(K_AS ) {N_A,K_AB }
	B→A : E_(K_AS ) {N_A,K_AB }


Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3-4 i.e. E_(K_AS ) {N_A,K_AB }
Tag: 1



Name: Bauer-Berson-Feier protocol
Paper: p88
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : K_AS,E_(K_BS ) {N_B,ID_A ,K_AB },E_(K_AS ) {N_A,ID_B,K_AB }
	B→A : E_(K_AS ) {N_A,ID_B,K_AB }

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A,ID_B,K_AB }  using plaintext key K_AS
Tag: 1

Name: Bauer-Berson-Feier protocol
Paper: p88
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : K_BS,E_(K_BS ) {N_B,ID_A ,K_AB },E_(K_AS ) {N_A,ID_B,K_AB }
	B→A : E_(K_AS ) {N_A,ID_B,K_AB }

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {N_B,ID_A ,K_AB }  using plaintext key K_BS
Tag: 1

Name: ISO 11779-2 Key Establishment Protocol
Paper : p93
	A→S : E_(K_AS ) {T_A,ID_B}
	S→A : E_(K_AS ) {T_S,K_AB,ID_B}
	S→B : E_(K_BS ) {T_S,K_AB,ID_A}

Tag: 0

Name: ISO 11779-2 Key Establishment Protocol
Paper : p93
	A→S : E_(K_AS ) {T_A,ID_B}
	S→A : K_AS,E_(K_AS ) {T_S,K_AB,ID_B}
	S→B : E_(K_BS ) {T_S,K_AB,ID_A}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {T_S,K_AB,ID_B}  using plaintext key K_AS
Tag: 1


Name: ISO 11779-2 Key Establishment Protocol
Paper : p93
	A→S : E_(K_AS ) {T_A,ID_B}
	S→A : K_BS,E_(K_AS ) {T_S,K_AB,ID_B}
	S→B : E_(K_BS ) {T_S,K_AB,ID_A}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {T_S,K_AB,ID_A}  using plaintext key K_BS
Tag: 1



Name: ISO 11779-2 Key Establishment Protocol
Paper : p94
	A→S : E_(K_AS ) {N_A,ID_B,K_AB}
	S→A : E_(K_AS ) {N_A,ID_B},E_(K_BS ) {T_S,K_AB,ID_A}
	A→B : E_(K_BS ) {T_S,K_AB,ID_A}

Tag: 0

Name: ISO 11779-2 Key Establishment Protocol
Paper : p94
	A→S : E_(K_AS ) {N_A,ID_B,K_AB}
	S→A : K_AS,E_(K_AS ) {N_A,ID_B},E_(K_BS ) {T_S,K_AB,ID_A}
	A→B : E_(K_BS ) {T_S,K_AB,ID_A}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A,ID_B,K_AB}  using plaintext key K_AS
Tag: 1


Name: ISO 11779-2 Key Establishment Protocol
Paper : p94
	A→S : E_(K_AS ) {N_A,ID_B,K_AB}
	S→A : K_BS,E_(K_AS ) {N_A,ID_B},E_(K_BS ) {T_S,K_AB,ID_A}
	A→B : E_(K_BS ) {T_S,K_AB,ID_A}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {T_S,K_AB,ID_A}  using plaintext key K_BS
Tag: 1


Name: ISO 11779-2 Key Establishment Protocol
Paper : p94
	A→B : N_A
	B→S : E_(K_BS ) {N_B,N_A,ID_A,K_AB}
	S→B : E_(K_BS ) {N_B,ID_A},E_(K_AS ) {N_A,K_AB,ID_B}
	B→A : E_(K_AS ) {N_A,K_AB,ID_B}

Tag: 0

Name: ISO 11779-2 Key Establishment Protocol
Paper : p94
	A→B : N_A
	B→S : E_(K_BS ) {N_B,N_A,ID_A,K_AB}
	S→B : K_AS,E_(K_BS ) {N_B,ID_A},E_(K_AS ) {N_A,K_AB,ID_B}
	B→A : E_(K_AS ) {N_A,K_AB,ID_B}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A,K_AB,ID_B}  using plaintext key K_AS
Tag: 1

Name: ISO 11779-2 Key Establishment Protocol
Paper : p94
	A→B : N_A
	B→S : E_(K_BS ) {N_B,N_A,ID_A,K_AB}
	S→B : K_BS,E_(K_BS ) {N_B,ID_A},E_(K_AS ) {N_A,K_AB,ID_B}
	B→A : E_(K_AS ) {N_A,K_AB,ID_B}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {N_B,N_A,ID_A,K_AB}  using plaintext key K_BS
Tag: 1

Name: Janson-Tsudik 3PKDP Protocol
Paper : p98
	A→S : ID_A,ID_B,N_A
	S→A : E_(K_AS ) {N_A,K_AB,ID_B},hash{K_AB,N_A,K_AB,ID_B}
	B→S : ID_B,ID_A,N_B
	S→B : E_(K_BS ) {N_B,K_AB,ID_A},hash{K_AB,N_B,K_AB,ID_A}
	A→B : ID_A,N_A^'
	B→A : E_(K_AB ) {N_A^',N_a^',ID_B}, N_a^'
	A→B : E_(K_AB ) {N_A^',N_a^',ID_A}

Tag: 0


Name: Janson-Tsudik 3PKDP Protocol
Paper : p98
	A→S : ID_A,ID_B,N_A
	S→A : E_(K_AS ) {N_A,K_AB},hash{K_AB,N_A,K_AB}
	B→S : ID_B,ID_A,N_B
	S→B : E_(K_BS ) {N_B,K_AB,ID_A},hash{K_AB,N_B,K_AB,ID_A}
	A→B : ID_A,N_A^'
	B→A : E_(K_AB ) {N_A^',N_a^',ID_B}, N_a^'
	A→B : E_(K_AB ) {N_A^',N_a^',ID_A}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 2 i.e. E_(K_AS ) {N_A,K_AB},hash{K_AB,N_A,K_AB}
Tag: 1

Name: Janson-Tsudik 3PKDP Protocol
Paper : p98
	A→S : ID_A,ID_B,N_A
	S→A : K_AS,E_(K_AS ) {N_A,K_AB,ID_B},hash{K_AB,N_A,K_AB,ID_B} 
	B→S : ID_B,ID_A,N_B
	S→B : E_(K_BS ) {N_B,K_AB,ID_A},hash{K_AB,N_B,K_AB,ID_A}
	A→B : ID_A,N_A^'
	B→A : E_(K_AB ) {N_A^',N_a^',ID_B}, N_a^'
	A→B : E_(K_AB ) {N_A^',N_a^',ID_A}

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A,K_AB,ID_B}  using plaintext key K_AS
Tag: 1

Name: Janson-Tsudik 3PKDP Protocol
Paper : p98
	A→S : ID_A,ID_B,N_A
	S→A : K_BS,E_(K_AS ) {N_A,K_AB,ID_B},hash{K_AB,N_A,K_AB,ID_B}
	B→S : ID_B,ID_A,N_B
	S→B : E_(K_BS ) {N_B,K_AB,ID_A},hash{K_AB,N_B,K_AB,ID_A}
	A→B : ID_A,N_A^'
	B→A : E_(K_AB ) {N_A^',N_a^',ID_B}, N_a^'
	A→B : E_(K_AB ) {N_A^',N_a^',ID_A}

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {N_B,K_AB,ID_A}  using plaintext key K_BS
Tag: 1


Name: Modified Janson-Tsudik 3PKDP Protocol
Paper: p98
	A→B : ID_A ,N_A, N_A^'
	B→S : ID_A,ID_B ,N_A, N_B
	S→B : E_(K_AS ) {N_A,K_AB,ID_B},hash{K_AB,E_(K_AS ) {N_A,K_AB,ID_B}}
	S→B : E_(K_BS ) {N_B,K_AB,ID_A},hash{K_AB,E_(K_BS ) {N_B,K_AB,ID_A}}
	B→A : N_a^',E_(K_AS ) {N_A,K_AB,ID_B},E_(K_AB ) {N_A^',N_a^',ID_B}, hash{K_AB,N_A,K_AB,ID_B }
	S→B : E_(K_AB ) {N_A^',N_a^',ID_A}

Tag: 0



Name: Modified Janson-Tsudik 3PKDP Protocol
Paper: p98
	A→B : ID_A ,N_A, N_A^'
	B→S : ID_A,ID_B ,N_A, N_B
	S→B : E_(K_AS ) {N_A,K_AB},hash{K_AB,E_(K_AS ) {N_A,K_AB}}
	S→B : E_(K_BS ) {N_B,K_AB,ID_A},hash{K_AB,E_(K_BS ) {N_B,K_AB,ID_A}}
	B→A : N_a^',E_(K_AS ) {N_A,K_AB},E_(K_AB ) {N_A^',N_a^'}, hash{K_AB,N_A,K_AB }
	S→B : E_(K_AB ) {N_A^',N_a^',ID_A}


Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {N_A,K_AB},hash{K_AB,E_(K_AS ) {N_A,K_AB}}
Tag: 1


Name: Modified Janson-Tsudik 3PKDP Protocol
Paper: p98
	A→B : ID_A ,N_A, N_A^'
	B→S : ID_A,ID_B ,N_A, N_B,K_AS
	S→B : E_(K_AS ) {N_A,K_AB,ID_B},hash{K_AB,E_(K_AS ) {N_A,K_AB,ID_B}}
	S→B : E_(K_BS ) {N_B,K_AB,ID_A},hash{K_AB,E_(K_BS ) {N_B,K_AB,ID_A}}
	B→A : N_a^',E_(K_AS ) {N_A,K_AB,ID_B},E_(K_AB ) {N_A^',N_a^',ID_B}, hash{K_AB,N_A,K_AB,ID_B }
	S→B : E_(K_AB ) {N_A^',N_a^',ID_A}
	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A,K_AB,ID_B}  using plaintext key K_AS
Tag: 1


Name: Modified Janson-Tsudik 3PKDP Protocol
Paper: p98
	A→B : ID_A ,N_A, N_A^'
	B→S : ID_A,ID_B ,N_A, N_B,K_BS
	S→B : E_(K_AS ) {N_A,K_AB,ID_B},hash{K_AB,E_(K_AS ) {N_A,K_AB,ID_B}}
	S→B : E_(K_BS ) {N_B,K_AB,ID_A},hash{K_AB,E_(K_BS ) {N_B,K_AB,ID_A}}
	B→A : N_a^',E_(K_AS ) {N_A,K_AB,ID_B},E_(K_AB ) {N_A^',N_a^',ID_B}, hash{K_AB,N_A,K_AB,ID_B }
	S→B : E_(K_AB ) {N_A^',N_a^',ID_A}
	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {N_B,K_AB,ID_A}  using plaintext key K_BS
Tag: 1


Name: Bellare–Rogaway 3PKD protocol Key
Paper : p99
	A→B : N_A
	B→S : N_A,N_B
	S→A : E_(K_AS ) {K_AB}, hash{K_AS,ID_A,ID_B,N_A,E_(K_AS ) {K_AB}}
	S→B : E_(K_BS ) {K_AB}, hash{K_BS,ID_A,ID_B,N_B,E_(K_BS ) {K_AB}}

Tag: 0


Name: Bellare–Rogaway 3PKD protocol Key
Paper : p99
	A→B : N_A
	B→S : N_A,N_B
	S→A : E_(K_AS ) {K_AB}, hash{K_AS,ID_A,N_A,E_(K_AS ) {K_AB}}
	S→B : E_(K_BS ) {K_AB}, hash{K_BS,ID_A,ID_B,N_B,E_(K_BS ) {K_AB}}


Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. hash{K_AS,ID_A,N_A,E_(K_AS ) {K_AB}}
Tag: 1


Name: Bellare–Rogaway 3PKD protocol Key
Paper : p99
	A→B : N_A
	B→S : N_A,N_B
	S→A : K_AS,E_(K_AS ) {K_AB}, hash{K_AS,ID_A,ID_B,N_A,E_(K_AS ) {K_AB}}
	S→B : E_(K_BS ) {K_AB}, hash{K_BS,ID_A,ID_B,N_B,E_(K_BS ) {K_AB}}
	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {K_AB}  using plaintext key K_AS
Tag: 1

Name: Bellare–Rogaway 3PKD protocol Key
Paper : p99
	A→B : N_A
	B→S : N_A,N_B
	S→A : K_BS,E_(K_AS ) {K_AB}, hash{K_AS,ID_A,ID_B,N_A,E_(K_AS ) {K_AB}}
	S→B : E_(K_BS ) {K_AB}, hash{K_BS,ID_A,ID_B,N_B,E_(K_BS ) {K_AB}}

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {K_AB}  using plaintext key K_BS
Tag: 1

Name: The Woo-Lam Protocol
Paper: p99
	A→B : N_A
	B→A : N_B
	A→B : E_(K_AS ) {ID_A,ID_B,N_A,N_B}
	B→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_B,N_A,N_B},E_(K_BS ) {ID_A,ID_B,N_A,N_B}
	S→B : E_(K_AS ) {ID_B,N_A,N_B,K_AB },E_(K_BS ) {ID_A,N_A,N_B,K_AB }
	B→A : E_(K_AS ) {ID_B,N_A,N_B,K_AB }, E_(K_AB ) {N_A,N_B }
	A→B : E_(K_AB ) {N_B }

Tag: 0


Name: The Woo-Lam Protocol
Paper: p99
	A→B : N_A
	B→A : N_B
	A→B : E_(K_AS ) {ID_A,ID_B,N_A,N_B}
	B→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_B,N_A,N_B},E_(K_BS ) {ID_A,ID_B,N_A,N_B}
	S→B : E_(K_AS ) {N_A,N_B,K_AB },E_(K_BS ) {ID_A,N_A,N_B,K_AB }
	B→A : E_(K_AS ) {N_A,N_B,K_AB }, E_(K_AB ) {N_A,N_B }
	A→B : E_(K_AB ) {N_B }

	
Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 6 i.e. E_(K_AS ) {N_A,N_B,K_AB }
Tag: 1



Name: The Woo-Lam Protocol
Paper: p99
	A→B : N_A
	B→A : N_B
	A→B : E_(K_AS ) {ID_A,ID_B,N_A,N_B}
	B→S : E_(K_AS ) {ID_A,ID_B,N_A,N_B},E_(K_BS ) {ID_A,ID_B,N_A,N_B}
	S→B : K_AS,E_(K_AS ) {ID_B,N_A,N_B,K_AB },E_(K_BS ) {ID_A,N_A,N_B,K_AB }
	B→A : E_(K_AS ) {ID_B,N_A,N_B,K_AB }, E_(K_AB ) {N_A,N_B }
	A→B : E_(K_AB ) {N_B }

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_B,N_A,N_B,K_AB }  using plaintext key K_AS
Tag: 1


Name: The Woo-Lam Protocol
Paper: p99
	A→B : N_A
	B→A : N_B
	A→B : E_(K_AS ) {ID_A,ID_B,N_A,N_B}
	B→S : E_(K_AS ) {ID_A,ID_B,N_A,N_B},E_(K_BS ) {ID_A,ID_B,N_A,N_B}
	S→B : K_BS,E_(K_AS ) {ID_B,N_A,N_B,K_AB },E_(K_BS ) {ID_A,N_A,N_B,K_AB }
	B→A : E_(K_AS ) {ID_B,N_A,N_B,K_AB }, E_(K_AB ) {N_A,N_B }
	A→B : E_(K_AB ) {N_B }

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,N_A,N_B,K_AB }  using plaintext key K_BS
Tag: 1


Name: Gong’s timestamp-based protocol
Paper : p100
	A→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B,T_A}
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B,T_S}
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A,T_B}
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^y,ID_A,T_S}

Tag: 0


Name: Gong’s timestamp-based protocol
Paper : p100
	A→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B,T_A}
	S→B : ID_B,ID_A,E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B,T_S}
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A,T_B}
	S→A : E_(K_AS ) {ID_S,ID_A,a^y,ID_A,T_S}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 4 i.e. E_(K_AS ) {ID_S,ID_A,a^y,ID_A,T_S}
Tag: 1


Name: Gong’s timestamp-based protocol
Paper : p100
	A→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B,T_A}
	S→B : x,K_BS,E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B,T_S}
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A,T_B}
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^y,ID_A,T_S}

Flaws: The adversary can obtain session key a^x^y  using plaintext secret x,K_BS
Tag: 1

Name: Gong’s timestamp-based protocol
Paper : p100
	A→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B,T_A},
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B,T_S},y,
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A,T_B},
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^y,ID_A,T_S},

Tag: 0

Name: Gong’s timestamp-based protocol
Paper : p100
	A→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B,T_A},
	S→B : y,K_BS,E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B,T_S},
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A,T_B},
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^y,ID_A,T_S},
	
Flaws: The adversary can obtain session key a^x^y  using plaintext secret x,K_BS
Tag: 1

Name: Gong’s nonce-based protocol
Paper : p100
	A→B : ID_A,ID_B,N_A,
	B→S : ID_A,ID_B,N_B,E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A,N_A},
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^y,ID_A,N_A},N_B,
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B,N_B},
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B,N_B},

Tag: 0


Name: Gong’s nonce-based protocol
Paper : p100
	A→B : ID_A,ID_B,N_A,
	B→S : ID_A,ID_B,N_B,K_BS,x,E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A,N_A}
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^y,ID_A,N_A},N_B,
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B,N_B},
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B,N_B},
	
Flaws: The adversary can obtain session key a^x^y  using plaintext secret x,K_BS
Tag: 1


Name: Gong’s nonce-based protocol
Paper : p100
	A→B : ID_A,ID_B,N_A,
	B→S : ID_A,ID_B,N_B,K_BS,y,E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A,N_A}
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^y,ID_A,N_A},N_B,
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B,N_B},
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B,N_B},
	
Flaws: The adversary can obtain session key a^x^y  using plaintext secret y,K_BS
Tag: 1

Name: Simplified Gong’s timestamp-based protocol
Paper : p100
	A→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B},N_A,
	S→B : ID_A,ID_B,E_(K_AS ) {ID_S,ID_B,ID_A,a^x,ID_B},N_A,
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A},E_(K_AB ) {ID_B,ID_A,N_A},N_B,
	S→A : E_(K_BS ) {ID_S,ID_A,ID_B,a^y,ID_A},E_(K_AB ) {ID_B,ID_A,N_A},N_B,
	A→B : E_(K_AB ) {ID_A,ID_B,N_B},

Tag: 0

Name: Simplified Gong’s timestamp-based protocol
Paper : p100
	A→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B},N_A,
	S→B : ID_A,ID_B,E_(K_AS ) {ID_S,ID_B,ID_A,a^x,ID_B},N_A,K_AS,
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A},E_(K_AB ) {ID_B,ID_A,N_A},N_B,
	S→A : E_(K_BS ) {ID_S,ID_A,ID_B,a^y,ID_A},E_(K_AB ) {ID_B,ID_A,N_A},N_B,
	A→B : E_(K_AB ) {ID_A,ID_B,N_B},

Tag: 0

Name: Simplified Gong’s timestamp-based protocol
Paper : p100
	A→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B},N_A,
	S→B : ID_A,ID_B,E_(K_AS ) {ID_S,ID_B,ID_A,a^x,ID_B},K_BS,N_A,
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A},E_(K_AB ) {ID_B,ID_A,N_A},N_B,
	S→A : E_(K_BS ) {ID_S,ID_A,ID_B,a^y,ID_A},E_(K_AB ) {ID_B,ID_A,N_A},N_B,
	A→B : E_(K_AB ) {ID_A,ID_B,N_B},

Tag: 0
Name: Simplified Gong’s timestamp-based protocol
Paper : p100
	A→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B},N_A,
	S→B : ID_A,ID_B,E_(K_AS ) {ID_S,ID_B,ID_A,a^x,ID_B},K_BS,x,N_A,
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A},E_(K_AB ) {ID_B,ID_A,N_A},N_B,
	S→A : E_(K_BS ) {ID_S,ID_A,ID_B,a^y,ID_A},E_(K_AB ) {ID_B,ID_A,N_A},N_B,
	A→B : E_(K_AB ) {ID_A,ID_B,N_B},
Flaws:
Tag: 1


Name: Simplified Gong’s timestamp-based protocol
Paper : p100
	A→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B},N_A,
	S→B : ID_A,ID_B,K_BS,y,N_A,E_(K_AS ) {ID_S,ID_B,ID_A,a^x,ID_B},
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A},E_(K_AB ) {ID_B,ID_A,N_A},N_B,
	S→A : E_(K_BS ) {ID_S,ID_A,ID_B,a^y,ID_A},E_(K_AB ) {ID_B,ID_A,N_A},N_B,
	A→B : E_(K_AB ) {ID_A,ID_B,N_B},

Flaws: The adversary can obtain session key a^x^y  using plaintext secret y,K_BS
Tag: 1


Name: Boyd key agreement protocol
Paper : p101
	A→S : ID_A,ID_B,a^x,
	S→B : E_(K_AS ) {ID_A,ID_B,a^z}, E_(K_BS ) {ID_A,ID_B,a^z},a^x,
	B→A : E_(K_AS ) {ID_A,ID_B,a^z},hash{K_AB,a^x },a^y,
	A→B : hash{K_AB,a^y },

Tag: 0

Name: Boyd key agreement protocol
Paper : p101
	A→S : ID_A,ID_B,a^x,
	S→B : E_(K_AS ) {ID_A,ID_B,a^z}, E_(K_BS ) {ID_A,ID_B,a^z},a^x,
	B→A : E_(K_AS ) {ID_A,ID_B,a^z},hash{K_AB,a^x },a^y,
	A→B : y,hash{K_AB,a^y },

Flaws: The adversary can obtain session key a^x^y  using plaintext secret y
Tag: 1

Name: Boyd key agreement protocol
Paper : p101
	A→S : ID_A,ID_B,a^x,
	S→B : E_(K_AS ) {ID_A,ID_B,a^z}, E_(K_BS ) {ID_A,ID_B,a^z},a^x,
	B→A : E_(K_AS ) {ID_A,ID_B,a^z},hash{K_AB,a^x },a^y,
	A→B : x,hash{K_AB,a^y },

Flaws: The adversary can obtain session key a^x^y  using plaintext secret x
Tag: 1

Name: Boyd key agreement protocol
Paper : p101
	A→S : ID_A,ID_B,a^x,
	S→B : E_(K_AS ) {ID_A,ID_B,a^z}, E_(K_BS ) {ID_A,ID_B,a^z},K_AS,a^x,
	B→A : E_(K_AS ) {ID_A,ID_B,a^z},hash{K_AB,a^x },a^y,
	A→B : hash{K_AB,a^y },

Tag: 0

Name: ISO Public Key Transport Mechanism 4
Paper : p118
	A→B : N_A
	B→A : ID_A,N_A,N_B,E_(Pub_A ) {ID_B,K_AB},Sig_(Pri_B ) {ID_A,N_A,N_B,E_(Pub_A ) {ID_B,K_AB}}

Tag: 0

Name: ISO Public Key Transport Mechanism 4
Paper : p118
	A→B : N_A
	B→A : ID_A,N_A,N_B,Pri_A,E_(Pub_A ) {ID_B,K_AB},Sig_(Pri_B ) {ID_A,N_A,N_B,E_(Pub_A ) {ID_B,K_AB}}


Flaws: The adversary can obtain session key K_AB by decrypting E_(Pub_A ) {ID_B,K_AB}  using plaintext key Pri_A
Tag: 1



Name: ISO Public Key Transport Mechanism 5
Paper : p119
	A→B : N_A
	B→A : N_B,N_A,ID_A,Sig_(Pri_B ) {N_B,N_A,ID_A}
	A→B : N_A,N_B,ID_B,E_(Pub_B ) {ID_A,K_AB},Sig_(Pri_A ) {N_A,N_B,ID_B,E_(Pub_B ) {ID_A,K_AB}}

Tag: 0

Name: ISO Public Key Transport Mechanism 5
Paper : p119
	A→B : N_A
	B→A : N_B,N_A,ID_A,Sig_(Pri_B ) {N_B,N_A,ID_A}
	A→B : N_A,N_B,ID_B,Pri_B,E_(Pub_B ) {ID_A,K_AB},Sig_(Pri_A ) {N_A,N_B,ID_B,E_(Pub_B ) {ID_A,K_AB}}

Flaws: The adversary can obtain session key K_AB by decrypting E_(Pub_B ) {ID_A,K_AB}  using plaintext key Pri_B
Tag: 1

Name: ISO Public Key Transport Mechanism 5
Paper : p119
	A→B : N_A
	B→A : N_B,N_A,ID_A,E_(Pub_A ) {ID_B,a^x},Sig_(Pri_B ) {N_B,N_A,ID_A,E_(Pub_A ) {ID_B,a^x}} 
	A→B : N_A,N_B,ID_B,E_(Pub_B ) {ID_A,a^y},Sig_(Pri_A ) {N_A,N_B,ID_B,E_(Pub_B ) {ID_A,a^y}}

Tag: 0

Name: ISO Public Key Transport Mechanism 5
Paper : p119
	A→B : N_A
	B→A : N_B,N_A,ID_A,Pri_A,E_(Pub_A ) {ID_B,a^x},Sig_(Pri_B ) {N_B,N_A,ID_A,E_(Pub_A ) {ID_B,a^x}} 
	A→B : N_A,N_B,ID_B,E_(Pub_B ) {ID_A,a^y},Sig_(Pri_A ) {N_A,N_B,ID_B,E_(Pub_B ) {ID_A,a^y}}

Tag: 0


Name: ISO Public Key Transport Mechanism 5
Paper : p119
	A→B : N_A
	B→A : N_B,N_A,ID_A,Pri_B,E_(Pub_A ) {ID_B,a^x},Sig_(Pri_B ) {N_B,N_A,ID_A,E_(Pub_A ) {ID_B,a^x}} 
	A→B : N_A,N_B,ID_B,E_(Pub_B ) {ID_A,a^y},Sig_(Pri_A ) {N_A,N_B,ID_B,E_(Pub_B ) {ID_A,a^y}}

Tag: 0

Name: ISO Public Key Transport Mechanism 5
Paper : p119
	A→B : N_A
	B→A : N_B,N_A,ID_A,Pri_A,E_(Pub_A ) {x,ID_B,a^x},Sig_(Pri_B ) {N_B,N_A,ID_A,E_(Pub_A ) {ID_B,a^x}} 
	A→B : N_A,N_B,ID_B,E_(Pub_B ) {ID_A,a^y},Sig_(Pri_A ) {N_A,N_B,ID_B,E_(Pub_B ) {ID_A,a^y}}

Flaws: The adversary can obtain session key a^x^y  by decrypting E_(Pub_A ) {x,ID_B,a^x}  using key Pri_A
Tag: 1

	

Name: ISO Public Key Transport Mechanism 5
Paper : p119
	A→B : N_A
	B→A : N_B,N_A,ID_A,Pri_B,E_(Pub_A ) {ID_B,a^x},Sig_(Pri_B ) {N_B,N_A,ID_A,E_(Pub_A ) {ID_B,a^x}} 
	A→B : N_A,N_B,ID_B,E_(Pub_B ) {y,ID_A,a^y},Sig_(Pri_A ) {N_A,N_B,ID_B,E_(Pub_B ) {ID_A,a^y}}


Flaws: The adversary can obtain session key a^x^y  by decrypting E_(Pub_B ) {y,ID_A,a^y}  using key Pri_B
Tag: 1


Name: ISO Public Key Transport Mechanism 6
Paper : p119
	A→B : E_(Pub_A ) {ID_A,a^x,N_A}
	B→A : E_(Pub_B ) {ID_B,a^y,N_A,N_B}
	A→B : N_B

Tag: 0

Name: ISO Public Key Transport Mechanism 6
Paper : p119
	A→B : Pri_A,E_(Pub_A ) {ID_A,a^x,N_A}
	B→A : E_(Pub_B ) {ID_B,a^y,N_A,N_B}
	A→B : N_B

Tag: 0

Name: ISO Public Key Transport Mechanism 6
Paper : p119
	A→B : Pri_B,E_(Pub_A ) {ID_A,a^x,N_A}
	B→A : E_(Pub_B ) {ID_B,a^y,N_A,N_B}
	A→B : N_B

Tag: 0


Name: ISO Public Key Transport Mechanism 6
Paper : p119
	A→B : E_(Pub_A ) {x,ID_A,a^x,N_A}
	B→A : E_(Pub_B ) {ID_B,a^y,N_A,N_B}
	A→B : N_B

Tag: 0

Name: ISO Public Key Transport Mechanism 6
Paper : p119
	A→B : E_(Pub_A ) {y,ID_A,a^x,N_A}
	B→A : E_(Pub_B ) {ID_B,a^y,N_A,N_B}
	A→B : N_B

Tag: 0

Name: ISO Public Key Transport Mechanism 6
Paper : p119
	A→B : Pri_B,E_(Pub_A ) {ID_A,a^x,N_A}
	B→A : E_(Pub_B ) {x,ID_B,a^y,N_A,N_B}
	A→B : N_B

Flaws: The adversary can obtain session key a^x^y  by decrypting  E_(Pub_B ) {x,ID_B,a^y,N_A,N_B}   using plaintext key Pri_B
Tag: 1

	

Name: ISO Public Key Transport Mechanism 6
Paper : p119
	A→B : Pri_A,E_(Pub_A ) {ID_A,a^x,N_A,y}
	B→A : E_(Pub_B ) {ID_B,a^y,N_A,N_B}
	A→B : N_B

Flaws: The adversary can obtain session key a^x^y  by decrypting  E_(Pub_A ) {ID_A,a^x,N_A,y}   using plaintext key Pri_A
Tag: 1



Name: Blake Wilson Menezes Key Transport Protocol
Paper : p121
	A→B : ID_A,N_A
	B→A : ID_A,N_B,N_A,E_(Pub_A ) {ID_B,K_AB},Sig_(Pri_B ) {ID_B,ID_A,N_B,N_A,E_(Pub_A ) {ID_B,K_AB}}
	A→B : ID_A,ID_B,N_A,N_B,Sig_(Pri_A ) {ID_A,ID_B,N_B}

Tag: 0


Name: Blake Wilson Menezes Key Transport Protocol
Paper : p121
	A→B : ID_A,N_A
	B→A : ID_A,N_B,N_A,Pri_A,E_(Pub_A ) {ID_B,K_AB},Sig_(Pri_B ) {ID_B,ID_A,N_B,N_A,E_(Pub_A ) {ID_B,K_AB}}
	A→B : ID_A,ID_B,N_A,N_B,Sig_(Pri_A ) {ID_A,ID_B,N_B}


Flaws: The adversary can obtain session key K_AB by decrypting E_(Pub_A ) {ID_B,K_AB}  using plaintext key Pri_A
Tag: 1


Name: The Two-pass CCITT X.509 Protocol
Paper : p123
	A→B : T_A,N_A,ID_B,E_(Pub_B ) {a^x },Sig_(Pri_A ) {T_A,N_A,ID_B,E_(Pub_B ) {a^x }} 
	B→A : T_B,N_B,ID_A,N_A,E_(Pub_A ) {a^y},Sig_(Pri_B ) {T_B,N_B,ID_A,N_A,E_(Pub_A ) {a^y}}

Tag: 0

Name: The Two-pass CCITT X.509 Protocol
Paper : p123
	A→B : T_A,N_A,ID_B,Pri_B,E_(Pub_B ) {a^x },Sig_(Pri_A ) {T_A,N_A,ID_B,E_(Pub_B ) {a^x }}
	B→A : T_B,N_B,ID_A,N_A,E_(Pub_A ) {a^y},Sig_(Pri_B ) {T_B,N_B,ID_A,N_A,E_(Pub_A ) {a^y}}

Tag: 0

Name: The Two-pass CCITT X.509 Protocol
Paper : p123
	A→B : T_A,N_A,ID_B,Pri_A,E_(Pub_B ) {a^x },Sig_(Pri_A ) {T_A,N_A,ID_B,E_(Pub_B ) {a^x }}
	B→A : T_B,N_B,ID_A,N_A,E_(Pub_A ) {a^y},Sig_(Pri_B ) {T_B,N_B,ID_A,N_A,E_(Pub_A ) {a^y}}

Tag: 0

Name: The Two-pass CCITT X.509 Protocol
Paper : p123
	A→B : T_A,N_A,ID_B,Pri_B,E_(Pub_B ) {y,a^x },Sig_(Pri_A ) {T_A,N_A,ID_B,E_(Pub_B ) {a^x }}
	B→A : T_B,N_B,ID_A,N_A,E_(Pub_A ) {a^y},Sig_(Pri_B ) {T_B,N_B,ID_A,N_A,E_(Pub_A ) {a^y}}

Flaws: The adversary can obtain session key a^x^y  by decrypting  E_(Pub_B ) {y,a^x }   using plaintext key Pri_B
Tag: 1


Name: The Two-pass CCITT X.509 Protocol
Paper : p123
	A→B : T_A,N_A,ID_B,Pri_A,E_(Pub_B ) {a^x },Sig_(Pri_A ) {T_A,N_A,ID_B,E_(Pub_B ) {a^x }}
	B→A : T_B,N_B,ID_A,N_A,E_(Pub_A ) {x,a^y},Sig_(Pri_B ) {T_B,N_B,ID_A,N_A,E_(Pub_A ) {a^y}}

Flaws: The adversary can obtain session key a^x^y  by decrypting  E_(Pub_A ) {x,a^y}   using plaintext key Pri_A
Tag: 1



Name: The Two-pass CCITT X.509 Protocol
Paper : p123
	A→B : T_A,ID_B,Pri_A,E_(Pub_B ) {a^x},Sig_(Pri_A ) {T_A,ID_B,E_(Pub_B ) {a^x}}
	B→A : T_B,ID_A,E_(Pub_A ) {a^y},Sig_(Pri_B ) {T_B,ID_A,E_(Pub_A ) {a^y}}

Tag: 0


Name: The Two-pass CCITT X.509 Protocol
Paper : p123
	A→B : T_A,ID_B,Pri_B,E_(Pub_B ) {a^x},Sig_(Pri_A ) {T_A,ID_B,E_(Pub_B ) {a^x}}
	B→A : T_B,ID_A,E_(Pub_A ) {a^y},Sig_(Pri_B ) {T_B,ID_A,E_(Pub_A ) {a^y}}

Tag: 0


Name: The Two-pass CCITT X.509 Protocol
Paper : p123
	A→B : T_A,ID_B,Pri_B,E_(Pub_B ) {y,a^x},Sig_(Pri_A ) {T_A,ID_B,E_(Pub_B ) {a^x}}
	B→A : T_B,ID_A,E_(Pub_A ) {a^y},Sig_(Pri_B ) {T_B,ID_A,E_(Pub_A ) {a^y}}

Flaws: The adversary can obtain session key a^x^y  by decrypting   E_(Pub_B ) {y,a^x} using plaintext key Pri_B
Tag: 1


Name: The Improved MSR Protocol
Paper: p127
	A→B : ID_A,Cert_A,N_A
	B→A : E_(Pub_A ) {K_AB},E_(K_AB ) {ID_A,N_A,N_B,Cert_B}
	A→B : E_(K_AB ) {ID_B,N_B}

Tag: 0

Name: The Improved MSR Protocol
Paper: p127
	A→B : ID_A,Cert_A,N_A,Pri_A
	B→A : E_(Pub_A ) {K_AB},E_(K_AB ) {ID_A,N_A,N_B,Cert_B} 
	A→B : E_(K_AB ) {ID_B,N_B}

Flaws: The adversary can obtain session key K_AB by decrypting E_(Pub_A ) {K_AB}  using plaintext key Pri_A
Tag: 1

Name: The Improved Beller-Yacobi Protocol
Paper : p129
	A→B : ID_A,Cert_A,N_A
	B→A : E_(Pub_A ) {K_AB}, E_(K_AB ) {ID_B,K_(Pub_B ),Cert_B},Sig_(Pri_B ) {hash{ID_A,ID_B,N_A,K_AB}}
	A→B : E_(K_AB ) {N_A}

Tag: 0

Name: The Improved Beller-Yacobi Protocol
Paper : p129
	A→B : ID_A,Cert_A,N_A,Pri_A
	B→A : E_(Pub_A ) {K_AB}, E_(K_AB ) {ID_B,K_(Pub_B ),Cert_B},Sig_(Pri_B ) {hash{ID_A,ID_B,N_A,K_AB}}
	A→B : E_(K_AB ) {N_A}

Flaws: The adversary can obtain session key K_AB by decrypting E_(Pub_A ) {K_AB}  using plaintext key Pri_A
Tag: 1


Name: The Adapted station-to-station Protocol
Paper: p167
	A→B : ID_A,ID_B,a^x 
	B→A : ID_B,ID_A,a^y,Sig_(Pri_B ) {ID_A,a^y,a^x}
	A→B : ID_A,ID_B,Sig_(Pri_A ) {ID_B,a^x,a^y}

Tag: 0

Name: The Adapted station-to-station Protocol
Paper: p167
	A→B : ID_A,ID_B,a^x 
	B→A : ID_B,ID_A,a^y,Sig_(Pri_B ) {ID_A,a^y,a^x}
	A→B : ID_A,ID_B,x,Sig_(Pri_A ) {ID_B,a^x,a^y}

Flaws: The adversary can obtain session key a^x^y  by using plaintext secret x 
Tag: 1


Name: The Adapted station-to-station Protocol
Paper: p167
	A→B : ID_A,ID_B,a^x 
	B→A : ID_B,ID_A,a^y,Sig_(Pri_B ) {ID_A,a^y,a^x}
	A→B : ID_A,ID_B,y,Sig_(Pri_A ) {ID_B,a^x,a^y}

Flaws: The adversary can obtain session key a^x^y  by using plaintext secret y 
Tag: 1

Name: The Adapted station-to-station Protocol
Paper: p167
	A→B : a^x
	B→A : a^y,Sig_(Pri_B ) {ID_A,a^y,a^x}
	A→B : Sig_(Pri_A ) {ID_B,a^x,a^y}

Tag: 0


Name: The Adapted station-to-station Protocol
Paper: p167
	A→B : a^x,x
	B→A : a^y,Sig_(Pri_B ) {ID_A,a^y,a^x}
	A→B : Sig_(Pri_A ) {ID_B,a^x,a^y}

Flaws: The adversary can obtain session key a^x^y  by using plaintext secret x
Tag: 1


Name: The Adapted station-to-station Protocol
Paper: p167
	A→B : a^x,y
	B→A : a^y,Sig_(Pri_B ) {ID_A,a^y,a^x}
	A→B : Sig_(Pri_A ) {ID_B,a^x,a^y}

Flaws: The adversary can obtain session key a^x^y  by using plaintext secret y
Tag: 1


Name: The Adapted station-to-station Protocol
Paper: Remarks on the Unknown KeyShare Attacks
	A→B : ID_A,a^x
	B→A : Cert_B,a^y,Sig_(Pri_B ) {a^y,a^x},hash{K_AB,a^y,a^x}
	A→B : Cert_A,Sig_(Pri_A ) {a^x,a^y} ,hash{K_AB,a^x,a^y}

Tag: 0

Name: The Adapted station-to-station Protocol
Paper: Remarks on the Unknown KeyShare Attacks
	A→B : ID_A,a^x,x
	B→A : Cert_B,a^y,Sig_(Pri_B ) {a^y,a^x},hash{K_AB,a^y,a^x}
	A→B : Cert_A,Sig_(Pri_A ) {a^x,a^y} ,hash{K_AB,a^x,a^y}

Flaws: The adversary can obtain session key a^x^y  by using plaintext secret x
Tag: 1

Name: The Adapted station-to-station Protocol
Paper: Remarks on the Unknown KeyShare Attacks
	A→B : ID_A,a^x,y
	B→A : Cert_B,a^y,Sig_(Pri_B ) {a^y,a^x},hash{K_AB,a^y,a^x}
	A→B : Cert_A,Sig_(Pri_A ) {a^x,a^y} ,hash{K_AB,a^x,a^y}

Flaws: The adversary can obtain session key a^x^y  by using plaintext secret y
Tag: 1

Name: The Oakley Protocol
Paper: p169
	A→B : N_A^',a^x,ID_A,ID_B,N_A,Sig_(Pri_A ) {ID_A,ID_B,N_A,a^x}
	B→A : N_a^',N_A^',a^y,ID_B,ID_A,N_B,N_A,Sig_(Pri_B ) {ID_B,ID_A,N_B,N_A,a^x,a^y}
	A→B : N_A^',N_a^',a^x,ID_A,ID_B,N_A,N_B,Sig_(Pri_A ) {ID_A,ID_B,N_A,N_B,a^x,a^y}

Tag: 0

Name: The Oakley Protocol
Paper: p169
	A→B : N_A^',a^x,x,ID_A,ID_B,N_A,Sig_(Pri_A ) {ID_A,ID_B,N_A,a^x}
	B→A : N_a^',N_A^',a^y,ID_B,ID_A,N_B,N_A,Sig_(Pri_B ) {ID_B,ID_A,N_B,N_A,a^x,a^y}
	A→B : N_A^',N_a^',a^x,ID_A,ID_B,N_A,N_B,Sig_(Pri_A ) {ID_A,ID_B,N_A,N_B,a^x,a^y}

Flaws: The adversary can obtain session key a^x^y  by using plaintext secret x
Tag: 1

Name: The Oakley Protocol
Paper: p169
	A→B : N_A^',a^x,y,ID_A,ID_B,N_A,Sig_(Pri_A ) {ID_A,ID_B,N_A,a^x}
	B→A : N_a^',N_A^',a^y,ID_B,ID_A,N_B,N_A,Sig_(Pri_B ) {ID_B,ID_A,N_B,N_A,a^x,a^y}
	A→B : N_A^',N_a^',a^x,ID_A,ID_B,N_A,N_B,Sig_(Pri_A ) {ID_A,ID_B,N_A,N_B,a^x,a^y}

Flaws: The adversary can obtain session key a^x^y  by using plaintext secret y
Tag: 1

Name: Alternative Oakley Protocol
Paper: p170
	A→B : N_A^',a^x,K_(Pub_B ),E_(Pub_B ) {ID_A,ID_B,N_A }
	B→A : N_a^',N_A^',a^y,E_(Pub_A ) {ID_B,ID_A,N_B },hash{K_AB,ID_B,ID_A,a^y,a^x}
	A→B : N_A^',N_a^',hash{K_AB,ID_A,ID_B,a^x,a^y}

Tag: 0

Name: Alternative Oakley Protocol
Paper: p170
	A→B : N_A^',a^x,x,K_(Pub_B ),E_(Pub_B ) {ID_A,ID_B,N_A }
	B→A : N_a^',N_A^',a^y,E_(Pub_A ) {ID_B,ID_A,N_B },hash{K_AB,ID_B,ID_A,a^y,a^x}
	A→B : N_A^',N_a^',hash{K_AB,ID_A,ID_B,a^x,a^y}

Flaws: The adversary can obtain session key a^x^y  by using plaintext secret x
Tag: 1

Name: Alternative Oakley Protocol
Paper: p170
	A→B : N_A^',a^x,y,K_(Pub_B ),E_(Pub_B ) {ID_A,ID_B,N_A }
	B→A : N_a^',N_A^',a^y,E_(Pub_A ) {ID_B,ID_A,N_B },hash{K_AB,ID_B,ID_A,a^y,a^x}
	A→B : N_A^',N_a^',hash{K_AB,ID_A,ID_B,a^x,a^y}

Flaws: The adversary can obtain session key a^x^y  by using plaintext secret y
Tag: 1

Name: Conservative Oakley Protocol
Paper: p172
	A→B : N_A^'
	B→A : N_a^',N_A^',a^y
	A→B : N_A^',N_a^',a^x
	B→A : N_a^',N_A^',a^y,E_(K_AB ) {ID_B,ID_A,E_(Pub_A ) {N_B }}
	A→B : N_A^',N_a^',a^x,E_(K_AB ) {E_(Pub_B ) {N_A,N_B },ID_A,ID_B},hash{AB^', {ID_A,ID_B,a^x,a^y}
	B→A : N_a^',N_A^',E_(K_AB ) {ID_B,ID_A,a^y,a^x},hash{AB^', {ID_A,ID_B,a^x,a^y}

Tag: 0

Name: Conservative Oakley Protocol
Paper: p172
	A→B : N_A^'
	B→A : N_a^',N_A^',a^y,y
	A→B : N_A^',N_a^',a^x
	B→A : N_a^',N_A^',a^y,E_(K_AB ) {ID_B,ID_A,E_(Pub_A ) {N_B }}
	A→B : N_A^',N_a^',a^x,E_(K_AB ) {E_(Pub_B ) {N_A,N_B },ID_A,ID_B},hash{AB^', {ID_A,ID_B,a^x,a^y}
	B→A : N_a^',N_A^',E_(K_AB ) {ID_B,ID_A,a^y,a^x},hash{AB^', {ID_A,ID_B,a^x,a^y}

Flaws: The adversary can obtain session key a^x^y  by using plaintext secret y
Tag: 1

Name: Conservative Oakley Protocol
Paper: p172
	A→B : N_A^'
	B→A : N_a^',N_A^',a^y,x
	A→B : N_A^',N_a^',a^x
	B→A : N_a^',N_A^',a^y,E_(K_AB ) {ID_B,ID_A,E_(Pub_A ) {N_B }}
	A→B : N_A^',N_a^',a^x,E_(K_AB ) {E_(Pub_B ) {N_A,N_B },ID_A,ID_B,hash{AB^', {ID_A,ID_B,a^x,a^y}}
	B→A : N_a^',N_A^',E_(K_AB ) {ID_B,ID_A,a^y,a^x,hash{AB^', {ID_A,ID_B,a^x,a^y}}

Flaws: The adversary can obtain session key a^x^y  by using plaintext secret x
Tag: 1


Name: SKEME Protocol
Paper: p173
	A→B : a^x,E_(Pub_A ) {ID_A,N_A }
	B→A : a^y,E_(Pub_A ) {N_B },hash{K_AB,a^x,a^y,ID_B,ID_A}
	A→B : hash{K_AB,a^y,a^x,ID_A,ID_B}

Tag: 0

Name: SKEME Protocol
Paper: p173
	A→B : a^x,x,E_(Pub_A ) {ID_A,N_A }
	B→A : a^y,E_(Pub_A ) {N_B },hash{K_AB,a^x,a^y,ID_B,ID_A}
	A→B : hash{K_AB,a^y,a^x,ID_A,ID_B}


Flaws: The adversary can obtain session key a^x^y  by using plaintext secret x
Tag: 1

Name: SKEME Protocol
Paper: p173
	A→B : Pri_A,E_(Pub_A ) {a^x,y,ID_A,N_A }
	B→A : a^y,E_(Pub_A ) {N_B },hash{K_AB,a^x,a^y,ID_B,ID_A}
	A→B : hash{K_AB,a^y,a^x,ID_A,ID_B}

Flaws: The adversary can obtain session key a^x^y  by decrypting E_(Pub_A ) {a^x,y,ID_A,N_A } using plaintext key Pri_A
Tag: 1

Name: ASPeCT Protocol
Paper: p192
	A→B :  a^x
	B→A :  a^y,N_B,hash{K_AB,a^y,N_B,ID_B}
	A→B : E_(K_AB ) {Sig_(Pri_A ) {hash{a^x,a^y,N_B,ID_B }}}

Tag: 0

Name: ASPeCT Protocol
Paper: p192
	A→B :  a^x,x
	B→A :  a^y,N_B,hash{K_AB,a^y,N_B,ID_B}
	A→B : E_(K_AB ) {Sig_(Pri_A ) {hash{a^x,a^y,N_B,ID_B }}}

Flaws: The adversary can obtain session key a^x^y  by using plaintext secret x
Tag: 1

Name: ASPeCT Protocol
Paper: p192
	A→B :  a^x,y
	B→A :  a^y,N_B,hash{K_AB,a^y,N_B,ID_B}
	A→B : E_(K_AB ) {Sig_(Pri_A ) {hash{a^x,a^y,N_B,ID_B }}}

Flaws: The adversary can obtain session key a^x^y  by using plaintext secret y
Tag: 1

Name: PAK Protocol
Paper: p254
	A→B : E_(Password_A ) {ID_A,ID_B,a^x}
	B→A :  a^y,hash{ID_A,ID_B,E_(Password_A ) {a^x},a^y,K_AB,Password_A}
	A→B : hash{ID_A,ID_B,E_(Password_A ) {a^x},a^y,K_AB,Password_A}

Tag: 0

Name: PAK Protocol
Paper: p254
	A→B : Password_A,E_(Password_A ) {ID_A,ID_B,a^x}
	B→A :  a^y,hash{ID_A,ID_B,E_(Password_A ) {a^x},a^y,K_AB,Password_A}
	A→B : hash{ID_A,ID_B,E_(Password_A ) {a^x},a^y,K_AB,Password_A}
Flaws: 
Tag: 0

Name: PAK Protocol
Paper: p254
	A→B : Password_A ,E_(Password_A ) {x,ID_A,ID_B,a^x}
	B→A :  a^y,hash{ID_A,ID_B,E_(Password_A ) {a^x},a^y,K_AB,Password_A}
	A→B : hash{ID_A,ID_B,E_(Password_A ) {a^x},a^y,K_AB,Password_A}

Flaws: The adversary can obtain session key a^x^y  by decrypting  E_(Password_A ) {x,ID_A,ID_B,a^x}   using plaintext key Password_A
Tag: 1

Name: PAK Protocol
Paper: p254
	A→B : Password_A,E_(Password_A ) {ID_A,ID_B,a^x,y}
	B→A :  a^y,hash{ID_A,ID_B,E_(Password_A ) {a^x},a^y,K_AB,Password_A}
	A→B : hash{ID_A,ID_B,E_(Password_A ) {a^x},a^y,K_AB,Password_A}

Flaws: The adversary can obtain session key a^x^y  by decrypting  E_(Password_A ) {y,ID_A,ID_B,a^x}   using plaintext key Password_A
Tag: 1

Name: SPEKE Protocol
Paper: p257
	A→B : a^x
	B→A :  a^y,hash{ID_B,a^x,a^y,K_AB,Password_B}
	A→B : hash{ID_A,a^x,a^y,K_AB,Password_B}

Tag: 0

Name: SPEKE Protocol
Paper: p257
	A→B : a^x,x
	B→A :  a^y,hash{ID_B,a^x,a^y,K_AB,Password_B}
	A→B : hash{ID_A,a^x,a^y,K_AB,Password_B}

Flaws: The adversary can obtain session key a^x^y  using plaintext secret x
Tag: 1

Name: SPEKE Protocol
Paper: p257
	A→B : a^x,y
	B→A :  a^y,hash{ID_B,a^x,a^y,K_AB,Password_B}
	A→B : hash{ID_A,a^x,a^y,K_AB,Password_B}

Flaws: The adversary can obtain session key a^x^y  using plaintext secret x
Tag: 1

Name: A Nonce based Mutual Authentication Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B
	S→A : ID_A,ID_B,N_S
	A→B: E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}},N_S
	B→S : E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}}
	B→S :E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}}
	S→B : E_(K_BS ) {N_B,K_AB ,N_A^' },E_(K_AS ) {N_A,K_AB ,N_a^' ,ID_B}
	B→A : E_(K_AS ) {N_A,K_AB ,N_a^',ID_B },E_(K_AB ) {N_a^',N_S}
	A→B : E_(K_AB ) {hash{N_a^'},N_S}

Tag: 0

Name: A Nonce based Mutual Authentication Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B
	S→A : ID_A,ID_B,N_S
	A→B: E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}},N_S
	B→S : E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}}
	B→S :E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}}
	S→B : E_(K_BS ) {N_B,K_AB ,N_A^' },E_(K_AS ) {N_A,K_AB ,N_a^' }
	B→A : E_(K_AS ) {N_A,K_AB ,N_a^' },E_(K_AB ) {N_a^',N_S}
	A→B : E_(K_AB ) {hash{N_a^'},N_S}


Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 5-6 i.e. E_(K_AS ) {N_A,K_AB ,N_a^' }
Tag: 1



Name: A Nonce based Mutual Authentication Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B
	S→A : ID_A,ID_B,N_S
	A→B: N_S ,K_BS ,E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}}
	B→S : E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}}
	B→S :E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}}
	S→B : E_(K_BS ) {N_B,K_AB ,N_A^' },E_(K_AS ) {N_A,K_AB ,N_a^' }
	B→A : E_(K_AS ) {N_A,K_AB ,N_a^' },E_(K_AB ) {N_a^',N_S}
	A→B : E_(K_AB ) {hash{N_a^'},N_S}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {N_B,K_AB ,N_A^' }  using plaintext key K_BS
Tag: 1

Name: Enhanced Kerberos Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {T_A}}
	S→A : E_(K_AS ) {ID_B,N_A,K_AB ,N_A^' },E_(K_BS ) {ID_A,K_AB,T_S}
	A→B: E_(K_BS ) {ID_A,K_AB,T_S}

Tag: 0


Name: Enhanced Kerberos Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {T_A}}
	S→A : E_(K_AS ) {N_A,K_AB ,N_A^' },E_(K_BS ) {ID_A,K_AB,T_S}
	A→B: E_(K_BS ) {ID_A,K_AB,T_S}
	
Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 2 i.e. E_(K_AS ) {N_A,K_AB ,N_A^' }
Tag: 1



Name: Enhanced Kerberos Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	A→S : E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {T_A}}
	S→A : E_(K_AS ) {N_A,K_AB ,N_A^' },E_(K_BS ) {ID_A,K_AB,T_S}
	A→B: K_BS,E_(K_BS ) {ID_A,K_AB,T_S} 

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,K_AB,T_S}   using plaintext key K_BS
Tag: 1

Name: Enhanced Kerberos Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	A→S : E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {T_A}}
	S→A : E_(K_AS ) {N_A,K_AB ,N_A^' },E_(K_BS ) {ID_A,K_AB,T_S}
	A→B: K_AS,E_(K_BS ) {ID_A,K_AB,T_S} 

Flaws: The adversary can obtain session key K_AB by decrypting  E_(K_AS ) {N_A,K_AB ,N_A^' }  using plaintext key K_AS
Tag: 1


Name: T-SIP authentication scheme
Paper: Communications in Computer and Information Science
	A→B : ID_A,a^x ,hash{Password_A}, 
	B→A : ID_B,a^y ,hash{Password_A},hash{a^x,K_AB}, 
	A→B : ID_A,ID_B,hash{ID_A,ID_B,K_AB}, 

Tag: 0

Name: T-SIP authentication scheme
Paper: Communications in Computer and Information Science
	A→B : ID_A,x,a^x ,hash{Password_A}, 
	B→A : ID_B,a^y ,hash{Password_A},hash{a^x,K_AB}, 
	A→B : ID_A,ID_B,hash{ID_A,ID_B,K_AB}, 

Flaws: The adversary can obtain session key a^x^y using plaintext secret x 
Tag: 1

Name: T-SIP authentication scheme
Paper: Communications in Computer and Information Science
	A→B : ID_A,y,a^x ,hash{Password_A}, 
	B→A : ID_B,a^y ,hash{Password_A},hash{a^x,K_AB}, 
	A→B : ID_A,ID_B,hash{ID_A,ID_B,K_AB}, 

Flaws: The adversary can obtain session key a^x^y using plaintext secret y 
Tag: 1

Name: Authentication and key agreement phase of the proposed scheme
Paper: An efficient and secure authentication and key agreement scheme for session initiation protocol using ECC
	A→B : ID_A,a^x, 
	B→A : ID_B,a^y,hash{ID_A,a^y,K_AB}, 
	A→B : ID_A,ID_B,hash{ID_A,a^y,ID_B,K_AB,Password_A}, 

Tag: 0

Name: Authentication and key agreement phase of the proposed scheme
Paper: An efficient and secure authentication and key agreement scheme for session initiation protocol using ECC
	A→B : ID_A,a^x,x, 
	B→A : ID_B,a^y,hash{ID_A,a^y,K_AB}, 
	A→B : ID_A,ID_B,hash{ID_A,a^y,ID_B,K_AB,Password_A}, 

Flaws: The adversary can obtain session key a^x^y using plaintext secret x 
Tag: 1

Name: Authentication and key agreement phase of the proposed scheme
Paper: An efficient and secure authentication and key agreement scheme for session initiation protocol using ECC
	A→B : ID_A,a^x,y, 
	B→A : ID_B,a^y,hash{ID_A,a^y,K_AB}, 
	A→B : ID_A,ID_B,hash{ID_A,a^y,ID_B,K_AB,Password_A}, 

Flaws: The adversary can obtain session key a^x^y using plaintext secret y
Tag: 1


Name: Authentication and key agreement phase of the proposed scheme
Paper: An efficient and secure authentication and key agreement scheme for session initiation protocol using ECC
	A→B : ID_A,E_(Pub_B ) {a^x}, 
	B→A : ID_B,a^y,hash{ID_A,a^y,K_AB}, 
	A→B : ID_A,ID_B,hash{ID_A,a^y,ID_B,K_AB,Password_A}, 

Tag: 0

Name: Authentication and key agreement phase of the proposed scheme
Paper: An efficient and secure authentication and key agreement scheme for session initiation protocol using ECC
	A→B : ID_A,x,E_(Pub_B ) {a^x}, 
	B→A : ID_B,a^y,hash{ID_A,a^y,K_AB}, 
	A→B : ID_A,ID_B,hash{ID_A,a^y,ID_B,K_AB,Password_A}, 


Flaws: The adversary can obtain session key a^x^y using plaintext secret x 
Tag: 1

Name: Authentication and key agreement phase of the proposed scheme
Paper: An efficient and secure authentication and key agreement scheme for session initiation protocol using ECC
	A→B : ID_A,E_(Pub_B ) {a^x}, 
	B→A : ID_B,a^y,Pri_B,hash{ID_A,a^y,K_AB}, 
	A→B : ID_A,ID_B,hash{ID_A,a^y,ID_B,K_AB,Password_A}, 

Tag: 0

Name: Authentication and key agreement phase of the proposed scheme
Paper: An efficient and secure authentication and key agreement scheme for session initiation protocol using ECC
	A→B : ID_A,E_(Pub_B ) {a^x}, 
	B→A : ID_B,a^y,Pri_B,y,hash{ID_A,a^y,K_AB}, 
	A→B : ID_A,ID_B,hash{ID_A,a^y,ID_B,K_AB,Password_A}, 

Flaws: The adversary can obtain session key a^x^y  by decrypting  E_(Pub_B ) {a^x}   using plaintext key Pri_B
Tag: 1


Name: SIP authentication procedure
Paper: A Novel Mutual Authentication Scheme for Session Initiation Protocol based on Elliptic Curve Cryptography
	A→B : ID_A,E_(Password_A ) {ID_A,a^x}, 
	B→A : ID_B,a^y,hash{K_AB,a^y}, 
	A→B : ID_A,ID_B,hash{ID_A,ID_B,K_AB}, 

Tag: 0

Name: SIP authentication procedure
Paper: A Novel Mutual Authentication Scheme for Session Initiation Protocol based on Elliptic Curve Cryptography
	A→B : ID_A,E_(Password_A ) {ID_A,a^x}, 
	B→A : ID_B,a^y,hash{K_AB,a^y}, 
	A→B : ID_A,ID_B,x,hash{ID_A,ID_B,K_AB}, 

Flaws: The adversary can obtain session key a^x^y using plaintext secret x 
Tag: 1

Name: SIP authentication procedure
Paper: A Novel Mutual Authentication Scheme for Session Initiation Protocol based on Elliptic Curve Cryptography
	A→B : ID_A,E_(Password_A ) {ID_A,a^x}, 
	B→A : ID_B,a^y,y,hash{K_AB,a^y}
	A→B : ID_A,ID_B,hash{ID_A,ID_B,K_AB}

Tag: 0

Name: SIP authentication procedure
Paper: A Novel Mutual Authentication Scheme for Session Initiation Protocol based on Elliptic Curve Cryptography
	A→B : ID_A,E_(Password_A ) {ID_A,a^x}, 
	B→A : ID_B,a^y,hash{K_AB,a^y}, 
	A→B : ID_A,ID_B,y,Password_A,hash{ID_A,ID_B,K_AB}, 

Flaws: The adversary can obtain session key a^x^y  by decrypting  E_(Password_A ) {ID_A,a^x}   using plaintext key Password_A 
Tag: 1



Name: PAKA Authentication
Paper: IMPROVING THE LEE-LEE’S PASSWORD BASED AUTHENTICATED KEY AGREEMENT PROTOCOL
	A→B : N_M,ID_A,a^x ,hash{N_M,ID_A,ID_B,Password_A}, 
	B→A : N_M,ID_B,a^y,hash{N_M,ID_A,ID_B,a^x,K_AB}, 
	A→B : N_M,ID_A,ID_B,hash{N_M,ID_A,ID_B,a^y,K_AB} , 

Tag: 0

Name: PAKA Authentication
Paper: IMPROVING THE LEE-LEE’S PASSWORD BASED AUTHENTICATED KEY AGREEMENT PROTOCOL
	A→B : N_M,ID_A,a^x ,hash{N_M,ID_A,ID_B,Password_A}, 
	B→A : N_M,ID_B,a^y,x,hash{N_M,ID_A,ID_B,a^x,K_AB}, 
	A→B : N_M,ID_A,ID_B,hash{N_M,ID_A,ID_B,a^y,K_AB} , 

Flaws: The adversary can obtain session key a^x^y using plaintext secret x 
Tag: 1

Name: PAKA Authentication
Paper: IMPROVING THE LEE-LEE’S PASSWORD BASED AUTHENTICATED KEY AGREEMENT PROTOCOL
	A→B : N_M,ID_A,a^x ,y,hash{N_M,ID_A,ID_B,Password_A}, 
	B→A : N_M,ID_B,a^y,hash{N_M,ID_A,ID_B,a^x,K_AB}, 
	A→B : N_M,ID_A,ID_B,hash{N_M,ID_A,ID_B,a^y,K_AB} , 

Flaws: The adversary can obtain session key a^x^y using plaintext secret y
Tag: 1


Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A , K_AS }, E_(K_AS ) {N_A ,ID_B}
	S→B : ID_A,ID_B
	B→S : ID_A,ID_B,E_(Pub_S ) {N_B , K_BS }, E_(K_BS ) {N_B ,ID_A}
	S→A : N_A ,E_(K_AS ) {N_A ,K_AB,ID_B}
	S→B : N_B ,E_(K_BS ) {N_B ,K_AB}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}

Tag: 0

Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A , K_AS }, E_(K_AS ) {N_A ,ID_B}
	S→B : ID_A,ID_B
	B→S : ID_A,ID_B,E_(Pub_S ) {N_B , K_BS }, E_(K_BS ) {N_B ,ID_A}
	S→A : N_A ,E_(K_AS ) {N_A ,K_AB}
	S→B : N_B ,E_(K_BS ) {N_B ,K_AB}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 4-5 i.e. ,E_(K_AS ) {N_A ,K_AB}
Tag: 1


Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A , K_AS }, E_(K_AS ) {N_A ,ID_B}
	S→B : ID_A,ID_B ,K_AS 
	B→S : ID_A,ID_B,E_(Pub_S ) {N_B , K_BS }, E_(K_BS ) {N_B ,ID_A}
	S→A : N_A ,E_(K_AS ) {N_A ,K_AB}
	S→B : N_B ,E_(K_BS ) {N_B ,K_AB}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}


	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A ,K_AB}  using plaintext key K_AS
Tag: 1


Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A , K_AS }, E_(K_AS ) {N_A ,ID_B}
	S→B : ID_A,ID_B ,K_BS 
	B→S : ID_A,ID_B,E_(Pub_S ) {N_B , K_BS }, E_(K_BS ) {N_B ,ID_A}
	S→A : N_A ,E_(K_AS ) {N_A ,K_AB}
	S→B : N_B ,E_(K_BS ) {N_B ,K_AB}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A ,K_AB}  using plaintext key K_BS
Tag: 1

Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A , K_AS }, E_(K_AS ) {N_A ,ID_B}
	S→B : ID_A,ID_B ,Pri_S 
	B→S : ID_A,ID_B,E_(Pub_S ) {N_B , K_BS }, E_(K_BS ) {N_B ,ID_A}
	S→A : N_A ,E_(K_AS ) {N_A ,K_AB}
	S→B : N_B ,E_(K_BS ) {N_B ,K_AB}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}

Flaws: The adversary can obtain secret key K_AS by decrypting E_(Pub_S ) {N_A , K_AS }  using plaintext key Pri_S and then obtain K_AB
Tag: 1



Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A ,ID_B , K_AS }
	S→B : ID_A,ID_B
	B→S : ID_A,ID_B,E_(Pub_S ) {N_B ,ID_A , K_BS }
	S→A : N_A ,E_(K_AS ) {N_A ,K_AB}
	S→B : N_B ,E_(K_BS ) {N_B ,K_AB}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}

Tag: 0

Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A ,ID_B , K_AS }
	S→B : ID_A,ID_B ,Pri_S
	B→S : ID_A,ID_B,E_(Pub_S ) {N_B ,ID_A , K_BS }
	S→A : N_A ,E_(K_AS ) {N_A ,K_AB}
	S→B : N_B ,E_(K_BS ) {N_B ,K_AB}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}


Flaws: The adversary can obtain secret key K_AS by decrypting E_(Pub_S ) {N_A ,ID_B , K_AS }  using plaintext key Pri_S and then obtain K_AB
Tag: 1


Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A ,ID_B , K_AS }
	S→B : ID_A,ID_B , K_AS
	B→S : ID_A,ID_B,E_(Pub_S ) {N_B ,ID_A , K_BS }
	S→A : N_A ,E_(K_AS ) {N_A ,K_AB}
	S→B : N_B ,E_(K_BS ) {N_B ,K_AB}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A ,K_AB}  using plaintext key K_AS
Tag: 1

Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A ,ID_B , K_AS }
	S→B : ID_A,ID_B , K_BS
	B→S : ID_A,ID_B,E_(Pub_S ) {N_B ,ID_A , K_BS }
	S→A : N_A ,E_(K_AS ) {N_A ,K_AB}
	S→B : N_B ,E_(K_BS ) {N_B ,K_AB}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}
	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {N_B ,K_AB}  using plaintext key K_BS
Tag: 1

Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A , Password_A }, E_(Password_A ) {N_A ,ID_B}
	S→B : ID_A,ID_B
	B→S : ID_A,ID_B,E_(Pub_S ) {N_B , Password_B }, E_(Password_B ) {N_B ,ID_A}
	S→A : N_A ,E_(Password_A ) {N_A ,K_AB,ID_B}
	S→B : N_B ,E_(Password_B ) {N_B ,K_AB}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}

Tag: 0


Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A , Password_A }, E_(Password_A ) {N_A ,ID_B}
	S→B : ID_A,ID_B
	B→S : ID_A,ID_B,E_(Pub_S ) {N_B , Password_B }, E_(Password_B ) {N_B ,ID_A}
	S→A : N_A ,E_(Password_A ) {N_A ,K_AB}
	S→B : N_B ,E_(Password_B ) {N_B ,K_AB}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 4 i.e. E_(Password_A ) {N_A ,K_AB}
Tag: 1


Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A , Password_A }, E_(Password_A ) {N_A ,ID_B}
	S→B : ID_A,ID_B ,Password_B
	B→S : ID_A,ID_B,E_(Pub_S ) {N_B , Password_B }, E_(Password_B ) {N_B ,ID_A}
	S→A : N_A ,E_(Password_A ) {N_A ,K_AB}
	S→B : N_B ,E_(Password_B ) {N_B ,K_AB}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}


Flaws: The adversary can obtain session key K_AB by decrypting E_(Password_B ) {N_B ,K_AB}  using plaintext key Password_B
Tag: 1


Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A , Password_A }, E_(Password_A ) {N_A ,ID_B}
	S→B : ID_A,ID_B ,Pri_S
	B→S : ID_A,ID_B,E_(Pub_S ) {N_B , Password_B }, E_(Password_B ) {N_B ,ID_A}
	S→A : N_A ,E_(Password_A ) {N_A ,K_AB}
	S→B : N_B ,E_(Password_B ) {N_B ,K_AB}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}


Flaws: The adversary can obtain session key K_AB by decrypting E_(Password_B ) {N_B ,K_AB}  using plaintext key Pri_S to obtain Password_B
Tag: 1

Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A ,ID_B,N_A , Password_A }
	S→B : ID_A,ID_B
	B→S : ID_A,ID_B,E_(Pub_S ) {N_B ,ID_A,N_B , Password_B }
	S→A : N_A ,E_(Password_A ) {N_A ,K_AB,ID_B}
	S→B : N_B ,E_(Password_B ) {N_B ,K_AB}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}

Tag: 0


Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A ,ID_B,N_A , Password_A }
	S→B : ID_A,ID_B
	B→S : ID_A,ID_B,E_(Pub_S ) {N_B ,ID_A,N_B , Password_B }
	S→A : N_A ,E_(Password_A ) {N_A ,K_AB}
	S→B : N_B ,E_(Password_B ) {N_B ,K_AB}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 4 i.e. E_(Password_A ) {N_A ,K_AB}
Tag: 1



Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A ,ID_B,N_A , Password_A }
	S→B : ID_A,ID_B ,Password_A
	B→S : ID_A,ID_B,E_(Pub_S ) {N_B ,ID_A,N_B , Password_B }
	S→A : N_A ,E_(Password_A ) {N_A ,K_AB}
	S→B : N_B ,E_(Password_B ) {N_B ,K_AB}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}


Flaws: The adversary can obtain session key K_AB by decrypting E_(Password_A ) {N_A ,K_AB}  using plaintext key Password_A
Tag: 1


Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A ,ID_B,N_A , Password_A }
	S→B : ID_A,ID_B ,Pri_S
	B→S : ID_A,ID_B,E_(Pub_S ) {N_B ,ID_A,N_B , Password_B }
	S→A : N_A ,E_(Password_A ) {N_A ,K_AB,ID_B}
	S→B : N_B ,E_(Password_B ) {N_B ,K_AB}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}

Flaws: The adversary can obtain session key K_AB by decrypting E_(Password_A ) {N_A ,K_AB}  using plaintext key Pri_S to obtain Password_A
Tag: 1


Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A^',N_A ,ID_B,N_A , Password_A }
	S→B : ID_A,ID_B
	B→S : ID_A,ID_B,E_(Pub_S ) {N_a^',N_B ,ID_A,N_B , Password_B }
	S→A : N_A^' ,E_(Password_A ) {N_A ,ID_B,E_(Password_A ) {N_A ,K_AB }}
	S→B : N_a^' ,E_(Password_B ) {N_B ,E_(Password_B ) {N_B ,K_AB }}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}
 
Tag: 0


Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A^',N_A ,ID_B,N_A , Password_A }
	S→B : ID_A,ID_B
	B→S : ID_A,ID_B,E_(Pub_S ) {N_a^',N_B ,ID_A,N_B , Password_B }
	S→A : N_A^' ,E_(Password_A ) {N_A ,E_(Password_A ) {N_A ,K_AB }}
	S→B : N_a^' ,E_(Password_B ) {N_B ,E_(Password_B ) {N_B ,K_AB }}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}


Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 4 i.e. E_(Password_A ) {N_A ,E_(Password_A ) {N_A ,K_AB }}
Tag: 1


Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A^',N_A ,ID_B,N_A , Password_A }
	S→B : ID_A,ID_B ,Password_A
	B→S : ID_A,ID_B,E_(Pub_S ) {N_a^',N_B ,ID_A,N_B , Password_B }
	S→A : N_A^' ,E_(Password_A ) {N_A ,E_(Password_A ) {N_A ,K_AB },ID_B}
	S→B : N_a^' ,E_(Password_B ) {N_B ,E_(Password_B ) {N_B ,K_AB }}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}
	
	
Flaws: The adversary can obtain session key K_AB by decrypting E_(Password_A ) {N_A ,E_(Password_A ) {N_A ,K_AB },ID_B}  using plaintext key Password_A
Tag: 1


Name: A Mutual Authentication Protocol
Paper: Some Remarks on Protecting Weak Keys and Poorly-Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B,E_(Pub_S ) {N_A^',N_A ,ID_B,N_A , Password_A }
	S→B : ID_A,ID_B ,Pri_S
	B→S : ID_A,ID_B,E_(Pub_S ) {N_a^',N_B ,ID_A,N_B , Password_B }
	S→A : N_A^' ,E_(Password_A ) {N_A ,E_(Password_A ) {N_A ,K_AB },ID_B}
	S→B : N_a^' ,E_(Password_B ) {N_B ,E_(Password_B ) {N_B ,K_AB }}
	A→B : E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {hash{N_A^' },N_a^'}
	A→B : E_(K_AB ) {N_a^'}

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(Password_A ) {N_A ,E_(Password_A ) {N_A ,K_AB },ID_B}  using plaintext key Pri_S
Tag: 1


Name: SAKA PROTOCOL
Paper: 3-PARTY KEY AGREEMENT PROTOCOL SECURE AGAINST ONLINE AND DICTIONARY ATTACKS
	A→B : ID_A,Password_A ,a^x, 
	B→A : Password_A ,a^y,hash{K_AB,a^x }, 
	A→B : hash{K_AB,a^y }, 

Tag: 0

Name: SAKA PROTOCOL
Paper: 3-PARTY KEY AGREEMENT PROTOCOL SECURE AGAINST ONLINE AND DICTIONARY ATTACKS
	A→B : ID_A,Password_A ,a^x,x, 
	B→A : Password_A ,a^y,hash{K_AB,a^x }, 
	A→B : hash{K_AB,a^y }, 


Flaws: The adversary can obtain session key a^x^y using plaintext secret x 
Tag: 1


Name: SAKA PROTOCOL
Paper: 3-PARTY KEY AGREEMENT PROTOCOL SECURE AGAINST ONLINE AND DICTIONARY ATTACKS
	A→B : ID_A,Password_A ,a^x,y, 
	B→A : Password_A ,a^y,hash{K_AB,a^x }, 
	A→B : hash{K_AB,a^y }, 

Flaws: The adversary can obtain session key a^x^y using plaintext secret y 
Tag: 1



Name: STW Protocol
Paper: 3-PARTY KEY AGREEMENT PROTOCOL SECURE AGAINST ONLINE AND DICTIONARY ATTACKS
	A→B : ID_A,E_(Password_A ) {ID_B ,a^x}, 
	B→S: ID_A,E_(Password_A ) {ID_B ,a^x},E_(Password_B ) {ID_A ,a^y}, 
	

Tag: 0

Name: STW Protocol
Paper: 3-PARTY KEY AGREEMENT PROTOCOL SECURE AGAINST ONLINE AND DICTIONARY ATTACKS
	A→B : ID_A,Password_A,x,E_(Password_A ) {ID_B ,a^x}, 
	B→S: ID_A,E_(Password_A ) {ID_B ,a^x},E_(Password_B ) {ID_A ,a^y}, 
	

Flaws: The adversary can obtain session key a^x^y using plaintext secret x,Password_A
Tag: 1


Name: STW Protocol
Paper: 3-PARTY KEY AGREEMENT PROTOCOL SECURE AGAINST ONLINE AND DICTIONARY ATTACKS
	A→B : ID_A,Password_B,y,E_(Password_A ) {ID_B ,a^x}, 
	B→S: ID_A,E_(Password_A ) {ID_B ,a^x},E_(Password_B ) {ID_A ,a^y}, 
	 
Tag: 0

Name: Demonstration protocol
Paper: Secure Authentication Protocols Resistant to Guessing Attacks
	A→B : E_(K_AS ) {ID_A,ID_B,N_A,N_A^' }
	B→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_B,N_A,N_A^' },E_(K_BS ) {ID_B,ID_A,N_B,N_a^' }
	S→B : E_(K_AS ) {ID_B,N_A,K_AB ,N_A^' },E_(K_AS ) {N_B,K_AB ,N_a^' }
	B→A: E_(K_AS ) {ID_B,N_B,K_AB ,N_a^' }, E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {N_A^',N_a^'+1}
	B→A: E_(K_AB ) {N_A^'+1}

Tag: 0


Name: Demonstration protocol
Paper: Secure Authentication Protocols Resistant to Guessing Attacks
	A→B : E_(K_AS ) {ID_A,ID_B,N_A,N_A^' }
	B→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_B,N_A,N_A^' },E_(K_BS ) {ID_B,ID_A,N_B,N_a^' }
	S→B : E_(K_AS ) {N_A,K_AB ,N_A^' },E_(K_AS ) {N_B,K_AB ,N_a^' }
	B→A: E_(K_AS ) {N_B,K_AB ,N_a^' }, E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {N_A^',N_a^'+1}
	B→A: E_(K_AB ) {N_A^'+1}


Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3-4 i.e. E_(K_AS ) {N_A,K_AB ,N_A^' }
Tag: 1


Name: Demonstration protocol
Paper: Secure Authentication Protocols Resistant to Guessing Attacks
	A→B : E_(K_AS ) {ID_A,ID_B,N_A,N_A^' }
	B→S : E_(K_AS ) {ID_A,ID_B,N_A,N_A^' },E_(K_BS ) {ID_B,ID_A,N_B,N_a^' }
	S→B : K_AS,E_(K_AS ) {N_A,K_AB ,N_A^',ID_B },E_(K_AS ) {N_B,K_AB ,N_a^' }
	B→A: E_(K_AS ) {N_B,K_AB ,N_a^',ID_B }, E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {N_A^',N_a^'+1}
	B→A: E_(K_AB ) {N_A^'+1}


	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A,K_AB ,N_A^',ID_B }  using plaintext key K_AS
Tag: 1

Name: Demonstration protocol
Paper: Secure Authentication Protocols Resistant to Guessing Attacks
	A→B : E_(K_AS ) {ID_A,ID_B,N_A,N_A^' }
	B→S : E_(K_AS ) {ID_A,ID_B,N_A,N_A^' },E_(K_BS ) {ID_B,ID_A,N_B,N_a^' }
	S→B : K_BS,E_(K_AS ) {N_A,K_AB ,N_A^' ,ID_B},E_(K_BS ) {N_B,K_AB ,N_a^' } 
	B→A: E_(K_AS ) {N_B,K_AB ,N_a^',ID_B }, E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {N_A^',N_a^'+1}
	B→A: E_(K_AB ) {N_A^'+1}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {N_B,K_AB ,N_a^' }   using plaintext key K_BS
Tag: 1

Name: Proposed authentication protocol for public key systems
Paper: Secure Authentication Protocols Resistant to Guessing Attacks
	A→B : E_(Pub_S ) {ID_A,N_A,E_(Password_A ) {ID_A,ID_B,K_AS }}
	B→S: E_(Pub_S ) {ID_A,N_A,E_(Password_A ) {ID_A,ID_B,K_AS }}
	B→S: E_(Pub_S ) {ID_B,N_B,E_(Password_B ) {ID_B,ID_A,K_BS }}
	S→B : E_(K_AS ) {ID_A,ID_B,K_AB ,hash{N_A ,Password_A}},E_(K_BS ) {ID_B,ID_A,K_AB ,hash{N_B ,Password_B}}
	B→A : E_(K_AS ) {ID_A,ID_B,K_AB ,hash{N_A ,Password_A}},E_(K_AB ) {hash{K_BS}}
	A→B : E_(K_AB ) {hash{K_BS },hash{K_AS }}
	B→A : E_(K_AB ) {hash{K_AS }}

Tag: 0


Name: Proposed authentication protocol for public key systems
Paper: Secure Authentication Protocols Resistant to Guessing Attacks
	A→B : E_(Pub_S ) {ID_A,N_A,E_(Password_A ) {ID_A,ID_B,K_AS }}
	B→S: E_(Pub_S ) {ID_A,N_A,E_(Password_A ) {ID_A,ID_B,K_AS }}
	B→S: E_(Pub_S ) {ID_B,N_B,E_(Password_B ) {ID_B,ID_A,K_BS }}
	S→B : E_(K_AS ) {ID_A,K_AB ,hash{N_A ,Password_A}},E_(K_BS ) {ID_A,K_AB ,hash{N_B ,Password_B}}
	B→A : E_(K_AS ) {ID_A,K_AB ,hash{N_A ,Password_A}},E_(K_AB ) {hash{K_BS}}
	A→B : E_(K_AB ) {hash{K_BS },hash{K_AS }}
	B→A : E_(K_AB ) {hash{K_AS }}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 4-5 i.e. E_(K_AS ) {ID_A,K_AB ,hash{N_A ,Password_A}}
Tag: 1


Name: Proposed authentication protocol for public key systems
Paper: Secure Authentication Protocols Resistant to Guessing Attacks
	A→B : E_(Pub_S ) {ID_A,N_A,E_(Password_A ) {ID_A,ID_B,K_AS }}
	B→S: E_(Pub_S ) {ID_A,N_A,E_(Password_A ) {ID_A,ID_B,K_AS }}
	B→S: E_(Pub_S ) {ID_B,N_B,E_(Password_B ) {ID_B,ID_A,K_BS }}
	S→B : E_(K_AS ) {ID_A,ID_B,K_AB ,hash{N_A ,Password_A}},E_(K_BS ) {ID_B,ID_A,K_AB ,hash{N_B ,Password_B}}
	B→A : E_(K_AS ) {ID_A,ID_B,K_AB ,hash{N_A ,Password_A}},E_(K_AB ) {hash{K_BS}} 
	A→B : K_AS,E_(K_AB ) {hash{K_BS },hash{K_AS }}
	B→A : E_(K_AB ) {hash{K_AS }}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_A,ID_B,K_AB ,hash{N_A ,Password_A}}  using plaintext key K_AS
Tag: 1

Name: Proposed authentication protocol for public key systems
Paper: Secure Authentication Protocols Resistant to Guessing Attacks
	A→B : E_(Pub_S ) {ID_A,N_A,E_(Password_A ) {ID_A,ID_B,K_AS }}
	B→S: E_(Pub_S ) {ID_A,N_A,E_(Password_A ) {ID_A,ID_B,K_AS }}
	B→S: E_(Pub_S ) {ID_B,N_B,E_(Password_B ) {ID_B,ID_A,K_BS }}
	S→B : E_(K_AS ) {ID_A,ID_B,K_AB ,hash{N_A ,Password_A}},E_(K_BS ) {ID_B,ID_A,K_AB ,hash{N_B ,Password_B}}
	B→A : K_BS,E_(K_AS ) {ID_A,ID_B,K_AB ,hash{N_A ,Password_A}},E_(K_AB ) {hash{K_BS}} 
	A→B : E_(K_AB ) {hash{K_BS },hash{K_AS }}
	B→A : E_(K_AB ) {hash{K_AS }}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_B,ID_A,K_AB ,hash{N_B ,Password_B}}  using plaintext key K_AS
Tag: 1

Name: A protocol for establishing a session key in a peer- to-peer environment
Paper: Efficient Protocols Secure Against Guessing and Replay Attacks
	A→B : ID_A,ID_B
	A→S : ID_A,E_(Pub_S ) {K_AS,N_A,E_(Password_A ) {N_A}}
	B→S : ID_B,E_(Pub_S ) {K_BS,N_B,E_(Password_B ) {N_B}}
	S→A : E_(K_AS ) {K_AB ,N_A,ID_B }
	S→B : E_(K_BS ) {K_AB ,N_B }
	A→B : N_A^'
	B→A : E_(K_AB ) {N_A^',N_a^' }
	A→B : E_(K_AB ) {N_a^' }

Tag: 0


Name: A protocol for establishing a session key in a peer- to-peer environment
Paper: Efficient Protocols Secure Against Guessing and Replay Attacks
	A→B : ID_A,ID_B
	A→S : ID_A,E_(Pub_S ) {K_AS,N_A,E_(Password_A ) {N_A}}
	B→S : ID_B,E_(Pub_S ) {K_BS,N_B,E_(Password_B ) {N_B}}
	S→A : E_(K_AS ) {K_AB ,N_A }
	S→B : E_(K_BS ) {K_AB ,N_B }
	A→B : N_A^'
	B→A : E_(K_AB ) {N_A^',N_a^' }
	A→B : E_(K_AB ) {N_a^' }

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 4 i.e. E_(K_AS ) {K_AB ,N_A }
Tag: 1

Name: A protocol for establishing a session key in a peer- to-peer environment
Paper: Efficient Protocols Secure Against Guessing and Replay Attacks
	A→B : ID_A,ID_B
	A→S : ID_A,E_(Pub_S ) {K_AS,N_A,E_(Password_A ) {N_A}}
	B→S : ID_B,E_(Pub_S ) {K_BS,N_B,E_(Password_B ) {N_B}}
	S→A : K_AS,E_(K_AS ) {K_AB ,N_A,ID_B }
	S→B : E_(K_BS ) {K_AB ,N_B }
	A→B : N_A^'
	B→A : E_(K_AB ) {N_A^',N_a^' }
	A→B : E_(K_AB ) {N_a^' }


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {K_AB ,N_A,ID_B }  using plaintext key K_AS
Tag: 1

Name: A protocol for establishing a session key in a peer- to-peer environment
Paper: Efficient Protocols Secure Against Guessing and Replay Attacks
	A→B : ID_A,ID_B
	A→S : ID_A,E_(Pub_S ) {K_AS,N_A,E_(Password_A ) {N_A}}
	B→S : ID_B,E_(Pub_S ) {K_BS,N_B,E_(Password_B ) {N_B}}
	S→A : K_BS,E_(K_AS ) {K_AB ,N_A, ID_B}
	S→B : E_(K_BS ) {K_AB ,N_B }
	A→B : N_A^'
	B→A : E_(K_AB ) {N_A^',N_a^' }
	A→B : E_(K_AB ) {N_a^' }

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {K_AB ,N_B }  using plaintext key K_BS
Tag: 1

Name: An optimal protocol for establishing a session key in a peer- to-peer environment
Paper: Efficient Protocols Secure Against Guessing and Replay Attacks
	A→B : ID_A,E_(Pub_S ) {K_AS,N_A,E_(Password_A ) {N_A }},N_A^'
	B→S : ID_A,ID_B,E_(Pub_S ) {K_AS,N_A,E_(Password_A ) {N_A }}
	B→S : E_(Pub_S ) {K_BS,N_B,E_(Password_B ) {N_B}},N_a^'
	S→B : E_(K_BS ) {K_AB ,N_B }
	S→A : E_(K_AS ) {K_AB ,N_A ,ID_B},N_a^'
	B→A : E_(K_AB ) {N_A^' }
	A→B : E_(K_AB ) {N_a^' }

Tag: 0


Name: An optimal protocol for establishing a session key in a peer- to-peer environment
Paper: Efficient Protocols Secure Against Guessing and Replay Attacks
	A→B : ID_A,E_(Pub_S ) {K_AS,N_A,E_(Password_A ) {N_A }},N_A^'
	B→S : ID_A,ID_B,E_(Pub_S ) {K_AS,N_A,E_(Password_A ) {N_A }}
	B→S : E_(Pub_S ) {K_BS,N_B,E_(Password_B ) {N_B}},N_a^'
	S→B : E_(K_BS ) {K_AB ,N_B }
	S→A : E_(K_AS ) {K_AB ,N_A },N_a^'
	B→A : E_(K_AB ) {N_A^' }
	A→B : E_(K_AB ) {N_a^' }

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 5 i.e. E_(K_AS ) {K_AB ,N_A }
Tag: 1



Name: An optimal protocol for establishing a session key in a peer- to-peer environment
Paper: Efficient Protocols Secure Against Guessing and Replay Attacks
	A→B : ID_A,E_(Pub_S ) {K_AS,N_A,E_(Password_A ) {N_A }},N_A^'
	B→S : ID_A,ID_B,E_(Pub_S ) {K_AS,N_A,E_(Password_A ) {N_A }},
    B→S : E_(Pub_S ) {K_BS,N_B,E_(Password_B ) {N_B}},N_a^'
	S→B : E_(K_BS ) {K_AB ,N_B }
	S→A : E_(K_AS ) {K_AB ,N_A,ID_B },N_a^'
	B→A : K_BS,E_(K_AB ) {N_A^' }
	A→B : E_(K_AB ) {N_a^' }

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {K_AB ,N_B }  using plaintext key K_BS
Tag: 1

Name: An optimal protocol for establishing a session key in a peer- to-peer environment
Paper: Efficient Protocols Secure Against Guessing and Replay Attacks
	A→B : ID_A,E_(Pub_S ) {K_AS,N_A,E_(Password_A ) {N_A }},N_A^'
	B→S : ID_A,ID_B,E_(Pub_S ) {K_AS,N_A,E_(Password_A ) {N_A }}
	B→S : E_(Pub_S ) {K_BS,N_B,E_(Password_B ) {N_B}},N_a^'
	S→B : E_(K_BS ) {K_AB ,N_B }
	S→A : E_(K_AS ) {K_AB ,N_A,ID_B },N_a^'
	B→A : K_AS,E_(K_AB ) {N_A^' }
	A→B : E_(K_AB ) {N_a^' }

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {K_AB ,N_A }  using plaintext key K_AS
Tag: 1


Name: Key distribution protocol
Paper: Design of improved password authentication and update scheme based on elliptic curve cryptography
	A→S : ID_A,E_(Pub_S ) {a^x,Password_A}, 
	S→A : a^x,a^y,hash{a^y}, 
	A→S : ID_A,hash{a^x,a^y}, 

Tag: 0

Name: Key distribution protocol
Paper: Design of improved password authentication and update scheme based on elliptic curve cryptography
	A→S : ID_A,E_(Pub_S ) {a^x,Password_A}, 
	S→A : a^x,a^y,x,hash{a^y}, 
	A→S : ID_A,hash{a^x,a^y}, 

Flaws: The adversary can obtain session key a^x^y using plaintext secret x 
Tag: 1



Name: Mutual RFID Authentication Protocol
Paper: A Novel Mutual RFID Authentication Protocol with Low Complexity and High Security
	A→B : ID_A,ID_B, 
	B→A : ID_B,ID_A,E_(K_AB ) {ID_A,Cert_B,N_B}, 
	A→B : ID_A,ID_B,E_(K_AB ) {ID_B,K_AB,N_B,N_A}, 
	B→A : ID_B,ID_A,E_(K_AB ) {ID_A,K_AB^'^',N_A}, 

Tag: 0


Name: Zhang & Qi’s RFID authentication scheme
Paper: A Provably Secure RFID Authentication Protocol Based on Elliptic Curve for Healthcare Environments
	A→B : ID_A,ID_B,N_A,a^x, 
	B→A : ID_B,ID_A,a^y,E_(K_AB ) {N_B },hash{N_B,K_AB,N_A,a^y}, 
	A→B : ID_A,ID_B,hash{K_AB,N_B+1}, 

Tag: 0

Name: Zhang & Qi’s RFID authentication scheme
Paper: A Provably Secure RFID Authentication Protocol Based on Elliptic Curve for Healthcare Environments
	A→B : ID_A,ID_B,N_A,a^x,x, 
	B→A : ID_B,ID_A,a^y,E_(K_AB ) {N_B },hash{N_B,K_AB,N_A,a^y}, 
	A→B : ID_A,ID_B,hash{K_AB,N_B+1}, 

Flaws: The adversary can obtain session key a^x^y using plaintext secret x 
Tag: 1


Name: Improved Zhang & Qi’s RFID authentication scheme
Paper: A Provably Secure RFID Authentication Protocol Based on Elliptic Curve for Healthcare Environments
	A→B : ID_A,ID_B,N_A,a^x, 
	B→A : ID_B,ID_A,a^y,E_(K_AB ) {N_B },hash{K_AB,N_A,a^y}, 
	A→B : ID_A,ID_B,hash{K_AB,N_B,N_A,a^y,E_(K_AB ) {N_B }}, 

Tag: 0

Name: Improved Zhang & Qi’s RFID authentication scheme
Paper: A Provably Secure RFID Authentication Protocol Based on Elliptic Curve for Healthcare Environments
	A→B : ID_A,ID_B,N_A,a^x,x, 
	B→A : ID_B,ID_A,a^y,E_(K_AB ) {N_B },hash{K_AB,N_A,a^y}, 
	A→B : ID_A,ID_B,hash{K_AB,N_B,N_A,a^y,E_(K_AB ) {N_B }}, 

Flaws: The adversary can obtain session key a^x^y using plaintext secret x 
Tag: 1


Name: Mutual authentication scheme
Paper: An Advanced Encryption Standard Powered Mutual Authentication Protocol Based on Elliptic Curve Cryptography for RFID, Proven on WISP
	A→B : a^x,Sig_(Pri_A ) {ID_A,ID_B,hash{a^x}}, 
	B→A : a^y,Sig_(Pri_B ) {ID_B,ID_A,hash{a^y }},E_(K_AB ) {ID_B,a^x,a^y }, 

Tag: 0

Name: Mutual authentication scheme
Paper: An Advanced Encryption Standard Powered Mutual Authentication Protocol Based on Elliptic Curve Cryptography for RFID, Proven on WISP
	A→B : a^x,Sig_(Pri_A ) {ID_A,ID_B,hash{a^x}}, 
	B→A : a^y,x,Sig_(Pri_B ) {ID_B,ID_A,hash{a^y }},E_(K_AB ) {ID_B,a^x,a^y }, 


Flaws: The adversary can obtain session key a^x^y using plaintext secret x 
Tag: 1


Name: Improved Mutual authentication scheme
Paper: An Advanced Encryption Standard Powered Mutual Authentication Protocol Based on Elliptic Curve Cryptography for RFID, Proven on WISP
	A→B : a^x,Sig_(Pri_A ) {ID_A,ID_B,hash{a^x}}, 
	B→A : a^y,Sig_(Pri_B ) {ID_B,ID_A,hash{a^y }},E_(K_AB ) {ID_B,a^x,a^y }, 
	A→B : E_(K_AB ) {ID_A,a^x,a^y } , 

Tag: 0

Name: Improved Mutual authentication scheme
Paper: An Advanced Encryption Standard Powered Mutual Authentication Protocol Based on Elliptic Curve Cryptography for RFID, Proven on WISP
	A→B : a^x,Sig_(Pri_A ) {ID_A,ID_B,hash{a^x}}, 
	B→A : a^y,Sig_(Pri_B ) {ID_B,ID_A,hash{a^y }},E_(K_AB ) {ID_B,a^x,a^y }, 
	A→B : E_(K_AB ) {ID_A,a^x,a^y } , 

Tag: 0

Name: Improved Mutual authentication scheme
Paper: An Advanced Encryption Standard Powered Mutual Authentication Protocol Based on Elliptic Curve Cryptography for RFID, Proven on WISP
	A→B : a^x,Sig_(Pri_A ) {ID_A,ID_B,hash{a^x}}, 
	B→A : a^y,Sig_(Pri_B ) {ID_B,ID_A,hash{a^y }},E_(K_AB ) {ID_B,a^x,a^y }, 
	A→B : x,E_(K_AB ) {ID_A,a^x,a^y } 

Flaws: The adversary can obtain session key a^x^y using plaintext secret x 
Tag: 1


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→S : ID_A,ID_B
	S→A : E_(K_AS ) {K_AB,ID_B,E_(K_BS ) {K_AB,ID_A}}
	A→B : E_(K_BS ) {K_AB,ID_A},E_(K_AB ) {ID_A,T_A}
	B→A : E_(K_AB ) { T_A+1}
	
Tag: 0


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→S : ID_A,ID_B
	S→A : E_(K_AS ) {K_AB,E_(K_BS ) {K_AB,ID_A}}
	A→B : E_(K_BS ) {K_AB,ID_A},E_(K_AB ) {ID_A,T_A}
	B→A : E_(K_AB ) { T_A+1}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 2 i.e. E_(K_AS ) {K_AB,E_(K_BS ) {K_AB,ID_A}}
Tag: 1



Name: Expanded Protocol
Paper: A Logic of Authentication
	A→S : ID_A,ID_B
	S→A : K_AS,E_(K_AS ) {K_AB,ID_B,E_(K_BS ) {K_AB,ID_A}}  
	A→B : E_(K_BS ) {K_AB,ID_A},E_(K_AB ) {ID_A,T_A}
	B→A : E_(K_AB ) { T_A+1}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {K_AB,ID_B,E_(K_BS ) {K_AB,ID_A}}   using plaintext key K_AS
Tag: 1

Name: Expanded Protocol
Paper: A Logic of Authentication
	A→S : ID_A,ID_B
	S→A : E_(K_AS ) {K_AB,ID_B,E_(K_BS ) {K_AB,ID_A}}  
	A→B : K_BS,E_(K_BS ) {K_AB,ID_A},E_(K_AB ) {ID_A,T_A}
	B→A : E_(K_AB ) { T_A+1}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {K_AB,ID_A}  using plaintext key K_BS
Tag: 1


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,N_A,ID_B
	B→S : ID_A,N_A,ID_B,N_B
	S→B : E_(K_BS ) {K_AB,ID_A,E_(K_AS ) {ID_A,ID_B,K_AB}}
	B→A : E_(K_AS ) {ID_A,ID_B,K_AB},E_(K_AB ) {N_a^',ID_B}
	A→B : E_(K_AB ) {N_a^',ID_A}

Tag: 0



Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,N_A,ID_B
	B→S : ID_A,N_A,ID_B,N_B
	S→B : E_(K_BS ) {K_AB,ID_A,E_(K_AS ) {ID_A,ID_B,K_AB}}
	B→A : E_(K_AS ) {ID_A,K_AB},E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {N_a^',ID_A}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3-4 i.e. E_(K_AS ) {ID_A,K_AB},E_(K_AB ) {N_a^'}
Tag: 1

Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,N_A,ID_B
	B→S : ID_A,N_A,ID_B,N_B
	S→B : E_(K_BS ) {K_AB,ID_A,E_(K_AS ) {ID_A,ID_B,K_AB}}
	B→A : K_AS,E_(K_AS ) {ID_A,ID_B,K_AB},E_(K_AB ) {N_a^',ID_B} 
	A→B : E_(K_AB ) {N_a^',ID_A}
	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_A,ID_B,K_AB}  using plaintext key K_AS
Tag: 1



Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,N_A,ID_B
	B→S : ID_A,N_A,ID_B,N_B
	S→B : E_(K_BS ) {K_AB,ID_A,E_(K_AS ) {ID_A,ID_B,K_AB}}
	B→A : K_BS,E_(K_AS ) {ID_A,ID_B,K_AB},E_(K_AB ) {N_a^',ID_B} 
	A→B : E_(K_AB ) {N_a^',ID_A}

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {K_AB,ID_A,E_(K_AS ) {ID_A,ID_B,K_AB}}  using plaintext key K_BS
Tag: 1

Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A
	B→A : E_(K_BS ) {ID_A,N_B}
	A→S : ID_A,ID_B,N_A, E_(K_BS ) {ID_A,N_B}
	S→A : E_(K_AS ) {N_A,K_AB,ID_B,E_(K_BS ) {K_AB,ID_A}}
	A→B : E_(K_BS ) {K_AB,ID_A}
	B→A : E_(K_AB ) {N_B}
	A→B : E_(K_AB ) {N_B+1}

Tag: 0


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A
	B→A : E_(K_BS ) {ID_A,N_B}
	A→S : ID_A,ID_B,N_A, E_(K_BS ) {ID_A,N_B}
	S→A : E_(K_AS ) {N_A,K_AB,E_(K_BS ) {K_AB,ID_A}}
	A→B : E_(K_BS ) {K_AB,ID_A}
	B→A : E_(K_AB ) {N_B}
	A→B : E_(K_AB ) {N_B+1}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 4 i.e. E_(K_AS ) {N_A,K_AB,E_(K_BS ) {K_AB,ID_A}}
Tag: 1


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A
	B→A : E_(K_BS ) {ID_A,N_B}
	A→S : ID_A,ID_B,N_A, E_(K_BS ) {ID_A,N_B}
	S→A : E_(K_AS ) {N_A,K_AB,ID_B,E_(K_BS ) {K_AB,ID_A}}
	A→B : K_AS,E_(K_BS ) {K_AB,ID_A} 
	B→A : E_(K_AB ) {N_B}
	A→B : E_(K_AB ) {N_B+1}


	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A,K_AB,ID_B,E_(K_BS ) {K_AB,ID_A}}  using plaintext key K_AS
Tag: 1


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A
	B→A : E_(K_BS ) {ID_A,N_B}
	A→S : ID_A,ID_B,N_A, E_(K_BS ) {ID_A,N_B}
	S→A : E_(K_AS ) {N_A,K_AB,ID_B,E_(K_BS ) {K_AB,ID_A}}
	A→B : K_BS,E_(K_BS ) {K_AB,ID_A} 
	B→A : E_(K_AB ) {N_B}
	A→B : E_(K_AB ) {N_B+1}
	
Flaws: The adversary can obtain session key K_AB by decrypting K_BS,E_(K_BS ) {K_AB,ID_A}   using plaintext key K_BS
Tag: 1


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→S : ID_A,ID_B
	S→A : E_(K_AS ) {ID_B,K_AB,E_(K_BS ) {ID_A,K_AB}}
	A→B : E_(K_BS ) {ID_A,K_AB}

Tag: 0


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→S : ID_A,ID_B
	S→A : E_(K_AS ) {K_AB,E_(K_BS ) {ID_A,K_AB}}
	A→B : E_(K_BS ) {ID_A,K_AB}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 2 i.e. E_(K_AS ) {K_AB,E_(K_BS ) {ID_A,K_AB}}
Tag: 1


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→S : ID_A,ID_B
	S→A : K_AS,E_(K_AS ) {ID_B,K_AB,E_(K_BS ) {ID_A,K_AB}} 
	A→B : E_(K_BS ) {ID_A,K_AB}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_B,K_AB,E_(K_BS ) {ID_A,K_AB}}   using plaintext key K_AS
Tag: 1

Name: Expanded Protocol
Paper: A Logic of Authentication
	A→S : ID_A,ID_B
	S→A : E_(K_AS ) {ID_B,K_AB,E_(K_BS ) {ID_A,K_AB}} , K_BS
	A→B : E_(K_BS ) {ID_A,K_AB}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,K_AB}   using plaintext key K_BS
Tag: 1

Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,N_A
	B→S : ID_B,N_B,E_(K_BS ) {ID_A,N_A}
	S→A : N_B,E_(K_AS ) {ID_B,K_AB}, E_(K_BS ) {ID_A,K_AB,N_B}
	A→B : E_(K_BS ) {ID_A,K_AB,N_B},E_(K_AB ) {N_B}

Tag: 0


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,N_A
	B→S : ID_B,N_B,E_(K_BS ) {ID_A,N_A}
	S→A : N_B,E_(K_AS ) {K_AB}, E_(K_BS ) {ID_A,K_AB,N_B}
	A→B : E_(K_BS ) {ID_A,K_AB,N_B},E_(K_AB ) {N_B}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {K_AB}
Tag: 1


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,N_A
	B→S : ID_B,N_B,E_(K_BS ) {ID_A,N_A}
	S→A : N_B,K_AS,E_(K_AS ) {ID_B,K_AB}, E_(K_BS ) {ID_A,K_AB,N_B} 
	A→B : E_(K_BS ) {ID_A,K_AB,N_B},E_(K_AB ) {N_B}

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_B,K_AB}  using plaintext key K_AS
Tag: 1

Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,N_A
	B→S : ID_B,N_B,E_(K_BS ) {ID_A,N_A}
	S→A : N_B,K_BS, E_(K_AS ) {ID_B,K_AB}, E_(K_BS ) {ID_A,K_AB,N_B} 
	A→B : E_(K_BS ) {ID_A,K_AB,N_B},E_(K_AB ) {N_B}

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,K_AB,N_B}   using plaintext key K_BS
Tag: 1

Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,N_A
	B→A : ID_B,N_B
	A→B : E_(K_AS ) {ID_A,ID_B,N_A,N_B}
	B→S : E_(K_AS ) {ID_A,ID_B,N_A,N_B},E_(K_BS ) {ID_A,ID_B,N_A,N_B}
	S→B : E_(K_AS ) {ID_B,K_AB },E_(K_BS ) {ID_A,K_AB }
	B→A : E_(K_AS ) {ID_B,K_AB }, E_(K_AB ) {N_A,N_B }
	A→B : E_(K_AB ) {N_B }

Tag: 0


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,N_A
	B→A : ID_B,N_B
	A→B : E_(K_AS ) {ID_A,ID_B,N_A,N_B}
	B→S : E_(K_AS ) {ID_A,ID_B,N_A,N_B},E_(K_BS ) {ID_A,ID_B,N_A,N_B}
	S→B : E_(K_AS ) {K_AB },E_(K_BS ) {ID_A,K_AB }
	B→A : E_(K_AS ) {K_AB }, E_(K_AB ) {N_A,N_B }
	A→B : E_(K_AB ) {N_B }

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 5-6 i.e. E_(K_AS ) {K_AB }
Tag: 1



Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,N_A
	B→A : ID_B,N_B
	A→B : E_(K_AS ) {ID_A,ID_B,N_A,N_B}
	B→S : E_(K_AS ) {ID_A,ID_B,N_A,N_B},E_(K_BS ) {ID_A,ID_B,N_A,N_B}
	S→B : E_(K_AS ) {ID_B,K_AB },E_(K_BS ) {ID_A,K_AB }
	B→A : K_AS,E_(K_AS ) {ID_B,K_AB }, E_(K_AB ) {N_A,N_B }
	A→B : E_(K_AB ) {N_B }


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_B,K_AB },  using plaintext key K_AS
Tag: 1


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,N_A
	B→A : ID_B,N_B
	A→B : E_(K_AS ) {ID_A,ID_B,N_A,N_B}
	B→S : E_(K_AS ) {ID_A,ID_B,N_A,N_B},E_(K_BS ) {ID_A,ID_B,N_A,N_B}
	S→B : E_(K_AS ) {ID_B,K_AB },E_(K_BS ) {ID_A,K_AB }
	B→A : K_BS,E_(K_AS ) {ID_B,K_AB }, E_(K_AB ) {N_A,N_B }
	A→B : E_(K_AB ) {N_B }


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,K_AB }  using plaintext key K_BS
Tag: 1



Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,ID_B,N_M,E_(K_AS ) {N_M,ID_A,ID_B}
	B→S : ID_A,ID_B,N_M,E_(K_AS ) {N_M,ID_A,ID_B},E_(K_BS ) {N_M,ID_A,ID_B}
	S→B : N_M,E_(K_AS ) {ID_B,K_AB},E_(K_BS ) {K_AB}
	B→A : N_M,E_(K_AS ) {ID_B,K_AB}

Tag: 0


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,ID_B,N_M,E_(K_AS ) {N_M,ID_A,ID_B}
	B→S : ID_A,ID_B,N_M,E_(K_AS ) {N_M,ID_A,ID_B},E_(K_BS ) {N_M,ID_A,ID_B}
	S→B : N_M,E_(K_AS ) {K_AB},E_(K_BS ) {K_AB}
	B→A : N_M,E_(K_AS ) {K_AB}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3-4 i.e. E_(K_AS ) {N_A,N_B,K_AB }
Tag: 1





Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,ID_B,N_M,E_(K_AS ) {N_M,ID_A,ID_B}
	B→S : ID_A,ID_B,N_M,E_(K_AS ) {N_M,ID_A,ID_B},E_(K_BS ) {N_M,ID_A,ID_B}
	S→B : N_M,E_(K_AS ) {K_AB},E_(K_BS ) {K_AB}
	B→A : N_M,K_AS,E_(K_AS ) {K_AB}

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {K_AB}  using plaintext key K_AS
Tag: 1


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,ID_B,N_M,E_(K_AS ) {N_M,ID_A,ID_B}
	B→S : ID_A,ID_B,N_M,E_(K_AS ) {N_M,ID_A,ID_B},E_(K_BS ) {N_M,ID_A,ID_B}
	S→B : N_M,E_(K_AS ) {K_AB},E_(K_BS ) {K_AB}
	B→A : N_M,K_BS,E_(K_AS ) {K_AB}

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {K_AB}  using plaintext key K_BS
Tag: 1

Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,ID_B,E_(K_AS ) {N_A,ID_B}
	B→S : E_(K_AS ) {N_A,ID_B},E_(K_BS ) {N_B,ID_A}
	S→B : E_(K_AS ) {ID_B,K_AB},E_(K_BS ) {ID_A,K_AB}
	B→A : E_(K_AS ) {ID_B,K_AB}

Tag: 0

Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,ID_B,E_(K_AS ) {N_A,ID_B}
	B→S : E_(K_AS ) {N_A,ID_B},E_(K_BS ) {N_B,ID_A}
	S→B : E_(K_AS ) {K_AB},E_(K_BS ) {ID_A,K_AB}
	B→A : E_(K_AS ) {K_AB}


Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3-4 i.e. E_(K_AS ) {K_AB}
Tag: 1




Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,ID_B,E_(K_AS ) {N_A,ID_B}
	B→S : E_(K_AS ) {N_A,ID_B},E_(K_BS ) {N_B,ID_A}
	S→B : K_AS,E_(K_AS ) {ID_B,K_AB},E_(K_BS ) {ID_A,K_AB}
	B→A : E_(K_AS ) {ID_B,K_AB}

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_B,K_AB}  using plaintext key K_AS
Tag: 1


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,ID_B,E_(K_AS ) {N_A,ID_B}
	B→S : E_(K_AS ) {N_A,ID_B},E_(K_BS ) {N_B,ID_A}
	S→B : K_BS,E_(K_AS ) {ID_B,K_AB},E_(K_BS ) {ID_A,K_AB}
	B→A : E_(K_AS ) {ID_B,K_AB}

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,K_AB}  using plaintext key K_BS
Tag: 1


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,N_A
	B→S : ID_A,ID_B,N_A,N_B
	S→A : E_(K_AS ) {K_AB}, hash{K_AS,ID_A,ID_B,E_(K_AS ) {K_AB}}
	S→B : E_(K_BS ) {K_AB}, hash{K_BS,ID_A,ID_B,E_(K_BS ) {K_AB}}

Tag: 0



Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,N_A
	B→S : ID_A,ID_B,N_A,N_B
	S→A : E_(K_AS ) {K_AB}, hash{K_AS,ID_A,E_(K_AS ) {K_AB}}
	S→B : E_(K_BS ) {K_AB}, hash{K_BS,ID_A,ID_B,E_(K_BS ) {K_AB}}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {K_AB}, hash{K_AS,ID_A,E_(K_AS ) {K_AB}}
Tag: 1


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,N_A
	B→S : ID_A,ID_B,N_A,N_B , K_AS
	S→A : E_(K_AS ) {K_AB}, hash{K_AS,ID_A,ID_B,E_(K_AS ) {K_AB}}
	S→B : E_(K_BS ) {K_AB}, hash{K_BS,ID_A,ID_B,E_(K_BS ) {K_AB}}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {K_AB}  using plaintext key K_AS
Tag: 1

Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,N_A
	B→S : ID_A,ID_B,N_A,N_B , K_BS
	S→A : E_(K_AS ) {K_AB}, hash{K_AS,ID_A,ID_B,E_(K_AS ) {K_AB}}
	S→B : E_(K_BS ) {K_AB}, hash{K_BS,ID_A,ID_B,E_(K_BS ) {K_AB}}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {K_AB}  using plaintext key K_BS
Tag: 1



Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : Sig_(Pri_A ) {E_(Pub_B ) {ID_A,ID_B,K_AB},ID_B}
	B→A : Sig_(Pri_B ) {E_(Pub_A ) {ID_B,ID_A,K_AB},ID_A}
	

Tag: 0


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : Pri_A,Sig_(Pri_A ) {E_(Pub_B ) {ID_A,ID_B,K_AB},ID_B} 
	B→A : Sig_(Pri_B ) {E_(Pub_A ) {ID_B,ID_A,K_AB},ID_A}


Flaws: The adversary can obtain session key K_AB by decrypting Sig_(Pri_B ) {E_(Pub_A ) {ID_B,ID_A,K_AB},ID_A}  using plaintext key Pri_A
Tag: 1

Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : Pri_B,Sig_(Pri_A ) {E_(Pub_B ) {ID_A,ID_B,K_AB},ID_B} 
	B→A : Sig_(Pri_B ) {E_(Pub_A ) {ID_B,ID_A,K_AB},ID_A}


Flaws: The adversary can obtain session key K_AB by decrypting Sig_(Pri_A ) {E_(Pub_B ) {ID_A,ID_B,K_AB},ID_B}   using plaintext key Pri_B
Tag: 1


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,N_A
	B→S : ID_A,N_A,ID_B,N_B
	S→B : E_(K_BS ) {K_AB,ID_A}, E_(K_AS ) {ID_B,K_AB}
	B→A : E_(K_AS ) {ID_B,K_AB },E_(K_AB ) {N_A },N_a^'
	A→B : E_(K_AB ) {N_a^' }

Tag: 0


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,N_A
	B→S : ID_A,N_A,ID_B,N_B
	S→B : E_(K_BS ) {K_AB}, E_(K_AS ) {K_AB}
	B→A : E_(K_AS ) {K_AB },E_(K_AB ) {N_A },N_a^'
	A→B : E_(K_AB ) {N_a^' }

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 4 i.e. E_(K_AS ) {K_AB }
Tag: 1



Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,N_A
	B→S : ID_A,N_A,ID_B,N_B , K_BS
	S→B : E_(K_BS ) {K_AB}, E_(K_AS ) {ID_B,K_AB}
	B→A : E_(K_AS ) {ID_B,K_AB },E_(K_AB ) {N_A },N_a^'
	A→B : E_(K_AB ) {N_a^' }

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {K_AB}  using plaintext key K_BS
Tag: 1


Name: Expanded Protocol
Paper: A Logic of Authentication
	A→B : ID_A,N_A
	B→S : ID_A,N_A,ID_B,N_B , K_AS
	S→B : E_(K_BS ) {K_AB}, E_(K_AS ) {ID_B,K_AB}
	B→A : E_(K_AS ) {ID_B,K_AB },E_(K_AB ) {N_A },N_a^'
	A→B : E_(K_AB ) {N_a^' }

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_B,K_AB}  using plaintext key K_AS
Tag: 1

Name: TB+AH+SO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→S : ID_A,ID_B
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S},E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S}
	A→B : E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S}

Tag: 0


Name: TB+AH+SO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→S : ID_A,ID_B
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,T_S},E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S}
	A→B : E_(K_BS ) {ID_S ,ID_A,K_AB,T_S}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 2-3 i.e. E_(K_BS ) {ID_S ,ID_A,K_AB,T_S}
Tag: 1


Name: TB+AH+SO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→S : ID_A,ID_B,K_BS
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S},E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S}
	A→B : E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S}  using plaintext key K_BS
Tag: 1

Name: TB+AH+SO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→S : ID_A,ID_B,K_AS
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S},E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S}
	A→B : E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S}  using plaintext key K_AS
Tag: 1

Name: TB+AH+SO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→S : ID_B,ID_A
	S→A : E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S},E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S}
	B→A : E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S},E_(K_AB ) {ID_B,ID_A,T_B}
	A→B : E_(K_AB ) {ID_B,ID_A,T_A}

Tag: 0

Name: TB+AH+SO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→S : ID_B,ID_A
	S→A : E_(K_BS ) {ID_S ,ID_A,K_AB,T_S},E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,T_S}
	B→A : E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S},E_(K_AB ) {ID_B,ID_A,T_B}
	A→B : E_(K_AB ) {ID_B,ID_A,T_A}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 2 i.e. E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,T_S}
Tag: 1




Name: TB+AH+SO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→S : ID_B,ID_A,K_AS
	S→A : E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S},E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S}
	B→A : E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S},E_(K_AB ) {ID_B,ID_A,T_B}
	A→B : E_(K_AB ) {ID_B,ID_A,T_A}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S}  using plaintext key K_AS
Tag: 1

Name: TB+AH+SO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→S : ID_B,ID_A,K_BS
	S→A : E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S},E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S}
	B→A : E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S},E_(K_AB ) {ID_B,ID_A,T_B}
	A→B : E_(K_AB ) {ID_B,ID_A,T_A}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S}  using plaintext key K_BS
Tag: 1



Name: TB+AH+SO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→S : ID_A,ID_B
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B}
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B}
	A→B : E_(K_AB ) {ID_A,ID_B,T_A}
	B→A : E_(K_AB ) {ID_B,ID_A,T_B}

Tag: 0



Name: TB+AH+SO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→S : ID_A,ID_B
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB}
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B}
	A→B : E_(K_AB ) {ID_A,T_A}
	B→A : E_(K_AB ) {ID_A,T_B}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 2-4-5 i.e. E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB}
Tag: 1

Name: TB+AH+SO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→S : ID_A,ID_B
	S→A : K_AS,E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B}
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B}
	A→B : E_(K_AB ) {ID_A,ID_B,T_A}
	B→A : E_(K_AB ) {ID_B,ID_A,T_B}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B}  using plaintext key K_AS
Tag: 1

Name: TB+AH+SO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→S : ID_A,ID_B
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B}
	S→B : K_BS,E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B}
	A→B : E_(K_AB ) {ID_A,ID_B,T_A}
	B→A : E_(K_AB ) {ID_B,ID_A,T_B}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B}  using plaintext key K_BS
Tag: 1

Name: TB+AH+SO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→S : ID_A,ID_B
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S}
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S}

Tag: 0


Name: TB+AH+SO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→S : ID_A,ID_B
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,T_S}
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3-4 i.e. E_(K_AS ) {N_A,N_B,K_AB }
Tag: 1

Name: TB+AH+SO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→S : ID_A,ID_B
	S→A : K_AS,E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S}
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S}  using plaintext key K_AS
Tag: 1

Name: TB+AH+SO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→S : ID_A,ID_B
	S→A : K_BS,E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S}
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S}  using plaintext key K_BS
Tag: 1


Name: TB+AH+SO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→S : ID_B,ID_A
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S}
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S}
	B→A : E_(K_AB ) {ID_B,ID_A,T_B}
	A→B : E_(K_AB ) {ID_A,ID_B,T_A}
	

Tag: 0



Name: TB+AH+SO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→S : ID_B,ID_A
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S}
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S}
	B→A : E_(K_AB ) {ID_B,ID_A,T_B}
	A→B : E_(K_AB ) {ID_A,ID_B,T_A}
	

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3-4 i.e. E_(K_AS ) {N_A,N_B,K_AB }
Tag: 1

Name: TB+AH+SO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→S : ID_B,ID_A
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S}
	S→A : K_AS,E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S}
	B→A : E_(K_AB ) {ID_B,ID_A,T_B}
	A→B : E_(K_AB ) {ID_A,ID_B,T_A}

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S}  using plaintext key K_AS
Tag: 1


Name: TB+AH+SO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→S : ID_B,ID_A
	S→B : K_BS,E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S}
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_A,K_AB,ID_B,T_S}
	B→A : E_(K_AB ) {ID_B,ID_A,T_B}
	A→B : E_(K_AB ) {ID_A,ID_B,T_A}

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_S ,ID_B,ID_A,K_AB,ID_B,T_S} using plaintext key K_BS
Tag: 1

Name: TB+AH+CC
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→S : ID_A,ID_B, E_(K_BS ) {ID_B ,ID_S,ID_B,a^y,ID_A,T_B},
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_B,a^y,ID_A,T_S },
	A→S : E_(K_AS ) {ID_A ,ID_S,ID_A,a^x,ID_B,T_A},E_(K_AB ) {ID_A,ID_B,T_A},
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_A,a^x,ID_B,T_S},E_(K_AB ) {ID_A,ID_B,T_A },
	B→A : E_(K_AB ) {ID_B,ID_A,T_B },

Tag: 0


Name: TB+AH+CC
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→S : ID_A,ID_B, E_(K_BS ) {ID_B ,ID_S,ID_B,a^y,ID_A,T_B},
	S→A : K_AS,E_(K_AS ) {ID_S ,ID_A,ID_B,a^y,ID_A,T_S } 
	A→S : E_(K_AS ) {ID_A ,ID_S,ID_A,a^x,ID_B,T_A},E_(K_AB ) {ID_A,ID_B,T_A},
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_A,a^x,ID_B,T_S},E_(K_AB ) {ID_A,ID_B,T_A },
	B→A : E_(K_AB ) {ID_B,ID_A,T_B },

Tag: 0

Name: TB+AH+CC
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→S : ID_A,ID_B, E_(K_BS ) {ID_B ,ID_S,ID_B,a^y,ID_A,T_B},
	S→A : K_BS,E_(K_AS ) {ID_S ,ID_A,ID_B,a^y,ID_A,T_S }
	A→S : E_(K_AS ) {ID_A ,ID_S,ID_A,a^x,ID_B,T_A},E_(K_AB ) {ID_A,ID_B,T_A},
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_A,a^x,ID_B,T_S},E_(K_AB ) {ID_A,ID_B,T_A },
	B→A : E_(K_AB ) {ID_B,ID_A,T_B },

Tag: 0

Name: TB+AH+CC
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→S : ID_A,ID_B, E_(K_BS ) {ID_B ,ID_S,ID_B,a^y,ID_A,T_B},
	S→A : K_AS,E_(K_AS ) {y,ID_S ,ID_A,ID_B,a^y,ID_A,T_S }
	A→S : E_(K_AS ) {ID_A ,ID_S,ID_A,a^x,ID_B,T_A},E_(K_AB ) {ID_A,ID_B,T_A},
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_A,a^x,ID_B,T_S},E_(K_AB ) {ID_A,ID_B,T_A },
	B→A : E_(K_AB ) {ID_B,ID_A,T_B },

Flaws: The adversary can obtain session key a^x^y  by decrypting E_(K_AS ) {y,ID_S ,ID..  using plaintext key K_AS
Tag: 1


Name: TB+AH+CC
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→S : ID_A,ID_B, E_(K_BS ) {ID_B ,ID_S,ID_B,a^y,ID_A,T_B},
	S→A : K_AS,E_(K_AS ) {x,ID_S ,ID_A,ID_B,a^y,ID_A,T_S }
	A→S : E_(K_AS ) {ID_A ,ID_S,ID_A,a^x,ID_B,T_A},E_(K_AB ) {ID_A,ID_B,T_A},
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_A,a^x,ID_B,T_S},E_(K_AB ) {ID_A,ID_B,T_A },
	B→A : E_(K_AB ) {ID_B,ID_A,T_B },

Flaws: The adversary can obtain session key a^x^y  by decrypting E_(K_AS ) {x,ID_S ,ID..  using plaintext key K_AS
Tag: 1

Name: The simpler Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B },E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B }
	B→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B }, E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}

Tag: 0


Name: The simpler Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B },E_(K_AS ) {ID_S,ID_A,ID_A,K_AB }
	B→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB }, E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3-4 i.e. E_(K_AS ) {ID_S,ID_A,ID_A,K_AB }
Tag: 1



Name: The simpler Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : K_BS,E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B },E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B }
	B→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B }, E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}


	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B }  using plaintext key K_BS
Tag: 1

Name: The simpler Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B,K_AS
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B },E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B }
	B→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B }, E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B }  using plaintext key K_AS
Tag: 1


Name: The simpler Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B },E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }
	B→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }

Tag: 0


Name: The simpler Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B },E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,N_A }
	B→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,N_A }


Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3-4 i.e. E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,N_A }
Tag: 1


Name: The simpler Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B,K_BS
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B },E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }
	B→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }


	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }  using plaintext key K_BS
Tag: 1

Name: The simpler Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B,K_AS
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B },E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }
	B→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }
	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }  using plaintext key K_AS
Tag: 1


Name: The simpler Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,N_A },E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }
	A→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }, E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,N_A }
Tag: 1



Name: The simpler Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A },E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }
	A→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }, E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}

Tag: 0


Name: The simpler Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,N_A },E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }
	A→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }, E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}


Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,N_A }
Tag: 1


Name: The simpler Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A,K_AS
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A },E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }
	A→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }, E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}


	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }  using plaintext key K_AS
Tag: 1


Name: The simpler Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A,K_BS
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A },E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }
	A→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }, E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }  using plaintext key K_BS
Tag: 1

Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B }
	B→A : E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}

Tag: 0


Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB }
	B→A : E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 4 i.e. E_(K_AS ) {ID_S,ID_A,ID_A,K_AB }
Tag: 1

Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B,K_AS
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B } 
	B→A : E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B }  using plaintext key K_AS
Tag: 1

Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B,K_BS
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B } 
	B→A : E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B }  using plaintext key K_BS
Tag: 1


Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }

Tag: 0


Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,N_A }

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 4 i.e. E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,N_A }
Tag: 1


Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B,K_AS
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B } 
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }  using plaintext key K_AS
Tag: 1

Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B,K_BS
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }  using plaintext key K_BS
Tag: 1

Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }
	A→B : E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}

Tag: 0


Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,N_A }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,N_B }
	A→B : E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,N_A }
Tag: 1



Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A,K_AS
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B } 
	A→B : E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }  using plaintext key K_AS
Tag: 1


Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A,K_BS
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B } 
	A→B : E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }   using plaintext key K_BS
Tag: 1


Name: The simpler Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A },E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }
	A→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }, E_(K_AB ) {ID_A,ID_B,N_B },N_A
	B→A : E_(K_AB ) {ID_B,ID_A,N_A }

Tag: 0


Name: The simpler Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,N_A },E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }
	A→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }, E_(K_AB ) {ID_A,ID_B,N_B },N_A
	B→A : E_(K_AB ) {ID_A,N_A }


Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3-5 i.e. E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,N_A }
Tag: 1

Name: The simpler Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A,K_AS
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A },E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B } 
	A→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }, E_(K_AB ) {ID_A,ID_B,N_B },N_A
	B→A : E_(K_AB ) {ID_B,ID_A,N_A }

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }  using plaintext key K_AS
Tag: 1

Name: The simpler Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A,K_BS
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A },E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B } 
	A→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }, E_(K_AB ) {ID_A,ID_B,N_B },N_A
	B→A : E_(K_AB ) {ID_B,ID_A,N_A }

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }   using plaintext key K_BS
Tag: 1

Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B }, N_B
	A→B :  E_(K_AB ) {ID_B,ID_A,N_B }
	B→A : E_(K_AB ) {ID_A,ID_B,N_A }

Tag: 0


Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB }, N_B
	A→B : E_(K_AB ) {ID_A,N_B }
	B→A : E_(K_AB ) {ID_A,N_A }


Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 4-6 i.e. E_(K_AS ) {ID_S,ID_A,ID_A,K_AB }
Tag: 1




Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B,K_AS
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B }, N_B 
	A→B :  E_(K_AB ) {ID_B,ID_A,N_B }
	B→A : E_(K_AB ) {ID_A,ID_B,N_A }


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B }  using plaintext key K_AS
Tag: 1


Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B,K_BS
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B }, N_B
	A→B :  E_(K_AB ) {ID_B,ID_A,N_B }
	B→A : E_(K_AB ) {ID_A,ID_B,N_A }


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B }  using plaintext key K_BS
Tag: 1

Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }, N_B

Tag: 0

Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,N_A }, N_B


Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 4 i.e. E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,N_A }
Tag: 1




Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B,K_BS
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B } 
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }, N_B


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }   using plaintext key K_BS
Tag: 1

Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B,K_AS
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }, N_B

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }   using plaintext key K_AS
Tag: 1

Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B },N_A
	B→A : E_(K_AB ) {ID_B,ID_A,N_A }
	A→B : E_(K_AB ) {ID_A,ID_B,N_B }

Tag: 0


Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,N_A }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B },N_A
	B→A : E_(K_AB ) {ID_A,N_A }
	A→B : E_(K_AB ) {ID_A,N_B }


Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3-5 i.e. E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,N_A }
Tag: 1


Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A,K_AS
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A } 
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B },N_A
	B→A : E_(K_AB ) {ID_B,ID_A,N_A }
	A→B : E_(K_AB ) {ID_A,ID_B,N_B }


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }   using plaintext key K_AS
Tag: 1

Name: The concurrent Otaway-Rees protocol
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A,K_BS
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A } 
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B },N_A
	B→A : E_(K_AB ) {ID_B,ID_A,N_A }
	A→B : E_(K_AB ) {ID_A,ID_B,N_B }


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_S,ID_B,ID_A,K_AB,ID_B,N_B }   using plaintext key K_BS
Tag: 1

Name: NB+AO+CO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : ID_A,ID_B,N_A
	B→S : E_(K_BS ) {ID_B,ID_S,ID_A,K_AB,ID_B,N_A },N_B, E_(K_AB ) {ID_B,ID_A,N_A }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B },N_B, E_(K_AB ) {ID_B,ID_A,N_A }
	A→B : E_(K_AB ) {ID_A,ID_B,N_B }

Tag: 0

Name: NB+AO+CO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : ID_A,ID_B,N_A
	B→S : E_(K_BS ) {ID_B,ID_S,ID_A,K_AB,ID_B,N_A },N_B, E_(K_AB ) {ID_B,ID_A,N_A }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB },N_B, E_(K_AB ) {ID_A,N_A }
	A→B : E_(K_AB ) {ID_A,ID_B,N_B }

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {ID_S,ID_A,ID_A,K_AB },N_B, E_(K_AB ) {ID_A,N_A }
Tag: 1

Name: NB+AO+CO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : ID_A,ID_B,N_A,K_AS
	B→S : E_(K_BS ) {ID_B,ID_S,ID_A,K_AB,ID_B,N_A },N_B, E_(K_AB ) {ID_B,ID_A,N_A }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B },N_B, E_(K_AB ) {ID_B,ID_A,N_A }
	A→B : E_(K_AB ) {ID_A,ID_B,N_B } , 
	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B }  using plaintext key K_AS
Tag: 1

Name: NB+AO+CO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : ID_A,ID_B,N_A,K_BS
	B→S : E_(K_BS ) {ID_B,ID_S,ID_A,K_AB,ID_B,N_A },N_B, E_(K_AB ) {ID_B,ID_A,N_A }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B },N_B, E_(K_AB ) {ID_B,ID_A,N_A }
	A→B : E_(K_AB ) {ID_A,ID_B,N_B } 

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_B,ID_S,ID_A,K_AB,ID_B,N_A } using plaintext key K_BS
Tag: 1


Name: NB+AO+CO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : ID_A,ID_B,N_A
	B→S : E_(K_BS ) {ID_B,ID_S,ID_A,K_AB,ID_B,N_A },N_B
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }

Tag: 0


Name: NB+AO+CO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : ID_A,ID_B,N_A
	B→S : E_(K_BS ) {ID_B,ID_S,ID_A,K_AB,ID_B,N_A },N_B
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,N_A }


Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,N_A }
Tag: 1


Name: NB+AO+CO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : ID_A,ID_B,N_A,K_AS
	B→S : E_(K_BS ) {ID_B,ID_S,ID_A,K_AB,ID_B,N_A },N_B
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A } 


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }   using plaintext key K_AS
Tag: 1

Name: NB+AO+CO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : ID_A,ID_B,N_A,K_BS
	B→S : E_(K_BS ) {ID_B,ID_S,ID_A,K_AB,ID_B,N_A },N_B
	S→A : E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A } 


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }   using plaintext key K_BS
Tag: 1

Name: NB+AO+CO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : ID_B,ID_A,N_B
	A→S : ID_B,ID_A,E_(K_AS ) {ID_A,ID_S,ID_B,K_AB,ID_A,T_A,N_B }
	S→B : E_(K_AS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }

Tag: 0

Name: NB+AO+CO
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : ID_B,ID_A,N_B,K_AS
	A→S : ID_B,ID_A,E_(K_AS ) {ID_A,ID_S,ID_B,K_AB,ID_A,T_A,N_B }
	S→B : E_(K_AS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B } 


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_A,ID_S,ID_B,K_AB,ID_A,T_A,N_B }   using plaintext key K_AS
Tag: 1

Name: NB+A0+CC
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : ID_B,ID_A,N_B,
	A→S : ID_B,ID_A,N_A,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B,N_B },
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B,N_B },N_A,
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A,N_A },
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^y,ID_A,N_A },

Tag: 0

Name: NB+A0+CC
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : ID_B,ID_A,N_B,K_BS
	A→S : ID_B,ID_A,N_A,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B,N_B },
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B,N_B },N_A,
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A,N_A }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^y,ID_A,N_A },

Tag: 0

Name: NB+A0+CC
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : ID_B,ID_A,N_B,x, K_BS
	A→S : ID_B,ID_A,N_A,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B,N_B },
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B,N_B },N_A,
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A,N_A }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^y,ID_A,N_A },


Flaws: The adversary can obtain session key a^x^y using plaintext secret x ,K_BS
Tag: 1

Name: NB+A0+CC
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : ID_B,ID_A,N_B,y, K_BS
	A→S : ID_B,ID_A,N_A,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B,N_B },
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B,N_B },N_A,
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A,N_A }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^y,ID_A,N_A },

Flaws: The adversary can obtain session key a^x^y using plaintext secret y ,K_BS
Tag: 1

Name: NB+A0+CC
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : ID_B,ID_A,N_B,
	A→B : N_A,
	A→S : ID_B,ID_A,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B,N_B },
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B,N_B },
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A,N_A },
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^y,ID_A,N_A },

Tag: 0

Name: NB+A0+CC
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : ID_B,ID_A,N_B,
	A→B : N_A,K_BS
	A→S : ID_B,ID_A,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B,N_B },
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B,N_B },
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A,N_A }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^y,ID_A,N_A },

Tag: 0


Name: NB+A0+CC
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	B→A : ID_B,ID_A,N_B,
	A→B : N_A,x, K_BS
	A→S : ID_B,ID_A,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B,N_B },
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B,N_B },
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A,N_A }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^y,ID_A,N_A },


Flaws: The adversary can obtain session key a^x^y using plaintext secret x 
Tag: 1


Name: NB+AH+CC
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B },N_A,
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B },N_A,
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A },E_(K_AB ) {ID_B,ID_A,N_A },N_B,
	S→A : E_(K_AS ) {ID_A,ID_S,ID_B,a^y,ID_A },

Tag: 0

Name: NB+AH+CC
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B },N_A,
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B },N_A,
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A },E_(K_AB ) {ID_B,ID_A,N_A },N_B,
	S→A : K_AS,E_(K_AS ) {ID_A,ID_S,ID_B,a^y,ID_A }

Tag: 0


Name: NB+AH+CC
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B },N_A,
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B },N_A,
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A },E_(K_AB ) {ID_B,ID_A,N_A },N_B,
	S→A : K_AS,x,E_(K_AS ) {ID_A,ID_S,ID_B,a^y,ID_A }


Flaws: The adversary can obtain session key a^x^y using plaintext secret x 
Tag: 1

Name: NB+AH+CC
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_S,ID_A,a^x,ID_B },N_A,
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B },N_A,
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A },E_(K_AB ) {ID_B,ID_A,N_A },N_B,
	S→A : K_AS, y,E_(K_AS ) {ID_A,ID_S,ID_B,a^y,ID_A },

Flaws: The adversary can obtain session key a^x^y using plaintext secret y
Tag: 1

Name: NB+AH+CC
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : ID_A,ID_B,N_A,
	A→S : ID_A,ID_B,E_(K_BS ) {ID_A,ID_S,ID_A,a^x,ID_B },
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B },
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A },
	S→A : E_(K_BS ) {ID_S,ID_A,ID_B,a^x,ID_A },

Tag: 0

Name: NB+AH+CC
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : ID_A,ID_B,N_A,K_BS
	A→S : ID_A,ID_B,E_(K_BS ) {ID_A,ID_S,ID_A,a^x,ID_B },
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B }
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A },
	S→A : E_(K_BS ) {ID_S,ID_A,ID_B,a^x,ID_A },

Tag: 0


Name: NB+AH+CC
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : ID_A,ID_B,N_A,K_BS,x
	A→S : ID_A,ID_B,E_(K_BS ) {ID_A,ID_S,ID_A,a^x,ID_B },
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B },
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A },
	S→A : E_(K_BS ) {ID_S,ID_A,ID_B,a^x,ID_A },

Flaws: The adversary can obtain session key a^x^y using plaintext secret x 
Tag: 1

Name: NB+AH+CC
Paper: Lower Bounds on Messages and Rounds for Network Authentication Protocols
	A→B : ID_A,ID_B,N_A,K_BS,y
	A→S : ID_A,ID_B,E_(K_BS ) {ID_A,ID_S,ID_A,a^x,ID_B },
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^x,ID_B },
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^y,ID_A },
	S→A : E_(K_BS ) {ID_S,ID_A,ID_B,a^x,ID_A },

Flaws: The adversary can obtain session key a^x^y using plaintext secret y 
Tag: 1

Name: A Mutual Authentication Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	A→S : E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {T_A}}
	S→B : ID_A,ID_B
	B→S : E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {T_B}}
	S→A : E_(K_AS ) {N_A,K_AB,N_a^' }
	S→B : E_(K_BS ) {N_B,K_AB,N_A^' }

Tag: 0

Name: A Mutual Authentication Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	A→S : E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {T_A}}
	S→B : ID_A,ID_B,K_AS
	B→S : E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {T_B}}
	S→A : E_(K_AS ) {N_A,K_AB,N_a^' } 
	S→B : E_(K_BS ) {N_B,K_AB,N_A^' }


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A,K_AB,N_a^' }   using plaintext key K_AS
Tag: 1


Name: A Mutual Authentication Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	A→S : E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {T_A}}
	S→B : ID_A,ID_B
	B→S : E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {T_B}}
	S→A : K_BS,E_(K_AS ) {N_A,K_AB,N_a^' } 
	S→B : E_(K_BS ) {N_B,K_AB,N_A^' }

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {N_B,K_AB,N_A^' }  using plaintext key K_BS
Tag: 1

Name: A Reduced Mutual Authentication Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	A→B : E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}},N_A^'
	B→S: ID_A,ID_B,E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}},E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}}
	S→B : E_(K_AS ) {N_A,K_AB },E_(K_BS ) {N_B,K_AB,ID_B}
	B→A : E_(K_AS ) {N_A,K_AB,ID_B }

Tag: 0


Name: A Reduced Mutual Authentication Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	A→B : E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}},N_A^'
	B→S: ID_A,ID_B,E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}},E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}}
	S→B : E_(K_AS ) {N_A,K_AB },E_(K_BS ) {N_B,K_AB }
	B→A : E_(K_AS ) {N_A,K_AB }

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3-4 i.e. E_(K_AS ) {N_A,K_AB }
Tag: 1


Name: A Reduced Mutual Authentication Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	A→B : E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}},N_A^'
	B→S: E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}},E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}}
	S→B : K_AS,E_(K_AS ) {N_A,K_AB },E_(K_BS ) {N_B,K_AB ,ID_B}
	B→A : E_(K_AS ) {N_A,K_AB,ID_B }

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A,K_AB,ID_B }  using plaintext key K_AS
Tag: 1

Name: A Reduced Mutual Authentication Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	A→B : E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}},N_A^'
	B→S: E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}},E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}}
	S→B : K_BS,E_(K_AS ) {N_A,K_AB },E_(K_BS ) {N_B,K_AB,ID_B }
	B→A : E_(K_AS ) {N_A,K_AB,ID_B }

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {N_B,K_AB,ID_B }  using plaintext key K_BS
Tag: 1


Name: A Corrected Mutual Authentication Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	B→A : E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}},N_a^'
	A→S: ID_B,ID_A,E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}},E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}}
	S→A :  E_(K_AS ) {ID_B,N_B,K_AB },E_(K_BS ) {ID_A,N_A,K_AB }
	A→B : E_(K_BS ) {ID_A,N_A,K_AB }

Tag: 0


Name: A Corrected Mutual Authentication Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	B→A : E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}},N_a^'
	A→S: ID_B,ID_A,E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}},E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}}
	S→A :  E_(K_AS ) {N_B,K_AB },E_(K_BS ) {ID_A,N_A,K_AB }
	A→B : E_(K_BS ) {ID_A,N_A,K_AB }

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {N_B,K_AB }
Tag: 1

Name: A Corrected Mutual Authentication Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	B→A : E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}},N_a^'
	A→S: E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}},E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}}
	S→A :  K_BS,E_(K_AS ) {ID_B,N_B,K_AB },E_(K_BS ) {ID_A,N_A,K_AB } 
	A→B : E_(K_BS ) {ID_A,N_A,K_AB }


	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,N_A,K_AB }  using plaintext key K_BS
Tag: 1

Name: A Corrected Mutual Authentication Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	B→A : E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}},N_a^'
	A→S: E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}},E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}}
	S→A :  K_AS,E_(K_AS ) {ID_B,N_B,K_AB },E_(K_BS ) {ID_A,N_A,K_AB } 
	A→B : E_(K_BS ) {ID_A,N_A,K_AB }

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {ID_A,N_A,K_AB }  using plaintext key K_AS
Tag: 1

Name: A Nonce based Mutual Authentication Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B
	S→A : ID_A,ID_B,N_S
	A→B: E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}},N_S
	B→S : E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}},E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}}
	S→B : E_(K_BS ) {N_B,K_AB,N_A^' },E_(K_AS ) {N_A,K_AB,N_a^' }
	B→A : E_(K_AS ) {N_A,K_AB,N_a^' }

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 5-6 i.e. E_(K_AS ) {N_A,K_AB,N_a^' }
Tag: 1


Name: A Nonce based Mutual Authentication Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B
	S→A : ID_A,ID_B,N_S
	A→B: E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}},N_S
	B→S : E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}},E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}}
	S→B : E_(K_BS ) {N_B,K_AB,N_A^' },E_(K_AS ) {N_A,K_AB,N_a^' ,ID_B}
	B→A : E_(K_AS ) {ID_B,N_A,K_AB,N_a^' }

Tag: 0


Name: A Nonce based Mutual Authentication Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B
	S→A : ID_A,ID_B,N_S
	A→B: E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}},N_S
	B→S : E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}},E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}}
	S→B : K_AS,E_(K_BS ) {N_B,K_AB,N_A^' },E_(K_AS ) {N_A,K_AB,N_a^' ,ID_B}
	B→A : E_(K_AS ) {ID_B,N_A,K_AB,N_a^' }


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_B,N_A,K_AB,N_a^' }  using plaintext key K_AS
Tag: 1


Name: A Nonce based Mutual Authentication Protocol
Paper: Protecting Poorly Chosen Secrets from Guessing Attacks
	A→S : ID_A,ID_B
	S→A : ID_A,ID_B,N_S
	A→B: E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}},N_S
	B→S : E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}},E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}}
	S→B : K_BS,E_(K_BS ) {N_B,K_AB,N_A^' },E_(K_AS ) {N_A,K_AB,N_a^',ID_B }  
	B→A : E_(K_AS ) {N_A,K_AB,N_a^',ID_B }


Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {N_B,K_AB,N_A^' }  using plaintext key K_BS
Tag: 1


Name: An basic Authentication Protocol
Paper: Authentication using minimally trusted servers
	B→A : ID_B,E_(K_BS ) {a^y,ID_A},
	A→S : E_(K_BS ) {a^y,ID_A},E_(K_AS ) {a^x,ID_B },
	S→A : E_(K_BS ) {a^y,a^x,ID_A },E_(K_AS ) {a^x,a^y,ID_B },
	A→B : E_(K_BS ) {a^y,a^x,ID_A },hash{K_AB,ID_B},
	B→A : hash{K_AB,ID_A},

Tag: 0

Name: An basic Authentication Protocol
Paper: Authentication using minimally trusted servers
	B→A : K_AS, y,ID_B,E_(K_BS ) {a^y,ID_A}
	A→S : E_(K_BS ) {a^y,ID_A},E_(K_AS ) {a^x,ID_B },
	S→A : E_(K_BS ) {a^y,a^x,ID_A },E_(K_AS ) {a^x,a^y,ID_B },
	A→B : E_(K_BS ) {a^y,a^x,ID_A },hash{K_AB,ID_B},
	B→A : hash{K_AB,ID_A},

Flaws: The adversary can obtain session key a^x^y  by decrypting  E_(K_AS ) {a^x,ID_B } using plaintext key K_AS
Tag: 1


Name: An basic Authentication Protocol
Paper: Authentication using minimally trusted servers
	B→A : ID_B,K_BS,x,E_(K_BS ) {a^y,ID_A}
	A→S : E_(K_BS ) {a^y,ID_A},E_(K_AS ) {a^x,ID_B },
	S→A : E_(K_BS ) {a^y,a^x,ID_A },E_(K_AS ) {a^x,a^y,ID_B },
	A→B : E_(K_BS ) {a^y,a^x,ID_A },hash{K_AB,ID_B},
	B→A : hash{K_AB,ID_A},

Flaws: The adversary can obtain session key a^x^y  by decrypting  E_(K_BS ) {a^y,ID_A} using plaintext key K_BS
Tag: 1

Name: An basic Authentication Protocol
Paper: Authentication using minimally trusted servers
	B→A : ID_B,K_AS,E_(K_BS ) {a^y,ID_A},
	A→S : E_(K_BS ) {a^y,ID_A},E_(K_AS ) {a^x,ID_B },
	S→A : E_(K_BS ) {a^y,a^x,ID_A },E_(K_AS ) {a^x,a^y,ID_B },
	A→B : E_(K_BS ) {a^y,a^x,ID_A },hash{K_AB,ID_B},
	B→A : hash{K_AB,ID_A},

Tag: 0

Name: An basic Authentication Protocol
Paper: Authentication using minimally trusted servers
	B→A : ID_B,K_BS,E_(K_BS ) {a^y,ID_A},
	A→S : E_(K_BS ) {a^y,ID_A},E_(K_AS ) {a^x,ID_B },
	S→A : E_(K_BS ) {a^y,a^x,ID_A },E_(K_AS ) {a^x,a^y,ID_B },
	A→B : E_(K_BS ) {a^y,a^x,ID_A },hash{K_AB,ID_B},
	B→A : hash{K_AB,ID_A},

Tag: 0


Name: An more robust Authentication Protocol
Paper: Authentication using minimally trusted servers
	B→A : ID_B,E_(K_BS ) {a^y,ID_A},
	A→S : E_(K_BS ) {a^y,ID_A},E_(K_AS ) {a^x,ID_B },
	S→A : E_(K_BS ) {a^y,a^x,ID_A,T_S },E_(K_AS ) {a^x,a^y,ID_B,T_S },
	A→B : E_(K_BS ) {a^y,a^x,ID_A,T_S },

Tag: 0

Name: An more robust Authentication Protocol
Paper: Authentication using minimally trusted servers
	B→A : ID_B,K_AS,y,E_(K_BS ) {a^y,ID_A}
	A→S : E_(K_BS ) {a^y,ID_A},E_(K_AS ) {a^x,ID_B },
	S→A : E_(K_BS ) {a^y,a^x,ID_A,T_S },E_(K_AS ) {a^x,a^y,ID_B,T_S },
	A→B : E_(K_BS ) {a^y,a^x,ID_A,T_S },

Flaws: The adversary can obtain session key a^x^y  by decrypting  E_(K_AS ) {a^x,ID_B }   using plaintext key K_AS
Tag: 1




Name: An more robust Authentication Protocol
Paper: Authentication using minimally trusted servers
	B→A : ID_B,K_BS,x,E_(K_BS ) {a^y,ID_A},
	A→S : E_(K_BS ) {a^y,ID_A},E_(K_AS ) {a^x,ID_B },
	S→A : E_(K_BS ) {a^y,a^x,ID_A,T_S },E_(K_AS ) {a^x,a^y,ID_B,T_S },
	A→B : E_(K_BS ) {a^y,a^x,ID_A,T_S },

Flaws: The adversary can obtain session key a^x^y  by decrypting  E_(K_BS ) {a^y,ID_A}   using plaintext key K_BS
Tag: 1

Name: An more robust Authentication Protocol
Paper: Authentication using minimally trusted servers
	B→A : ID_B,K_AS,E_(K_BS ) {a^y,ID_A}
	A→S : E_(K_BS ) {a^y,ID_A},E_(K_AS ) {a^x,ID_B },
	S→A : E_(K_BS ) {a^y,a^x,ID_A,T_S },E_(K_AS ) {a^x,a^y,ID_B,T_S },
	A→B : E_(K_BS ) {a^y,a^x,ID_A,T_S },
 
Tag: 0

Name: An more robust Authentication Protocol
Paper: Authentication using minimally trusted servers
	B→A : ID_B,K_BS,E_(K_BS ) {a^y,ID_A}
	A→S : E_(K_BS ) {a^y,ID_A},E_(K_AS ) {a^x,ID_B },
	S→A : E_(K_BS ) {a^y,a^x,ID_A,T_S },E_(K_AS ) {a^x,a^y,ID_B,T_S },
	A→B : E_(K_BS ) {a^y,a^x,ID_A,T_S },

Tag: 0


Name: An basic Authentication Protocol
Paper: Increasing Availability and Security of an Authentication Service
	B→S : ID_B,ID_A,
	S→B : N_S,
	B→A : ID_B,ID_A,N_B,N_S,E_(K_BS ) {ID_B,ID_A,N_S,a^y },
	A→S : ID_A,ID_B,N_A,N_B,E_(K_AS ) {ID_A,ID_B,N_S,a^x },E_(K_BS ) {ID_B,ID_A,N_S,a^y },
	S→A : E_(K_BS ) {ID_A,N_B,a^x },E_(K_AS ) {ID_B,N_A,a^y },
	A→B : E_(K_BS ) {ID_A,N_B,a^x },E_(K_AB ) {N_B },N_A,
	B→A : E_(K_AB ) {N_A },

Tag: 0

Name: An basic Authentication Protocol
Paper: Increasing Availability and Security of an Authentication Service
	B→S : ID_B,ID_A,
	S→B : N_S,
	B→A : ID_B,ID_A,N_B,N_S,K_AS ,y,E_(K_BS ) {ID_B,ID_A,N_S,a^y },
	A→S : ID_A,ID_B,N_A,N_B,E_(K_AS ) {ID_A,ID_B,N_S,a^x },E_(K_BS ) {ID_B,ID_A,N_S,a^y },
	S→A : E_(K_BS ) {ID_A,N_B,a^x },E_(K_AS ) {ID_B,N_A,a^y },
	A→B : E_(K_BS ) {ID_A,N_B,a^x },E_(K_AB ) {N_B },N_A,
	B→A : E_(K_AB ) {N_A },

Flaws: The adversary can obtain session key a^x^y  by decrypting   E_(K_AS ) {ID_A,ID_B,N_S,a^x }  using plaintext key K_AS
Tag: 1

Name: An basic Authentication Protocol
Paper: Increasing Availability and Security of an Authentication Service
	B→S : ID_B,ID_A,
	S→B : N_S,
	B→A : ID_B,ID_A,N_B,N_S,K_BS ,x,E_(K_BS ) {ID_B,ID_A,N_S,a^y },
	A→S : ID_A,ID_B,N_A,N_B,E_(K_AS ) {ID_A,ID_B,N_S,a^x },E_(K_BS ) {ID_B,ID_A,N_S,a^y },
	S→A : E_(K_BS ) {ID_A,N_B,a^x },E_(K_AS ) {ID_B,N_A,a^y },
	A→B : E_(K_BS ) {ID_A,N_B,a^x },E_(K_AB ) {N_B },N_A,
	B→A : E_(K_AB ) {N_A },


Flaws: The adversary can obtain session key a^x^y  by decrypting  E_(K_BS ) {ID_B,ID_A,N_S,a^y }  using plaintext key K_BS
Tag: 1


Name: An basic Authentication Protocol
Paper: Increasing Availability and Security of an Authentication Service
	B→S : ID_B,ID_A,
	S→B : N_S,
	B→A : ID_B,ID_A,N_B,N_S,K_AS ,E_(K_BS ) {ID_B,ID_A,N_S,a^y },
	A→S : ID_A,ID_B,N_A,N_B,E_(K_AS ) {ID_A,ID_B,N_S,a^x },E_(K_BS ) {ID_B,ID_A,N_S,a^y },
	S→A : E_(K_BS ) {ID_A,N_B,a^x },E_(K_AS ) {ID_B,N_A,a^y },
	A→B : E_(K_BS ) {ID_A,N_B,a^x },E_(K_AB ) {N_B },N_A,
	B→A : E_(K_AB ) {N_A },

Tag: 0

Name: An basic Authentication Protocol
Paper: Increasing Availability and Security of an Authentication Service
	B→S : ID_B,ID_A,
	S→B : N_S,
	B→A : ID_B,ID_A,N_B,N_S,K_BS ,E_(K_BS ) {ID_B,ID_A,N_S,a^y },
	A→S : ID_A,ID_B,N_A,N_B,E_(K_AS ) {ID_A,ID_B,N_S,a^x },E_(K_BS ) {ID_B,ID_A,N_S,a^y },
	S→A : E_(K_BS ) {ID_A,N_B,a^x },E_(K_AS ) {ID_B,N_A,a^y },
	A→B : E_(K_BS ) {ID_A,N_B,a^x },E_(K_AB ) {N_B },N_A,
	B→A : E_(K_AB ) {N_A },

Tag: 0



Name: Proposed efficient three-party EKE protocol
Paper: Communication-efficient three-party protocols for authentication and key agreement
	A→B : a^x ,E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^x },K_AS },
	B→S :  E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^x },K_AS },E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^y },K_BS },a^y,E_(K_AB ) {ID_A,N_B },
	S→A : E_(K_AS ) {ID_B,a^y },E_(K_BS ) {ID_A,a^x },E_(K_AB ) {ID_A,N_B },
	A→B : E_(K_BS ) {ID_A,a^x },

Tag: 0


Name: Proposed efficient three-party EKE protocol
Paper: Communication-efficient three-party protocols for authentication and key agreement
	A→B : E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^x },K_AS },a^x ,
	B→S :  E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^x },K_AS },E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^y },K_BS },a^y,E_(K_AB ) {ID_A,N_B },
	S→A : E_(K_AS ) {ID_B,a^y },E_(K_BS ) {ID_A,a^x },E_(K_AB ) {ID_A,N_B },
	A→B : E_(K_BS ) {ID_A,a^x },K_BS

Tag: 0

Name: Proposed efficient three-party EKE protocol
Paper: Communication-efficient three-party protocols for authentication and key agreement
	A→B : a^x ,E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^x },K_AS },
	B→S :  E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^x },K_AS },E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^y },K_BS },a^y,E_(K_AB ) {ID_A,N_B },
	S→A : E_(K_AS ) {ID_B,a^y },E_(K_BS ) {ID_A,a^x },E_(K_AB ) {ID_A,N_B },
	A→B : E_(K_BS ) {ID_A,a^x },K_AS

Tag: 0

Name: Proposed efficient three-party EKE protocol
Paper: Communication-efficient three-party protocols for authentication and key agreement
	A→B : a^x ,E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^x },K_AS },
	B→S :  E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^x },K_AS },E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^y },K_BS },a^y,E_(K_AB ) {ID_A,N_B },
	S→A : E_(K_AS ) {ID_B,a^y },E_(K_BS ) {ID_A,a^x },E_(K_AB ) {ID_A,N_B },
	A→B : K_BS,y,E_(K_BS ) {ID_A,a^x },

Flaws: The adversary can obtain session key a^x^y  by decrypting   E_(K_BS ) {ID_A,a^x }  using plaintext key K_BS 
Tag: 1



Name: Proposed efficient three-party EKE protocol
Paper: Communication-efficient three-party protocols for authentication and key agreement
	A→B : E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^x },K_AS },a^x ,
	B→S :  E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^x },K_AS },E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^y },K_BS },a^y,E_(K_AB ) {ID_A,N_B },
	S→A : E_(K_AS ) {ID_B,a^y },E_(K_BS ) {ID_A,a^x },E_(K_AB ) {ID_A,N_B },
	A→B : E_(K_BS ) {ID_A,a^x },K_BS,x

Tag: 0

Name: Proposed efficient three-party EKE protocol
Paper: Communication-efficient three-party protocols for authentication and key agreement
	A→B : E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^x },K_AS },a^x ,
	B→S :  E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^x },K_AS },E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^y },K_BS },a^y,E_(K_AB ) {ID_A,N_B },
	S→A : E_(K_AS ) {ID_B,a^y },E_(K_BS ) {ID_A,a^x },E_(K_AB ) {ID_A,N_B },
	A→B : E_(K_BS ) {ID_A,a^x },K_AS,y

Tag: 0

Name: Proposed efficient three-party EKE protocol
Paper: Communication-efficient three-party protocols for authentication and key agreement
	A→B : E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^x },K_AS },a^x ,
	B→S :  E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^x },K_AS },E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^y },K_BS },a^y,E_(K_AB ) {ID_A,N_B },
	S→A : E_(K_AS ) {ID_B,a^y },E_(K_BS ) {ID_A,a^x },E_(K_AB ) {ID_A,N_B },
	A→B :K_AS,x,E_(K_BS ) {ID_A,a^x },

Flaws: The adversary can obtain session key a^x^y  by decrypting    E_(K_AS ) {ID_B,a^y }  using plaintext key K_AS
Tag: 1



Name: SNP protocol
Paper: Secure Authentication Protocols Resistant to Guessing Attacks
	B→A : E_(K_BS ) {ID_B,ID_A,N_B }
	A→S :  ID_A,E_(K_AS ) {ID_B,ID_A,N_A,E_(K_BS ) {ID_B,ID_A,N_B }}
	S→A : E_(K_AS ) {ID_S,K_AB,N_A,E_(K_AS ) {K_AB,N_B }}
	A→B : E_(K_AS ) {K_AB,N_B }

Tag: 0

Name: SNP protocol
Paper: Secure Authentication Protocols Resistant to Guessing Attacks
	B→A : E_(K_BS ) {ID_B,ID_A,N_B }
	A→S :  ID_A,E_(K_AS ) {ID_B,ID_A,N_A,E_(K_BS ) {ID_B,ID_A,N_B }}
	S→A : E_(K_AS ) {ID_S,K_AB,N_A,E_(K_AS ) {K_AB,N_B }},K_BS
	A→B : E_(K_AS ) {K_AB,N_B }


Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {ID_S,K_AB,N_A,E_(K_AS ) {K_AB,N_B }}
Tag: 1

Name: SNP protocol
Paper: Secure Authentication Protocols Resistant to Guessing Attacks
	B→A : E_(K_BS ) {ID_B,ID_A,N_B }
	A→S :  ID_A,E_(K_AS ) {ID_B,ID_A,N_A,E_(K_BS ) {ID_B,ID_A,N_B }}
	S→A : E_(K_AS ) {ID_B,ID_S,K_AB,N_A,E_(K_AS ) {K_AB,N_B }},K_BS
	A→B : E_(K_AS ) {K_AB,N_B }

Tag: 0

Name: SNP protocol
Paper: Secure Authentication Protocols Resistant to Guessing Attacks
	B→A : K_AS,E_(K_BS ) {ID_B,ID_A,N_B }
	A→S :  ID_A,E_(K_AS ) {ID_B,ID_A,N_A,E_(K_BS ) {ID_B,ID_A,N_B }}
	S→A : E_(K_AS ) {ID_S,K_AB,N_A,E_(K_AS ) {K_AB,N_B }}
	A→B : E_(K_AS ) {K_AB,N_B }

Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {ID_B,ID_A,N_A,E_(K_BS ) {ID_B,ID_A,N_B }}  using plaintext key K_AS
Tag: 1




Name: Demonstration protocol
Paper: Secure Authentication Protocols Resistant to Guessing Attacks
	A→B : E_(K_AS ) {ID_A,ID_B,N_A },N_A^'
	B→S :  ID_A,ID_B,E_(K_AS ) {ID_A,ID_B,N_A },E_(K_BS ) {ID_B,ID_A,N_B }
	S→B : E_(K_AS ) {N_A,K_AB,ID_B },E_(K_BS ) {N_B,K_AB }
	B→A : E_(K_AS ) {N_A,K_AB,ID_B }
	

Tag: 0




Name: Demonstration protocol
Paper: Secure Authentication Protocols Resistant to Guessing Attacks
	A→B : E_(K_AS ) {ID_A,ID_B,N_A },N_A^'
	B→S :  ID_A,ID_B,E_(K_AS ) {ID_A,ID_B,N_A },E_(K_BS ) {ID_B,ID_A,N_B }
	S→B : E_(K_AS ) {N_A,K_AB },E_(K_BS ) {N_B,K_AB }
	B→A : E_(K_AS ) {N_A,K_AB }

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3-4 i.e. E_(K_AS ) {N_A,K_AB }
Tag: 1

Name: Demonstration protocol
Paper: Secure Authentication Protocols Resistant to Guessing Attacks
	A→B : E_(K_AS ) {ID_A,ID_B,N_A },N_A^'
	B→S :  E_(K_AS ) {ID_A,ID_B,N_A },E_(K_BS ) {ID_B,ID_A,N_B }
	S→B : K_AS,E_(K_AS ) {N_A,K_AB },E_(K_BS ) {N_B,K_AB }
	B→A : E_(K_AS ) {N_A,K_AB }


	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A,K_AB }  using plaintext key K_AS
Tag: 1

Name: Demonstration protocol
Paper: Secure Authentication Protocols Resistant to Guessing Attacks
	A→B : E_(K_AS ) {ID_A,ID_B,N_A },N_A^'
	B→S :  E_(K_AS ) {ID_A,ID_B,N_A },E_(K_BS ) {ID_B,ID_A,N_B }
	S→B : K_BS,E_(K_AS ) {N_A,K_AB },E_(K_BS ) {N_B,K_AB }
	B→A : E_(K_AS ) {N_A,K_AB }
	

	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_BS ) {N_B,K_AB }  using plaintext key K_BS
Tag: 1


Name: Demonstration protocol
Paper: Secure Authentication Protocols Resistant to Guessing Attacks
	B→A : E_(K_BS ) {ID_B,ID_A,N_B },N_a^'
	A→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_A,N_B },E_(K_AS ) {ID_A,ID_B,N_A }
	S→A : E_(K_BS ) {N_B,K_AB },E_(K_AS ) {N_A,K_AB,ID_B }
	A→B : E_(K_BS ) {N_B,K_AB },E_(K_AB ) {N_a^',N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}

Tag: 0


Name: Demonstration protocol
Paper: Secure Authentication Protocols Resistant to Guessing Attacks
	B→A : E_(K_BS ) {ID_B,ID_A,N_B },N_a^'
	A→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_A,N_B },E_(K_AS ) {ID_A,ID_B,N_A }
	S→A : E_(K_BS ) {N_B,K_AB },E_(K_AS ) {N_A,K_AB }
	A→B : E_(K_BS ) {N_B,K_AB },E_(K_AB ) {N_a^',N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}

Flaws: The adversary can forge B to A,S and obtain the session key between A,B because of lack of ID_B in message 3 i.e. E_(K_AS ) {N_A,K_AB }
Tag: 1


Name: Demonstration protocol
Paper: Secure Authentication Protocols Resistant to Guessing Attacks
	B→A : E_(K_BS ) {ID_B,ID_A,N_B },N_a^'
	A→S : E_(K_BS ) {ID_B,ID_A,N_B },E_(K_AS ) {ID_A,ID_B,N_A }
	S→A : K_AS,E_(K_BS ) {N_B,K_AB },E_(K_AS ) {N_A,K_AB } 
	A→B : E_(K_BS ) {N_B,K_AB },E_(K_AB ) {N_a^',N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}
 	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A,K_AB }   using plaintext key K_AS
Tag: 1

Name: Demonstration protocol
Paper: Secure Authentication Protocols Resistant to Guessing Attacks
	B→A : E_(K_BS ) {ID_B,ID_A,N_B },N_a^'
	A→S : E_(K_BS ) {ID_B,ID_A,N_B },E_(K_AS ) {ID_A,ID_B,N_A }
	S→A : K_BS,E_(K_BS ) {N_B,K_AB },E_(K_AS ) {N_A,K_AB } 
	A→B : E_(K_BS ) {N_B,K_AB },E_(K_AB ) {N_a^',N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}

 	
Flaws: The adversary can obtain session key K_AB by decrypting E_(K_AS ) {N_A,K_AB }   using plaintext key K_AS
Tag: 1

Name: The KerAeros ShBred-Key ProtoBol
Paper : B LogiB of ButhentiBBtion
	B→S : ID_B,ID_A
	S→B : E_(K_BS ) {T_S,K_AB,ID_A,E_(K_AS ) {T_S,K_AB,ID_B}}
	B→A : E_(K_AS ) {T_S,K_AB,ID_B},E_(K_AB ) {ID_B,T_B}
	A→B : E_(K_AB ) {T_B+1}

Tag: 0

Name: The KerAeros ShBred-Key ProtoBol
Paper : B LogiB of ButhentiBBtion
	B→S : ID_B,ID_A
	S→B : K_BS,E_(K_BS ) {T_S,K_AB,ID_A,E_(K_AS ) {T_S,K_AB,ID_B}} 
	B→A : E_(K_AS ) {T_S,K_AB,ID_B},E_(K_AB ) {ID_B,T_B}
	A→B : E_(K_AB ) {T_B+1}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {T_S,K_AB,ID_A,E_(K_AS ) {T_S,K_AB,ID_B}} using plBintext key K_BS
Tag: 1

Name: The KerAeros ShBred-Key ProtoBol
Paper : B LogiB of ButhentiBBtion
	B→S : ID_B,ID_A
	S→B : E_(K_BS ) {T_S,K_AB,ID_A,E_(K_AS ) {T_S,K_AB,ID_B}} 
	B→A :  K_AS,E_(K_AS ) {T_S,K_AB,ID_B},E_(K_AB ) {ID_B,T_B} 
	A→B : E_(K_AB ) {T_B+1}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {T_S,K_AB,ID_B},E_(K_AB ) {ID_B,T_B} using plBintext key K_AS
Tag: 1

Name: The KerAeros ProtoBol
Paper : B Note on the Use of TimestBmps Bs NonBes
	B→A : ID_B,N_B
	A→S : ID_A,ID_B,N_A,E_(K_AS ) {ID_B,ID_A,N_B,T_A}
	S→B : N_A,E_(K_BS ) {N_B,K_AB,T_A},E_(K_AS ) {K_AB,T_A}
	B→A : E_(K_AS ) {K_AB,T_A},E_(K_AB ) {N_A}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_B,ID_A in messBge 3 i.e E_(K_BS ) {N_B,K_AB,T_A},E_(K_AS ) {K_AB,T_A}
Tag: 1

Name: The KerAeros ProtoBol
Paper : B Note on the Use of TimestBmps Bs NonBes
	B→A : ID_B,N_B
	A→S : ID_A,N_A,E_(K_AS ) {ID_B,N_B,T_A}
	S→B : N_A,E_(K_BS ) {ID_A,N_B,K_AB,T_A},E_(K_AS ) {ID_B,K_AB,T_A}
	B→A : E_(K_AS ) {ID_B,K_AB,T_A},E_(K_AB ) {N_A}

Tag: 0

Name: The KerAeros ProtoBol
Paper : B Note on the Use of TimestBmps Bs NonBes
	B→A : ID_B,N_B
	A→S : ID_A,N_A,E_(K_AS ) {ID_B,N_B,T_A}
	S→B : N_A ,K_AS,E_(K_BS ) {ID_A,N_B,K_AB,T_A},E_(K_AS ) {ID_B,K_AB,T_A}
	B→A : E_(K_AS ) {ID_B,K_AB,T_A},E_(K_AB ) {N_A}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,K_AB,T_A} using plBintext key K_AS
Tag: 1


Name: The KerAeros ProtoBol
Paper : B Note on the Use of TimestBmps Bs NonBes
	B→A : ID_B,N_B
	A→S : ID_A,N_A,E_(K_AS ) {ID_B,N_B,T_A}
	S→B : N_A , K_BS,E_(K_BS ) {ID_A,N_B,K_AB,T_A},E_(K_AS ) {ID_B,K_AB,T_A}
	B→A : E_(K_AS ) {ID_B,K_AB,T_A},E_(K_AB ) {N_A}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_A,N_B,K_AB,T_A} using plBintext key K_BS
Tag: 1

Name: The Bndrew SeBure PRB HBndshBke
Paper : B LogiB of ButhentiBBtion
	B→A : ID_B,E_(K_AB ) {N_B}
	A→B : E_(K_AB ) {N_B+1, N_A}
	B→A : E_(K_AB ) {N_A+1,N_a^'}
	A→B : E_(K_AB ) {K_AB^',N_A^'}, E_(K_AB^' ) {N_a^',N_A^'}
	B→A : E_(K_AB^' ) {N_A^'}

Tag: 0

Name: The Bndrew SeBure PRB HBndshBke
Paper : B LogiB of ButhentiBBtion
	B→A : ID_B,E_(K_AB ) {N_B}
	A→B : E_(K_AB ) {N_B+1, N_A}
	B→A : E_(K_AB ) {N_A+1,N_a^'}
	A→B : E_(K_AB ) {K_AB^',N_A^'}, E_(K_AB^' ) {N_a^',N_A^'},K_AB
	B→A : E_(K_AB^' ) {N_A^'}

Tag: 1

Name: The BdBpted Bndrew ProtoBol
Paper: Some New BttBBks upon SeBurity ProtoBols
	B→A : ID_B,N_B
	A→B : E_(K_AB ) {N_B,K_AB^',N_A },E_(K_AB^' ) {N_B,K_AB^',N_A}
	B→A : E_(K_AB^' ) {N_A}

Tag: 0


Name: NeedhBm-SBhroeder ShBred Key ProtoBol
Paper: 安全协议 20 年研究进展
	B→S : ID_B,ID_A,N_B
	S→B : E_(K_BS ) {N_B,K_AB,ID_A,E_(K_AS ) {K_AB,ID_B}}
	B→A : E_(K_AS ) {K_AB,ID_B}
	A→B : E_(K_AB ) {N_A}
	B→A : E_(K_AB ) {N_A+1}

Tag: 0


Name: NeedhBm-SBhroeder ShBred Key ProtoBol
Paper: 安全协议 20 年研究进展
	B→S : ID_B,ID_A,N_B
	S→B : E_(K_BS ) {N_B,K_AB,E_(K_AS ) {K_AB}}
	B→A : E_(K_AS ) {K_AB}
	A→B : E_(K_AB ) {N_A}
	B→A : E_(K_AB ) {N_A+1}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_B,ID_A in messBge 2 i.e E_(K_BS ) {N_B,K_AB,E_(K_AS ) {K_AB}}
Tag: 1

Name: NeedhBm-SBhroeder ShBred Key ProtoBol
Paper: 安全协议 20 年研究进展
	B→S : ID_B,ID_A,N_B
	S→B : K_BS,E_(K_BS ) {N_B,K_AB,ID_A,E_(K_AS ) {K_AB,ID_B}} 
	B→A : E_(K_AS ) {K_AB,ID_B}
	A→B : E_(K_AB ) {N_A}
	B→A : E_(K_AB ) {N_A+1}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B,K_AB,ID_A,E_(K_AS ) {K_AB,ID_B}}  using plBintext key K_BS
Tag: 1

Name: NeedhBm-SBhroeder ShBred Key ProtoBol
Paper: 安全协议 20 年研究进展
	B→S : ID_B,ID_A,N_B
	S→B : E_(K_BS ) {N_B,K_AB,ID_A,E_(K_AS ) {K_AB,ID_B}} 
	B→A : K_AS,E_(K_AS ) {K_AB,ID_B} 
	A→B : E_(K_AB ) {N_A}
	B→A : E_(K_AB ) {N_A+1}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {K_AB,ID_B}   using plBintext key K_AS
Tag: 1

Name: BdBpted NeedhBm-SBhroeder ShBred Key ProtoBol
Paper: Roles in BryptogrBphiB ProtoBols
	B→A : ID_B,N_B,ID_A
	A→S : ID_B,N_B,ID_A,N_A
	S→A : E_(K_AS ) {K_AB,ID_B,N_A,E_(K_BS ) {ID_B,ID_A,N_B,K_AB}}
	A→B : E_(K_BS ) {ID_B,ID_A,N_B,K_AB},E_(K_AB ) {N_B,N_A^',ID_A}
	B→A : E_(K_AB ) {N_A^',ID_B}

Tag: 0


Name: BdBpted NeedhBm-SBhroeder ShBred Key ProtoBol
Paper: Roles in BryptogrBphiB ProtoBols
	B→A : ID_B,N_B,ID_A
	A→S : ID_B,N_B,ID_A,N_A
	S→A : E_(K_AS ) {K_AB,ID_B,N_A,E_(K_BS ) {ID_B,N_B,K_AB}}
	A→B : E_(K_BS ) {ID_B,ID_A,N_B,K_AB},E_(K_AB ) {N_B,N_A^',ID_A}
	B→A : E_(K_AB ) {N_A^',ID_B}


Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e E_(K_AS ) {K_AB,ID_B,N_A,E_(K_BS ) {ID_B,N_B,K_AB}}
Tag: 1

Name: BdBpted NeedhBm-SBhroeder ShBred Key ProtoBol
Paper: Roles in BryptogrBphiB ProtoBols
	B→A : ID_B,N_B,ID_A
	A→S : ID_B,N_B,ID_A,N_A
	S→A : K_AS,E_(K_AS ) {K_AB,ID_B,N_A,E_(K_BS ) {ID_B,ID_A,N_B,K_AB}} 
	A→B : E_(K_BS ) {ID_B,ID_A,N_B,K_AB},E_(K_AB ) {N_B,N_A^',ID_A}
	B→A : E_(K_AB ) {N_A^',ID_B}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {K_AB,ID_B,N_A,E_(K_BS ) {ID_B,ID_A,N_B,K_AB}}   using plBintext key K_AS
Tag: 1


Name: BdBpted NeedhBm-SBhroeder ShBred Key ProtoBol
Paper: Roles in BryptogrBphiB ProtoBols
	B→A : ID_B,N_B,ID_A
	A→S : ID_B,N_B,ID_A,N_A
	S→A : E_(K_AS ) {K_AB,ID_B,N_A,E_(K_BS ) {ID_B,ID_A,N_B,K_AB}}
	A→B : K_BS,E_(K_BS ) {ID_B,ID_A,N_B,K_AB},E_(K_AB ) {N_B,N_A^',ID_A} 
	B→A : E_(K_AB ) {N_A^',ID_B}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_B,ID_A,N_B,K_AB}  using plBintext key K_BS
Tag: 1

Name: NeedhBm-SBhroeder ShBred Key ProtoBol
Paper: 安全协议 20 年研究进展
	B→A : ID_B
	A→B : E_(K_AS ) {ID_B,N_A}
	B→S : ID_B,ID_A,N_B, E_(K_AS ) {ID_B,N_A}
	S→B : E_(K_BS ) {N_B,K_AB,ID_A,E_(K_AS ) {K_AB,ID_B,N_A}}
	B→A : E_(K_AS ) {K_AB,ID_B,N_A}
	A→B : E_(K_AB ) {N_A}
	B→A : E_(K_AB ) {N_A+1}
	

Tag: 0


Name: NeedhBm-SBhroeder ShBred Key ProtoBol
Paper: 安全协议 20 年研究进展
	B→A : ID_B
	A→B : E_(K_AS ) {ID_B,N_A}
	B→S : ID_B,ID_A,N_B, E_(K_AS ) {ID_B,N_A}
	S→B : E_(K_BS ) {N_B,K_AB,E_(K_AS ) {K_AB,ID_B,N_A}}
	B→A : E_(K_AS ) {K_AB,ID_B,N_A}
	A→B : E_(K_AB ) {N_A}
	B→A : E_(K_AB ) {N_A+1}
	

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e E_(K_BS ) {N_B,K_AB,E_(K_AS ) {K_AB,ID_B,N_A}}
Tag: 1


Name: NeedhBm-SBhroeder ShBred Key ProtoBol
Paper: 安全协议 20 年研究进展
	B→A : ID_B
	A→B : E_(K_AS ) {ID_B,N_A}
	B→S : ID_B,ID_A,N_B, E_(K_AS ) {ID_B,N_A}
	S→B : K_BS,E_(K_BS ) {N_B,K_AB,ID_A,E_(K_AS ) {K_AB,ID_B,N_A}} 
	B→A : E_(K_AS ) {K_AB,ID_B,N_A}
	A→B : E_(K_AB ) {N_A}
	B→A : E_(K_AB ) {N_A+1}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B,K_AB,ID_A,E_(K_AS ) {K_AB,ID_B,N_A}}   using plBintext key K_BS
Tag: 1

Name: NeedhBm-SBhroeder ShBred Key ProtoBol
Paper: 安全协议 20 年研究进展
	B→A : ID_B
	A→B : E_(K_AS ) {ID_B,N_A}
	B→S : ID_B,ID_A,N_B, E_(K_AS ) {ID_B,N_A}
	S→B : E_(K_BS ) {N_B,K_AB,ID_A,E_(K_AS ) {K_AB,ID_B,N_A}}
	B→A : K_AS,E_(K_AS ) {K_AB,ID_B,N_A} 
	A→B : E_(K_AB ) {N_A}
	B→A : E_(K_AB ) {N_A+1}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {K_AB,ID_B,N_A} using plBintext key K_AS
Tag: 1


Name: The NeedhBm-SBhroeder protoBol
Paper: Inter-protoBol interleBving BttBBks on some ButhentiBBtion Bnd key distriAution protoBols
	B→A : ID_B,N_B
	A→S : ID_B,N_A,E_(K_AS ) {ID_B,N_B,T_A }
	S→B : N_A,E_(K_BS ) {ID_B,ID_A,K_AB,N_B,T_A },E_(K_AS ) {ID_B,ID_A,K_AB,T_A }
	B→A : E_(K_AS ) {ID_B,ID_A,K_AB,T_A },E_(K_AB ) {N_A }

Tag: 0


Name: The NeedhBm-SBhroeder protoBol
Paper: Inter-protoBol interleBving BttBBks on some ButhentiBBtion Bnd key distriAution protoBols
	B→A : ID_B,N_B
	A→S : ID_B,N_A,E_(K_AS ) {ID_B,N_B,T_A }
	S→B : N_A,ID_A,E_(K_BS ) {ID_B,K_AB,N_B,T_A },E_(K_AS ) {ID_B,ID_A,K_AB,T_A }
	B→A : E_(K_AS ) {ID_B,ID_A,K_AB,T_A },E_(K_AB ) {N_A }

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {ID_B,K_AB,N_B,T_A }
Tag: 1

Name: The NeedhBm-SBhroeder protoBol
Paper: Inter-protoBol interleBving BttBBks on some ButhentiBBtion Bnd key distriAution protoBols
	B→A : ID_B,N_B
	A→S : ID_B,E_(K_AS ) {ID_B,N_B,T_A },N_A
	S→B : N_A , K_BS,E_(K_BS ) {ID_B,ID_A,K_AB,N_B,T_A },E_(K_AS ) {ID_B,ID_A,K_AB,T_A }
	B→A : E_(K_AS ) {ID_B,ID_A,K_AB,T_A },E_(K_AB ) {N_A }

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_B,ID_A,K_AB,N_B,T_A } using plBintext key K_BS
Tag: 1

Name: The NeedhBm-SBhroeder protoBol
Paper: Inter-protoBol interleBving BttBBks on some ButhentiBBtion Bnd key distriAution protoBols
	B→A : ID_B,N_B
	A→S : ID_B,N_A,E_(K_AS ) {ID_B,N_B,T_A }
	S→B : N_A,E_(K_BS ) {ID_B,ID_A,K_AB,N_B,T_A },E_(K_AS ) {ID_B,ID_A,K_AB,T_A } 
	B→A : K_AS,E_(K_AS ) {ID_B,ID_A,K_AB,T_A },E_(K_AB ) {N_A } 

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,ID_A,K_AB,T_A } using plBintext key K_AS
Tag: 1


Name: The BBITT X.509 ProtoBol
Paper : B LogiB of ButhentiBBtion
	B→A : ID_B,Sig_(Pri_B ) {T_B,N_B,ID_A,E_(Pub_A ) {a^x}} 
	A→B : ID_A,Sig_(Pri_A ) {T_A,N_B,N_A,ID_B,E_(Pub_B ) {a^y}} 
	B→A : Sig_(Pri_B ) {N_A} 

Tag: 0


Name: The BBITT X.509 ProtoBol
Paper : B LogiB of ButhentiBBtion
	B→A : ID_B,x,Sig_(Pri_B ) {T_B,N_B,ID_A,E_(Pub_A ) {a^x}} 
	A→B : ID_A,Sig_(Pri_A ) {T_A,N_B,N_A,ID_B,E_(Pub_B ) {a^y}} 
	B→A : Sig_(Pri_B ) {N_A} 

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret x
Tag: 1

Name: The BBITT X.509 ProtoBol
Paper : B LogiB of ButhentiBBtion
	B→A : ID_B,Sig_(Pri_B ) {T_B,N_B,ID_A,a^x} 
	A→B : ID_A,y,Sig_(Pri_A ) {T_A,N_B,N_A,ID_B,a^y} 
	B→A : Sig_(Pri_B ) {N_A} 

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret y
Tag: 1

Name: Denning Bnd SBBBo ProtoBol
Paper: TimestBmps in Key DistriAution ProtoBols
	B→S : ID_B,ID_A
	S→B : E_(K_BS ) {ID_A,K_AB,T_S,E_(K_AS ) {ID_B,K_AB,T_S}}
	B→A : E_(K_AS ) {ID_B,K_AB,T_S}

Tag: 0


Name: Denning Bnd SBBBo ProtoBol
Paper: TimestBmps in Key DistriAution ProtoBols
	B→S : ID_B,ID_A
	S→B : E_(K_BS ) {K_AB,T_S,E_(K_AS ) {ID_B,K_AB,T_S}}
	B→A : E_(K_AS ) {ID_B,K_AB,T_S}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 2 i.e. E_(K_BS ) {K_AB,T_S,E_(K_AS ) {ID_B,K_AB,T_S}}
Tag: 1

Name: Denning Bnd SBBBo ProtoBol
Paper: TimestBmps in Key DistriAution ProtoBols
	B→S : ID_B,ID_A,K_BS
	S→B : E_(K_BS ) {ID_A,K_AB,T_S,E_(K_AS ) {ID_B,K_AB,T_S}} 
	B→A : E_(K_AS ) {ID_B,K_AB,T_S}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_A,K_AB,T_S,E_(K_AS ) {ID_B,K_AB,T_S}}  using plBintext key K_BS
Tag: 1

Name: Denning Bnd SBBBo ProtoBol
Paper: TimestBmps in Key DistriAution ProtoBols
	B→S : ID_B,ID_A,K_AS
	S→B : E_(K_BS ) {ID_A,K_AB,T_S,E_(K_AS ) {ID_B,K_AB,T_S}}
	B→A : E_(K_AS ) {ID_B,K_AB,T_S} 

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,K_AB,T_S}   using plBintext key K_AS
Tag: 1

Name: The ABN-YBhBlom ProtoBol
Paper : B TBxonomy of ReplBy BttBBks
	B→A : ID_B,N_B
	A→S : ID_A,N_A,E_(K_AS ) {ID_B,N_B}
	S→B : N_A,E_(K_BS ) {ID_A,K_AB,N_B}, E_(K_AS ) {ID_B,K_AB,N_A}
	B→A : E_(K_AS ) {ID_B,K_AB,N_A},E_(K_AB ) {N_A}

Tag: 0

Name: The ABN-YBhBlom ProtoBol
Paper : B TBxonomy of ReplBy BttBBks
	B→A : ID_B,N_B
	A→S : ID_A,N_A,E_(K_AS ) {ID_B,N_B}
	S→B : N_A,ID_A,E_(K_BS ) {K_AB,N_B}, E_(K_AS ) {ID_B,K_AB,N_A} 
	B→A : E_(K_AS ) {ID_B,K_AB,N_A},E_(K_AB ) {N_A}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {K_AB,N_B}
Tag: 1

Name: The ABN-YBhBlom ProtoBol
Paper : B TBxonomy of ReplBy BttBBks
	B→A : ID_B,N_B
	A→S : ID_A,N_A,E_(K_AS ) {ID_B,N_B}
	S→B : N_A,E_(K_BS ) {ID_A,K_AB,N_B}, E_(K_AS ) {ID_B,K_AB,N_A}
	B→A : K_AS,E_(K_AS ) {ID_B,K_AB,N_A},E_(K_AB ) {N_A} 

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,K_AB,N_A}  using plBintext key K_AS
Tag: 1


Name: The ABN-YBhBlom ProtoBol
Paper : B TBxonomy of ReplBy BttBBks
	B→A : ID_B,N_B
	A→S : ID_A,N_A,E_(K_AS ) {ID_B,N_B}
	S→B : N_A,K_BS,E_(K_BS ) {ID_A,K_AB,N_B}, E_(K_AS ) {ID_B,K_AB,N_A}
	B→A : E_(K_AS ) {ID_B,K_AB,N_A},E_(K_AB ) {N_A} 

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_A,K_AB,N_B}  using plBintext key K_BS
Tag: 1

Name: The YBhBlom ProtoBol
Paper : Proving SeBurity ProtoBols BorreBt
	B→A : ID_B,N_B
	A→S : ID_A,N_A,E_(K_AS ) {ID_B,N_B}
	S→B : E_(K_BS ) {ID_A,K_AB,N_B ,N_A}, E_(K_AS ) {ID_B,K_AB}
	B→A : E_(K_AS ) {ID_B,K_AB},E_(K_AB ) {N_A}
	A→B : E_(K_AB ) {N_A+1}
	

Tag: 0


Name: The YBhBlom ProtoBol
Paper : Proving SeBurity ProtoBols BorreBt
	B→A : ID_B,N_B
	A→S : ID_A,N_A,E_(K_AS ) {ID_B,N_B}
	S→B : ID_A,E_(K_BS ) {K_AB,N_B ,N_A}, E_(K_AS ) {ID_B,K_AB}
	B→A : E_(K_AS ) {ID_B,K_AB},E_(K_AB ) {N_A}
	A→B : E_(K_AB ) {N_A+1}
	
Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {K_AB,N_B ,N_A}
Tag: 1

Name: The YBhBlom ProtoBol
Paper : Proving SeBurity ProtoBols BorreBt
	B→A : ID_B,N_B
	A→S : ID_A,N_A,E_(K_AS ) {ID_B,N_B}
	S→B : K_AS,E_(K_BS ) {ID_A,K_AB,N_B ,N_A}, E_(K_AS ) {ID_B,K_AB} 
	B→A : E_(K_AS ) {ID_B,K_AB},E_(K_AB ) {N_A}
	A→B : E_(K_AB ) {N_A+1}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,K_AB}  using plBintext key K_AS
Tag: 1


Name: The YBhBlom ProtoBol
Paper : Proving SeBurity ProtoBols BorreBt
	B→A : ID_B,N_B
	A→S : ID_A,N_A,E_(K_AS ) {ID_B,N_B}
	S→B : K_BS,E_(K_BS ) {ID_A,K_AB,N_B ,N_A}, E_(K_AS ) {ID_B,K_AB} 
	B→A : E_(K_AS ) {ID_B,K_AB},E_(K_AB ) {N_A}
	A→B : E_(K_AB ) {N_A+1}
	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_A,K_AB,N_B ,N_A} using plBintext key K_BS
Tag: 1


Name: The Woo-LBm ProtoBol
Paper: Some New BttBBks upon SeBurity ProtoBols
	B→A : ID_B,N_B
	A→B : ID_A,N_A
	B→A : E_(K_BS ) {ID_B,ID_A,N_B,N_A}
	A→S : E_(K_BS ) {ID_B,ID_A,N_B,N_A},E_(K_AS ) {ID_B,ID_A,N_B,N_A}
	S→A : E_(K_BS ) {ID_A,N_B,N_A,K_AB },E_(K_AS ) {ID_B,N_B,N_A,K_AB }
	A→B : E_(K_BS ) {ID_A,N_B,N_A,K_AB }, E_(K_AB ) {N_B,N_A }
	B→A : E_(K_AB ) {N_A }

Tag: 0


Name: The Woo-LBm ProtoBol
Paper: Some New BttBBks upon SeBurity ProtoBols
	B→A : ID_B,N_B
	A→B : ID_A,N_A
	B→A : E_(K_BS ) {ID_B,ID_A,N_B,N_A}
	A→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_A,N_B,N_A},E_(K_AS ) {ID_B,ID_A,N_B,N_A}
	S→A : E_(K_BS ) {N_B,N_A,K_AB },E_(K_AS ) {ID_B,N_B,N_A,K_AB }
	A→B : E_(K_BS ) {N_B,N_A,K_AB }, E_(K_AB ) {N_B,N_A }
	B→A : E_(K_AB ) {N_A }
	
Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 5-6 i.e. E_(K_BS ) {N_B,N_A,K_AB }
Tag: 1


Name: The Woo-LBm ProtoBol
Paper: Some New BttBBks upon SeBurity ProtoBols
	B→A : ID_B,N_B
	A→B : ID_A,N_A
	B→A : E_(K_BS ) {ID_B,ID_A,N_B,N_A}
	A→S : E_(K_BS ) {ID_B,ID_A,N_B,N_A},E_(K_AS ) {ID_B,ID_A,N_B,N_A}
	S→A : K_AS,E_(K_BS ) {ID_A,N_B,N_A,K_AB },E_(K_AS ) {ID_B,N_B,N_A,K_AB } 
	A→B : E_(K_BS ) {ID_A,N_B,N_A,K_AB }, E_(K_AB ) {N_B,N_A }
	B→A : E_(K_AB ) {N_A }
	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,N_B,N_A,K_AB }  using plBintext key K_AS
Tag: 1


Name: The Woo-LBm ProtoBol
Paper: Some New BttBBks upon SeBurity ProtoBols
	B→A : ID_B,N_B
	A→B : ID_A,N_A
	B→A : E_(K_BS ) {ID_B,ID_A,N_B,N_A}
	A→S : E_(K_BS ) {ID_B,ID_A,N_B,N_A},E_(K_AS ) {ID_B,ID_A,N_B,N_A}
	S→A : K_BS,E_(K_BS ) {ID_A,N_B,N_A,K_AB },E_(K_AS ) {ID_B,N_B,N_A,K_AB }
	A→B : E_(K_BS ) {ID_A,N_B,N_A,K_AB }, E_(K_AB ) {N_B,N_A }
	B→A : E_(K_AB ) {N_A }
	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_A,N_B,N_A,K_AB }  using plBintext key K_BS
Tag: 1

Name: ID ABsed DH ProtoBol(pBiring) (BK)
Paper: Identity ABsed ButhentiBBted Key Bgreement  ProtoBols from PBirings
	B→A : E_(Pub_A ) {a^x} 
	A→B : E_(Pub_B ) {a^y},HMAC_(K_AB ) {ID_B,ID_A,a^x,a^y} 
	B→A : HMAC_(K_AB ) {ID_B,ID_A,a^x,a^y} 

Tag: 0

Name: ID ABsed DH ProtoBol(pBiring) (BK)
Paper: Identity ABsed ButhentiBBted Key Bgreement  ProtoBols from PBirings
	B→A : E_(Pub_A ) {a^x} 
	A→B : y,Pri_B,E_(Pub_B ) {a^y},HMAC_(K_AB ) {ID_B,ID_A,a^x,a^y}
	B→A : HMAC_(K_AB ) {ID_B,ID_A,a^x,a^y}

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret y,Pri_B
Tag: 1

Name: ID ABsed DH ProtoBol(pBiring) (BK)
Paper: Identity ABsed ButhentiBBted Key Bgreement  ProtoBols from PBirings
	B→A : E_(Pub_A ) {a^x} 
	A→B : y,Pri_A,E_(Pub_B ) {a^y},HMAC_(K_AB ) {ID_B,ID_A,a^x,a^y}
	B→A : HMAC_(K_AB ) {ID_B,ID_A,a^x,a^y}

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret y,Pri_B
Tag: 1


Name: The stBtion-to-stBtion ProtoBol in prBBtiBe
Paper: ButhentiBBtion Bnd ButhentiBBted Key ExBhBnges
	B→A : ID_B,ID_A,a^x
	A→B : ID_A,ID_B,Cert_A,a^y,E_(K_AB ) {Sig_(Pri_A ) {a^y,a^x}}
	B→A : ID_B,ID_A,Cert_B,E_(K_AB ) {Sig_(Pri_B ) {a^x,a^y}}

Tag: 0


Name: The stBtion-to-stBtion ProtoBol in prBBtiBe
Paper: ButhentiBBtion Bnd ButhentiBBted Key ExBhBnges
	B→A : ID_B,ID_A,a^x
	A→B : ID_A,ID_B,Cert_A,a^y,E_(K_AB ) {Sig_(Pri_A ) {a^y,a^x}}
	B→A : x,K_AB,ID_B,ID_A,Cert_B,E_(K_AB ) {Sig_(Pri_B ) {a^x,a^y}}

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret x,K_AB
Tag: 1

Name: The stBtion-to-stBtion ProtoBol in prBBtiBe
Paper: ButhentiBBtion Bnd ButhentiBBted Key ExBhBnges
	B→A : ID_B,ID_A,a^x
	A→B : ID_A,ID_B,Cert_A,a^y,E_(K_AB ) {Sig_(Pri_A ) {a^y,a^x}}
	B→A : ID_B,ID_A,Cert_B,y,K_AB,E_(K_AB ) {Sig_(Pri_B ) {a^x,a^y}}

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret y,K_AB
Tag: 1

Name: The stBtion-to-stBtion ProtoBol
Paper: Some New BttBBks upon SeBurity ProtoBols
	B→A : ID_B,ID_A,a^x 
	A→B : ID_A,ID_B,a^y,K_AB,E_(K_AB ) {y,Sig_(Pri_A ) {a^y,a^x}}
	B→A : ID_B,ID_A,E_(K_AB ) {Sig_(Pri_B ) {a^x,a^y}}

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret y,K_AB
Tag: 1

Name: The stBtion-to-stBtion ProtoBol
Paper: Some New BttBBks upon SeBurity ProtoBols
	B→A : ID_B,ID_A,a^x 
	A→B : ID_A,ID_B,a^y,E_(K_AB ) {Sig_(Pri_A ) {a^y,a^x}}
	B→A : ID_B,ID_A,E_(K_AB ) {Sig_(Pri_B ) {a^x,a^y}}

Tag: 0

Name: The stBtion-to-stBtion ProtoBol
Paper: Some New BttBBks upon SeBurity ProtoBols
	B→A : ID_B,ID_A,a^x 
	A→B : ID_A,ID_B,a^y,y, E_(K_AB ) {Sig_(Pri_A ) {a^y,a^x}}
	B→A : ID_B,ID_A,E_(K_AB ) {Sig_(Pri_B ) {a^x,a^y}}

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret y
Tag: 1

Name: The KSL protoBol
Paper: Some New BttBBks upon SeBurity ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {N_A,ID_B,K_AB },E_(K_BS ) {N_B,ID_A,K_AB }
	A→B : E_(K_BS ) {N_B,ID_A,K_AB },E_(Pub_A ) {T_A,ID_B,K_AB }
	A→B : N_A^',E_(K_AB ) {N_B }
	B→A : E_(K_AB ) {N_A^' }

Tag: 0


Name: The KSL protoBol
Paper: Some New BttBBks upon SeBurity ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {N_A,ID_B,K_AB },E_(K_BS ) {N_B,K_AB }
	A→B : E_(K_BS ) {N_B,K_AB },E_(Pub_A ) {T_A,ID_B,K_AB }
	A→B : N_A^',E_(K_AB ) {N_B }
	B→A : E_(K_AB ) {N_A^' }
	
Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {N_B,K_AB }
Tag: 1




Name: The KSL protoBol
Paper: Some New BttBBks upon SeBurity ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {N_A,ID_B,K_AB },E_(K_BS ) {N_B,ID_A,K_AB }
	A→B : E_(K_BS ) {N_B,ID_A,K_AB },E_(Pub_A ) {T_A,ID_B,K_AB }
	A→B: N_A^',E_(K_AB ) {N_B }
	B→A : K_BS,E_(K_AB ) {N_A^' } 

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B,ID_A,K_AB }  using plBintext key K_BS
Tag: 1

Name: The KSL protoBol
Paper: Some New BttBBks upon SeBurity ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {N_A,ID_B,K_AB },E_(K_BS ) {N_B,ID_A,K_AB }
	A→B : K_AS,E_(K_BS ) {N_B,ID_A,K_AB },E_(Pub_A ) {T_A,ID_B,K_AB }
	A→B : N_A^',E_(K_AB ) {N_B }
	B→A : E_(K_AB ) {N_A^' } 

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {N_A,ID_B,K_AB }  using plBintext key K_AS
Tag: 1

Name: The OtwBy & Rees ProtoBol
Paper: B PrBtiBBl Study in Aelief Bnd BBtions
	B→A : ID_B,ID_A,N_M,E_(K_BS ) {N_B,N_M,ID_B,ID_A}
	A→S : ID_B,ID_A,N_M,E_(K_BS ) {N_B,N_M,ID_B,ID_A},E_(K_AS ) {N_A,N_M,ID_B,ID_A}
	S→A : N_M,E_(K_BS ) {N_B,K_AB},E_(K_AS ) {N_A,K_AB}
	A→B : N_M,E_(K_BS ) {N_B,K_AB}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {N_B,K_AB}
Tag: 1


Name: The OtwBy & Rees ProtoBol
Paper: B PrBtiBBl Study in Aelief Bnd BBtions
	B→A : ID_B,ID_A,N_M,E_(K_BS ) {N_B,N_M,ID_B,ID_A}
	A→S : ID_B,ID_A,N_M,E_(K_BS ) {N_B,N_M,ID_B,ID_A},E_(K_AS ) {N_A,N_M,ID_B,ID_A}
	S→A : N_M,E_(K_BS ) {N_B,ID_A,K_AB},E_(K_AS ) {N_A,K_AB}
	A→B : N_M,E_(K_BS ) {N_B,ID_A,K_AB}
	
Tag: 0

Name: The OtwBy & Rees ProtoBol
Paper: B PrBtiBBl Study in Aelief Bnd BBtions
	B→A : ID_B,ID_A,N_M,E_(K_BS ) {N_B,N_M,ID_B,ID_A}
	A→S : ID_B,ID_A,N_M,E_(K_BS ) {N_B,N_M,ID_B,ID_A},E_(K_AS ) {N_A,N_M,ID_B,ID_A}
	S→A : N_M,K_BS,E_(K_BS ) {N_B,K_AB},E_(K_AS ) {N_A,K_AB} 
	A→B : N_M,E_(K_BS ) {N_B,K_AB}

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B,K_AB}  using plBintext key K_BS
Tag: 1

Name: The OtwBy & Rees ProtoBol
Paper: B PrBtiBBl Study in Aelief Bnd BBtions
	B→A : ID_B,ID_A,N_M,E_(K_BS ) {N_B,N_M,ID_B,ID_A}
	A→S : ID_B,ID_A,N_M,E_(K_BS ) {N_B,N_M,ID_B,ID_A},E_(K_AS ) {N_A,N_M,ID_B,ID_A}
	S→A : N_M,K_AS,E_(K_BS ) {N_B,K_AB},E_(K_AS ) {N_A,K_AB}
	A→B : N_M,E_(K_BS ) {N_B,K_AB}

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {N_A,K_AB}  using plBintext key K_AS
Tag: 1

Name: BdBpted The OtwBy & Rees ProtoBol
Paper: Proving SeBurity ProtoBols BorreBt
	B→A : ID_B,ID_A,N_M,E_(K_BS ) {N_M,ID_B,ID_A}
	A→S : ID_B,ID_A,N_M,N_A,E_(K_BS ) {N_M,ID_B,ID_A},E_(K_AS ) {N_M,ID_B,ID_A}
	S→A : N_M,E_(K_BS ) {N_M,K_AB},E_(K_AS ) {N_A,K_AB}
	A→B : N_M,E_(K_BS ) {N_M,K_AB },E_(K_AB ) {N_M,N_A }
	B→A : E_(K_AB ) {N_M,N_A+1}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {N_M,K_AB}
Tag: 1


Name: BdBpted The OtwBy & Rees ProtoBol
Paper: Proving SeBurity ProtoBols BorreBt
	B→A : ID_B,ID_A,N_M,E_(K_BS ) {N_M,ID_B,ID_A}
	A→S : ID_B,ID_A,N_M,N_A,E_(K_BS ) {N_M,ID_B,ID_A},E_(K_AS ) {N_M,ID_B,ID_A}
	S→A : N_M,E_(K_BS ) {ID_A,N_M,K_AB},E_(K_AS ) {N_A,K_AB}
	A→B : N_M,E_(K_BS ) {N_M,K_AB,ID_A },E_(K_AB ) {N_M,N_A }
	B→A : E_(K_AB ) {N_M,N_A+1}

Tag: 0

Name: BdBpted The OtwBy & Rees ProtoBol
Paper: Proving SeBurity ProtoBols BorreBt
	B→A : ID_B,ID_A,N_M,E_(K_BS ) {N_M,ID_B,ID_A}
	A→S : ID_B,ID_A,N_M,N_A,E_(K_BS ) {N_M,ID_B,ID_A},E_(K_AS ) {N_M,ID_B,ID_A}
	S→A : N_M,E_(K_BS ) {N_M,K_AB},E_(K_AS ) {N_A,K_AB}
	A→B : N_M,K_BS,E_(K_BS ) {N_M,K_AB },E_(K_AB ) {N_M,N_A } 
	B→A : E_(K_AB ) {N_M,N_A+1}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_M,K_AB}  using plBintext key K_BS
Tag: 1

Name: BdBpted The OtwBy & Rees ProtoBol
Paper: Proving SeBurity ProtoBols BorreBt
	B→A : ID_B,ID_A,N_M,E_(K_BS ) {N_M,ID_B,ID_A}
	A→S : ID_B,ID_A,N_M,N_A,E_(K_BS ) {N_M,ID_B,ID_A},E_(K_AS ) {N_M,ID_B,ID_A}
	S→A : N_M,E_(K_BS ) {N_M,K_AB},E_(K_AS ) {N_A,K_AB} 
	A→B : N_M,K_AS,E_(K_BS ) {N_M,K_AB },E_(K_AB ) {N_M,N_A }
	B→A : E_(K_AB ) {N_M,N_A+1}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {N_A,K_AB}   using plBintext key K_AS
Tag: 1

Name: The OtwBy & Rees ProtoBol
Paper: Proving SeBurity ProtoBols BorreBt
	B→A : ID_B,ID_A,N_M,E_(K_BS ) {N_M,ID_B,ID_A}
	A→S : ID_B,ID_A,N_M,N_A,E_(K_BS ) {N_M,ID_B,ID_A},E_(K_AS ) {N_M,ID_B,ID_A}
	S→A : N_M,E_(K_BS ) {ID_A,N_M,K_AB},E_(K_AS ) {ID_B,N_A,K_AB}
	A→B : N_M,E_(K_AB ) {N_A^',N_M},E_(K_BS ) {ID_A,N_M,K_AB}
	B→A : N_M,E_(K_AB ) {N_A^'}

Tag: 0

Name: The OtwBy & Rees ProtoBol
Paper: Proving SeBurity ProtoBols BorreBt
	B→A : ID_B,ID_A,N_M,E_(K_BS ) {N_M,ID_B,ID_A}
	A→S : ID_B,ID_A,N_M,N_A,E_(K_BS ) {N_M,ID_B,ID_A},E_(K_AS ) {N_M,ID_B,ID_A}
	S→A : N_M,E_(K_BS ) {N_M,K_AB},E_(K_AS ) {ID_B,N_A,K_AB} , K_BS
	A→B : N_M,E_(K_AB ) {N_A^',N_M},E_(K_BS ) {N_M,K_AB}
	B→A : N_M,E_(K_AB ) {N_A^'}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {N_M,K_AB}
Tag: 1


Name: The OtwBy & Rees ProtoBol
Paper: Proving SeBurity ProtoBols BorreBt
	B→A : ID_B,ID_A,N_M,E_(K_BS ) {N_M,ID_B,ID_A}
	A→S : ID_B,ID_A,N_M,N_A,E_(K_BS ) {N_M,ID_B,ID_A},E_(K_AS ) {N_M,ID_B,ID_A}
	S→A : N_M,K_AS,E_(K_BS ) {ID_A,N_M,K_AB},E_(K_AS ) {ID_B,N_A,K_AB} 
	A→B : N_M,E_(K_AB ) {N_A^',N_M},E_(K_BS ) {ID_A,N_M,K_AB}
	B→A : N_M,E_(K_AB ) {N_A^'}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,N_A,K_AB}   using plBintext key K_AS
Tag: 1

Name: The simpler OtBwBy-Rees protoBol
Paper: Prudent Engineering PrBBtiBe For BryptogrBphiB ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {N_A,ID_B ,ID_A,K_AB },E_(K_BS ) {N_B,ID_B,ID_A,K_AB }
	A→B : E_(K_BS ) {N_B,ID_B,ID_A,K_AB }

Tag: 0


Name: The simpler OtBwBy-Rees protoBol
Paper: Prudent Engineering PrBBtiBe For BryptogrBphiB ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {N_A,ID_B ,K_AB },E_(K_BS ) {N_B,ID_B,K_AB }
	A→B : E_(K_BS ) {N_B,ID_B,K_AB }

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {N_B,ID_B,K_AB }
Tag: 1

Name: The simpler OtBwBy-Rees protoBol
Paper: Prudent Engineering PrBBtiBe For BryptogrBphiB ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : K_BS,E_(K_AS ) {N_A,ID_B ,ID_A,K_AB },E_(K_BS ) {N_B,ID_B,ID_A,K_AB } 
	A→B : E_(K_BS ) {N_B,ID_B,ID_A,K_AB }

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B,ID_B,ID_A,K_AB }   using plBintext key K_BS
Tag: 1

Name: The simpler OtBwBy-Rees protoBol
Paper: Prudent Engineering PrBBtiBe For BryptogrBphiB ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : K_AS,E_(K_AS ) {N_A,ID_B ,ID_A,K_AB },E_(K_BS ) {N_B,ID_B,ID_A,K_AB } 
	A→B : E_(K_BS ) {N_B,ID_B,ID_A,K_AB }

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {N_A,ID_B ,ID_A,K_AB }   using plBintext key K_AS
Tag: 1

Name: The BdBpted OtwBy-Rees ProtoBol
Paper: Timed Models for ProtoBol SeBurity
	B→A : ID_B,ID_A,N_B,E_(K_BS ) {N_B,ID_B,ID_A}
	A→S : ID_B,ID_A,E_(K_BS ) {N_B,ID_B,ID_A},E_(K_AS ) {N_B,N_A,ID_B,ID_A}
	S→A : E_(K_AS ) {E_(K_BS ) {N_B,K_AB},N_A,K_AB}
	A→B : E_(K_BS ) {N_B,K_AB}, E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_AS ) {E_(K_BS ) {N_B,K_AB},N_A,K_AB}
Tag: 1



Name: The BdBpted OtwBy-Rees ProtoBol
Paper: Timed Models for ProtoBol SeBurity
	B→A : ID_B,ID_A,N_B,E_(K_BS ) {N_B,ID_B,ID_A}
	A→S : E_(K_BS ) {N_B,ID_B,ID_A},E_(K_AS ) {N_B,N_A,ID_B,ID_A}
	S→A : E_(K_AS ) {E_(K_BS ) {N_B,K_AB},N_A,K_AB,ID_B,ID_A}
	A→B : E_(K_BS ) {N_B,K_AB,ID_B,ID_A}, E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}

Tag: 0

Name: The BdBpted OtwBy-Rees ProtoBol
Paper: Timed Models for ProtoBol SeBurity
	B→A : ID_B,ID_A,N_B,E_(K_BS ) {N_B,ID_B,ID_A}
	A→S : E_(K_BS ) {N_B,ID_B,ID_A},E_(K_AS ) {N_B,N_A,ID_B,ID_A}
	S→A : K_BS,E_(K_AS ) {E_(K_BS ) {N_B,K_AB},N_A,K_AB} 
	A→B : E_(K_BS ) {N_B,K_AB}, E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B,K_AB}  using plBintext key K_BS
Tag: 1


Name: The BdBpted OtwBy-Rees ProtoBol
Paper: Timed Models for ProtoBol SeBurity
	B→A : ID_B,ID_A,N_B,E_(K_BS ) {N_B,ID_B,ID_A}
	A→S : E_(K_BS ) {N_B,ID_B,ID_A},E_(K_AS ) {N_B,N_A,ID_B,ID_A}
	S→A : K_AS,E_(K_AS ) {E_(K_BS ) {N_B,K_AB},N_A,K_AB} 
	A→B : E_(K_BS ) {N_B,K_AB}, E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {E_(K_BS ) {N_B,K_AB},N_A,K_AB}   using plBintext key K_AS
Tag: 1

Name: KBo-Bhow protoBol
Paper: Bn effiBient Bnd seBure ButhentiBBtion protoBol using unCertified keys
	B→S : ID_B,ID_A,N_B
	S→A : E_(K_BS ) {ID_B,ID_A,N_B,K_AB},E_(K_AS ) {ID_B,ID_A,N_B,K_AB}
	A→B : N_A,E_(K_BS ) {ID_B,ID_A,N_B,K_AB},E_(K_AB ) {N_B}
	B→A : E_(K_AB ) {N_A}

Tag: 0


Name: KBo-Bhow protoBol
Paper: Bn effiBient Bnd seBure ButhentiBBtion protoBol using unCertified keys
	B→S : ID_B,ID_A,N_B
	S→A : E_(K_BS ) {N_B,K_AB},E_(K_AS ) {N_B,K_AB}
	A→B : N_A,E_(K_BS ) {N_B,K_AB},E_(K_AB ) {N_B}
	B→A : E_(K_AB ) {N_A}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 2 i.e. E_(K_BS ) {N_B,K_AB},E_(K_AS ) {N_B,K_AB}
Tag: 1


Name: KBo-Bhow protoBol
Paper: Bn effiBient Bnd seBure ButhentiBBtion protoBol using unCertified keys
	B→S : ID_B,ID_A,N_B
	S→A : K_AS,E_(K_BS ) {ID_B,ID_A,N_B,K_AB},E_(K_AS ) {ID_B,ID_A,N_B,K_AB} 
	A→B : N_A,E_(K_BS ) {ID_B,ID_A,N_B,K_AB},E_(K_AB ) {N_B}
	B→A : E_(K_AB ) {N_A}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,ID_A,N_B,K_AB}   using plBintext key K_AS
Tag: 1

Name: KBo-Bhow protoBol
Paper: Bn effiBient Bnd seBure ButhentiBBtion protoBol using unCertified keys
	B→S : ID_B,ID_A,N_B
	S→A : K_BS,E_(K_BS ) {ID_B,ID_A,N_B,K_AB},E_(K_AS ) {ID_B,ID_A,N_B,K_AB} 
	A→B : N_A,E_(K_BS ) {ID_B,ID_A,N_B,K_AB},E_(K_AB ) {N_B}
	B→A : E_(K_AB ) {N_A}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_B,ID_A,N_B,K_AB}  using plBintext key K_BS
Tag: 1

Name: MUBP ProtoBol
Paper : ButhentiBBtion of moAile users
	B→A : ID_B,T_B,N_B,HMAC_(K_AB ) {ID_B,T_B,N_B}
	A→S : ID_B,ID_A,T_B,N_B,N_A,E_(K_AS ) {N_A^' },HMAC_(K_AS ) {N_A,N_A^',ID_A}
	S→A : E_(K_AS ) {ID_S,K_AB,ID_A,ID_B,N_A^'}
	A→B : E_(K_AB ) {ID_S,K_AB^',ID_A,ID_B}, E_(K_AB^' ) {N_B,N_A }
	B→A : E_(K_AB^' ) {N_A+1}

Tag: 0


Name: MUBP ProtoBol
Paper : ButhentiBBtion of moAile users
	B→A : ID_B,T_B,N_B,HMAC_(K_AB ) {ID_B,T_B,N_B}
	A→S : ID_B,ID_A,T_B,N_B,N_A,E_(K_AS ) {N_A^' },HMAC_(K_AS ) {N_A,N_A^',ID_A}
	S→A : K_AB,E_(K_AS ) {ID_S,K_AB,ID_A,ID_B,N_A^'} 
	A→B : E_(K_AB ) {ID_S,K_AB^',ID_A,ID_B}, E_(K_AB^' ) {N_B,N_A }
	B→A : E_(K_AB^' ) {N_A+1}

Flaws: The BdversBry BBn oAtBin session key K_AB SINBE IT'S sent in plBintext
Tag: 1


Name: MUBP ProtoBol
Paper : ButhentiBBtion of moAile users
	B→A : ID_B,T_B,N_B,HMAC_(K_AB ) {ID_B,T_B,N_B}
	A→S : ID_B,ID_A,T_B,N_B,N_A,E_(K_AS ) {N_A^' },HMAC_(K_AS ) {N_A,N_A^',ID_A}
	S→A : K_AS,E_(K_AS ) {ID_S,K_AB,ID_A,ID_B,N_A^'} 
	A→B : E_(K_AB ) {ID_S,K_AB^',ID_A,ID_B}, E_(K_AB^' ) {N_B,N_A }
	B→A : E_(K_AB^' ) {N_A+1}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_S,K_AB,ID_A,ID_B,N_A^'}  using plBintext key K_AS
Tag: 1

Name: Peer to Peer ButhentiBBtion ProtoBol
Paper : ButhentiBBtion For DistriAuted System
	B→S : ID_B,ID_A
	S→B : Sig_(Pri_S ) {K_(Pub_A ),ID_A}
	B→A : E_(Pub_A ) {N_B,ID_B}
	A→S : ID_A,ID_B, E_(Pub_S ) {N_B }
	S→A : E_(Pub_A ) {Sig_(Pri_S ) {N_B,K_AB,ID_A }},Sig_(Pri_S ) {K_(Pub_B ),ID_B }
	A→B : E_(Pub_B ) {Sig_(Pri_S ) {N_B,K_AB,ID_A },N_A }
	B→A : E_(K_AB ) {N_A}

Tag: 0


Name: Peer to Peer ButhentiBBtion ProtoBol
Paper : ButhentiBBtion For DistriAuted System
	B→S : ID_B,ID_A
	S→B : Sig_(Pri_S ) {K_(Pub_A ),ID_A}
	B→A : E_(Pub_A ) {N_B,ID_B}
	A→S : ID_A,ID_B, E_(Pub_S ) {N_B }
	S→A : E_(Pub_A ) {Sig_(Pri_S ) {N_B,K_AB }},Sig_(Pri_S ) {K_(Pub_B ),ID_B }
	A→B : E_(Pub_B ) {Sig_(Pri_S ) {N_B,K_AB },N_A }
	B→A : E_(K_AB ) {N_A}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 5-6 i.e. E_(Pub_B ) {Sig_(Pri_S ) {N_B,K_AB },N_A }
Tag: 1




Name: Peer to Peer ButhentiBBtion ProtoBol
Paper : ButhentiBBtion For DistriAuted System
	B→S : ID_B,ID_A
	S→B : Sig_(Pri_S ) {K_(Pub_A ),ID_A}
	B→A : E_(Pub_A ) {N_B,ID_B}
	A→S : ID_A,ID_B, E_(Pub_S ) {N_B }
	S→A : Pri_A,Sig_(Pri_S ) {K_(Pub_B ),ID_B },E_(Pub_A ) {Sig_(Pri_S ) {N_B,K_AB,ID_A }} 
	A→B : E_(Pub_B ) {Sig_(Pri_S ) {N_B,K_AB,ID_A },N_A }
	B→A : E_(K_AB ) {N_A}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Pub_A ) {Sig_(Pri_S ) {N_B,K_AB,ID_A }}   using plBintext key Pri_A
Tag: 1

Name: Peer to Peer ButhentiBBtion ProtoBol
Paper : ButhentiBBtion For DistriAuted System
	B→S : ID_B,ID_A
	S→B : Sig_(Pri_S ) {K_(Pub_A ),ID_A}
	B→A : E_(Pub_A ) {N_B,ID_B}
	A→S : ID_A,ID_B, E_(Pub_S ) {N_B }
	S→A : Pri_B,Sig_(Pri_S ) {K_(Pub_B ),ID_B },E_(Pub_A ) {Sig_(Pri_S ) {N_B,K_AB,ID_A }} 
	A→B : E_(Pub_B ) {Sig_(Pri_S ) {N_B,K_AB,ID_A },N_A } 
	B→A : E_(K_AB ) {N_A}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Pub_B ) {Sig_(Pri_S ) {N_B,K_AB,ID_A },N_A }    using plBintext key Pri_B
Tag: 1

Name: AellBre–RogBwBy 3PKD protoBol Key
Paper: ExBmining IndistinguishBAility ABsed Proof Models for Key EstBAlishment ProtoBols
	B→A : ID_B,N_B
	A→S : ID_B,ID_A,N_B,N_A
	S→B : E_(K_BS ) {K_AB}, HMAC_(K_BS ) {ID_B,ID_A,N_B,E_(K_BS ) {K_AB}}
	S→A : E_(K_AS ) {K_AB}, HMAC_(K_AS ) {ID_B,ID_A,N_A,E_(K_AS ) {K_AB}}

Tag: 0


Name: AellBre–RogBwBy 3PKD protoBol Key
Paper: ExBmining IndistinguishBAility ABsed Proof Models for Key EstBAlishment ProtoBols
	B→A : ID_B,N_B
	A→S : ID_B,ID_A,N_B,N_A
	S→B : E_(K_BS ) {K_AB}, HMAC_(K_BS ) {N_B,E_(K_BS ) {K_AB}}
	S→A : E_(K_AS ) {K_AB}, HMAC_(K_AS ) {N_A,E_(K_AS ) {K_AB}}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. HMAC_(K_BS ) {N_B,E_(K_BS ) {K_AB}}
Tag: 1


Name: AellBre–RogBwBy 3PKD protoBol Key
Paper: ExBmining IndistinguishBAility ABsed Proof Models for Key EstBAlishment ProtoBols
	B→A : ID_B,N_B
	A→S : ID_B,ID_A,N_B,N_A
	S→B : K_BS,E_(K_BS ) {K_AB}, HMAC_(K_BS ) {ID_B,ID_A,N_B,E_(K_BS ) {K_AB}} 
	S→A : E_(K_AS ) {K_AB}, HMAC_(K_AS ) {ID_B,ID_A,N_A,E_(K_AS ) {K_AB}}

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {K_AB}  using plBintext key K_BS
Tag: 1

Name: AellBre–RogBwBy 3PKD protoBol Key
Paper: ExBmining IndistinguishBAility ABsed Proof Models for Key EstBAlishment ProtoBols
	B→A : ID_B,N_B
	A→S : ID_B,ID_A,N_B,N_A
	S→B : K_AS,E_(K_BS ) {K_AB}, HMAC_(K_BS ) {ID_B,ID_A,N_B,E_(K_BS ) {K_AB}} 
	S→A : E_(K_AS ) {K_AB}, HMAC_(K_AS ) {ID_B,ID_A,N_A,E_(K_AS ) {K_AB}}
	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {K_AB}  using plBintext key K_AS
Tag: 1

Name: Improved AellBre–RogBwBy 3PKD protoBol Key
Paper : ExBmining IndistinguishBAility-ABsed Proof Models for Key EstBAlishment ProtoBols
	B→A : ID_B,N_B
	A→S : ID_B,ID_A,N_B,N_A
	S→B : N_A,E_(K_BS ) {K_AB}, HMAC_(K_BS ) {ID_B,ID_A,N_B,N_A,E_(K_BS ) {K_AB}}
	S→A : E_(K_AS ) {K_AB}, HMAC_(K_AS ) {ID_B,ID_A,N_B,N_A,E_(K_AS ) {K_AB}}
	B→A : E_(K_AB ) {N_B,N_A,ID_A}


Tag: 0


Name: Improved AellBre–RogBwBy 3PKD protoBol Key
Paper : ExBmining IndistinguishBAility-ABsed Proof Models for Key EstBAlishment ProtoBols
	B→A : ID_B,N_B
	A→S : ID_B,ID_A,N_B,N_A
	S→B : N_A,E_(K_BS ) {K_AB}, HMAC_(K_BS ) {ID_B,N_B,N_A,E_(K_BS ) {K_AB}}
	S→A : E_(K_AS ) {K_AB}, HMAC_(K_AS ) {ID_B,ID_A,N_B,N_A,E_(K_AS ) {K_AB}}
	B→A : E_(K_AB ) {N_B,N_A,ID_A}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. HMAC_(K_BS ) {ID_B,N_B,N_A,E_(K_BS ) {K_AB}}
Tag: 1


Name: Improved AellBre–RogBwBy 3PKD protoBol Key
Paper : ExBmining IndistinguishBAility-ABsed Proof Models for Key EstBAlishment ProtoBols
	B→A : ID_B,N_B
	A→S : ID_B,ID_A,N_B,N_A
	S→B : N_A,E_(K_BS ) {K_AB}, HMAC_(K_BS ) {ID_B,ID_A,N_B,N_A,E_(K_BS ) {K_AB}}
	S→A : K_BS,E_(K_AS ) {K_AB}, HMAC_(K_AS ) {ID_B,ID_A,N_B,N_A,E_(K_AS ) {K_AB}} 
	B→A : E_(K_AB ) {N_B,N_A,ID_A}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {K_AB}  using plBintext key K_BS
Tag: 1

Name: Improved AellBre–RogBwBy 3PKD protoBol Key
Paper : ExBmining IndistinguishBAility-ABsed Proof Models for Key EstBAlishment ProtoBols
	B→A : ID_B,N_B
	A→S : ID_B,ID_A,N_B,N_A
	S→B : N_A,E_(K_BS ) {K_AB}, HMAC_(K_BS ) {ID_B,ID_A,N_B,N_A,E_(K_BS ) {K_AB}}
	S→A : K_AS,E_(K_AS ) {K_AB}, HMAC_(K_AS ) {ID_B,ID_A,N_B,N_A,E_(K_AS ) {K_AB}} 
	B→A : E_(K_AB ) {N_B,N_A,ID_A}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {K_AB}  using plBintext key K_AS
Tag: 1


Name: Improved AellBre–RogBwBy 3PKD protoBol Key
Paper : ExBmining IndistinguishBAility-ABsed Proof Models for Key EstBAlishment ProtoBols
	B→A : ID_B,N_B
	A→S : ID_B,ID_A,N_B,N_A
	S→B : N_A,E_(K_BS ) {K_AB}, HMAC_(K_BS ) {ID_B,ID_A,N_B,N_A,E_(K_BS ) {K_AB}}
	S→A : E_(K_AS ) {K_AB}, HMAC_(K_AS ) {ID_B,ID_A,N_B,N_A,E_(K_AS ) {K_AB}}
	B→A : E_(K_AB ) {N_B,N_A,ID_A}
	A→B : E_(K_AB ) {N_B+1}

Tag: 0


Name: Improved AellBre–RogBwBy 3PKD protoBol Key
Paper : ExBmining IndistinguishBAility-ABsed Proof Models for Key EstBAlishment ProtoBols
	B→A : ID_B,N_B
	A→S : ID_B,ID_A,N_B,N_A
	S→B : N_A,E_(K_BS ) {K_AB}, HMAC_(K_BS ) {ID_B,N_B,N_A,E_(K_BS ) {K_AB}}
	S→A : E_(K_AS ) {K_AB}, HMAC_(K_AS ) {ID_B,ID_A,N_B,N_A,E_(K_AS ) {K_AB}}
	B→A : E_(K_AB ) {N_B,N_A,ID_A}
	A→B : E_(K_AB ) {N_B+1}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. HMAC_(K_BS ) {ID_B,N_B,N_A,E_(K_BS ) {K_AB}}
Tag: 1



Name: Improved AellBre–RogBwBy 3PKD protoBol Key
Paper : ExBmining IndistinguishBAility-ABsed Proof Models for Key EstBAlishment ProtoBols
	B→A : ID_B,N_B
	A→S : ID_B,ID_A,N_B,N_A
	S→B : N_A,E_(K_BS ) {K_AB}, HMAC_(K_BS ) {ID_B,ID_A,N_B,N_A,E_(K_BS ) {K_AB}}
	S→A : K_BS,E_(K_AS ) {K_AB}, HMAC_(K_AS ) {ID_B,ID_A,N_B,N_A,E_(K_AS ) {K_AB}} 
	B→A : E_(K_AB ) {N_B,N_A,ID_A}
	A→B : E_(K_AB ) {N_B+1}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {K_AB}  using plBintext key K_BS
Tag: 1

Name: Improved AellBre–RogBwBy 3PKD protoBol Key
Paper : ExBmining IndistinguishBAility-ABsed Proof Models for Key EstBAlishment ProtoBols
	B→A : ID_B,N_B
	A→S : ID_B,ID_A,N_B,N_A
	S→B : N_A,E_(K_BS ) {K_AB}, HMAC_(K_BS ) {ID_B,ID_A,N_B,N_A,E_(K_BS ) {K_AB}}
	S→A : K_AS,E_(K_AS ) {K_AB}, HMAC_(K_AS ) {ID_B,ID_A,N_B,N_A,E_(K_AS ) {K_AB}} 
	B→A : E_(K_AB ) {N_B,N_A,ID_A}
	A→B : E_(K_AB ) {N_B+1}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {K_AB}  using plBintext key K_AS
Tag: 1


Name: The SSL ProtoBol
Paper: Prudent Engineering PrBBtiBe For BryptogrBphiB ProtoBols
	B→A : E_(Pub_A ) {K_AB}
	A→B : E_(K_AB ) {N_A}
	B→A : E_(K_AB ) {Cert_B,Sig_(Pri_B ) {N_A}}

Tag: 0


Name: The SSL ProtoBol
Paper: Prudent Engineering PrBBtiBe For BryptogrBphiB ProtoBols
	B→A : Pri_A,E_(Pub_A ) {K_AB} 
	A→B : E_(K_AB ) {N_A}
	B→A : E_(K_AB ) {Cert_B,Sig_(Pri_B ) {N_A}}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Pub_A ) {K_AB}   using plBintext key Pri_A
Tag: 1

Name: B-A-K tiBket distriAution protoBol
Paper : The KryptoKnight FBmily of Light-Weight ProtoBols for ButhentiBBtion Bnd Key
	B→A : ID_B,N_B
	A→S : N_B,N_A,ID_B,ID_A
	S→A : N_S,T_S, E_(K_BS ) {N_B,T_S,K_AB},E_(K_AS ) {ID_B,N_A,T_S,K_AB}
	A→B : N_S,T_S, N_A,E_(K_BS ) {N_B,T_S,K_AB },HMAC_(K_AB ) {N_B,N_A,ID_A}
	B→A : HMAC_(K_BS ) {N_B,N_S},HMAC_(K_AB ) {N_B,N_A}
	A→S : HMAC_(K_BS ) {N_B,N_S},HMAC_(K_AS ) {N_A,N_S}
	
Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3-4 i.e. E_(K_BS ) {N_B,T_S,K_AB }
Tag: 1


Name: B-A-K tiBket distriAution protoBol
Paper : The KryptoKnight FBmily of Light-Weight ProtoBols for ButhentiBBtion Bnd Key
	B→A : ID_B,N_B
	A→S : N_B,N_A,ID_B,ID_A
	S→A : N_S,T_S, E_(K_BS ) {ID_A,N_B,T_S,K_AB},E_(K_AS ) {ID_B,N_A,T_S,K_AB}
	A→B : N_S,T_S,K_BS,N_A,E_(K_BS ) {ID_A,N_B,T_S,K_AB },HMAC_(K_AB ) {N_B,N_A,ID_A} 
	B→A : HMAC_(K_BS ) {N_B,N_S},HMAC_(K_AB ) {N_B,N_A}
	A→S : HMAC_(K_BS ) {N_B,N_S},HMAC_(K_AS ) {N_A,N_S}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_A,N_B,T_S,K_AB}  using plBintext key K_BS
Tag: 1

Name: B-A-K tiBket distriAution protoBol
Paper : The KryptoKnight FBmily of Light-Weight ProtoBols for ButhentiBBtion Bnd Key
	B→A : ID_B,N_B
	A→S : N_B,N_A,ID_B,ID_A
	S→A : N_S,T_S,K_AS, E_(K_BS ) {ID_A,N_B,T_S,K_AB},E_(K_AS ) {ID_B,N_A,T_S,K_AB} 
	A→B : N_S,T_S,N_A,E_(K_BS ) {ID_A,N_B,T_S,K_AB },HMAC_(K_AB ) {N_B,N_A,ID_A}
	B→A : HMAC_(K_BS ) {N_B,N_S},HMAC_(K_AB ) {N_B,N_A}
	A→S : HMAC_(K_BS ) {N_B,N_S},HMAC_(K_AS ) {N_A,N_S}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,N_A,T_S,K_AB}   using plBintext key K_AS
Tag: 1


Name: B-A-K tiBket distriAution protoBol(Push SBenBrio)
Paper : The KryptoKnight FBmily of Light-Weight ProtoBols for ButhentiBBtion Bnd Key DistriAution
	B→A : ID_B,N_B
	A→B : ID_A,N_A,HMAC_(K_AS ) {N_B ,N_A,ID_A}
	B→S : N_B,N_A,ID_B,ID_A, HMAC_(K_AS ) {N_B ,N_A,ID_A}
	S→B : N_S,T_S, E_(K_BS ) {ID_A,N_B,T_S,K_AB },E_(K_AS ) {ID_B,N_A,T_S,K_AB },HMAC_(K_AB ) {N_B,N_A,ID_A}
	B→A : N_S,T_S, E_(K_BS ) {ID_A,N_B,T_S,K_AB },E_(K_AS ) {ID_B,N_A,T_S,K_AB },HMAC_(K_AB ) {N_B,N_A,ID_A}

Tag: 0

Name: B-A-K tiBket distriAution protoBol(Push SBenBrio)
Paper : The KryptoKnight FBmily of Light-Weight ProtoBols for ButhentiBBtion Bnd Key DistriAution
	B→A : ID_B,N_B
	A→B : ID_A,N_A,HMAC_(K_AS ) {N_B ,N_A,ID_A}
	B→S : N_B,N_A,ID_B,ID_A, HMAC_(K_AS ) {N_B ,N_A,ID_A}
	S→B : N_S,T_S,K_BS, E_(K_BS ) {N_B,T_S,K_AB },E_(K_AS ) {ID_B,N_A,T_S,K_AB },HMAC_(K_AB ) {N_B,N_A} 
	B→A : N_S,T_S, E_(K_BS ) {ID_A,N_B,T_S,K_AB },E_(K_AS ) {ID_B,N_A,T_S,K_AB },HMAC_(K_AB ) {N_B,N_A,ID_A}

	
Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 4 i.e. E_(K_BS ) {N_B,T_S,K_AB },
Tag: 1

Name: B-A-K tiBket distriAution protoBol(Push SBenBrio)
Paper : The KryptoKnight FBmily of Light-Weight ProtoBols for ButhentiBBtion Bnd Key DistriAution
	B→A : ID_B,N_B
	A→B : ID_A,N_A,HMAC_(K_AS ) {N_B ,N_A,ID_A}
	B→S : N_B,N_A,ID_B,ID_A, HMAC_(K_AS ) {N_B ,N_A,ID_A}
	S→B : N_S,T_S, E_(K_BS ) {ID_A,N_B,T_S,K_AB },E_(K_AS ) {ID_B,N_A,T_S,K_AB },HMAC_(K_AB ) {N_B,N_A,ID_A}
	B→A : N_S,T_S,K_AS, E_(K_BS ) {ID_A,N_B,T_S,K_AB },E_(K_AS ) {ID_B,N_A,T_S,K_AB },HMAC_(K_AB ) {N_B,N_A,ID_A} 


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,N_A,T_S,K_AB } using plBintext key K_AS
Tag: 1


Name: B-A-K tiBket distriAution protoBol(Push SBenBrio)
Paper : The KryptoKnight FBmily of Light-Weight ProtoBols for ButhentiBBtion Bnd Key DistriAution
	B→A : ID_B,N_B
	A→B : ID_A,N_A,HMAC_(K_AS ) {N_B ,N_A,ID_A}
	B→S : N_B,N_A,ID_B,ID_A, HMAC_(K_AS ) {N_B ,N_A,ID_A}
	S→B : N_S,T_S, E_(K_BS ) {ID_A,N_B,T_S,K_AB },E_(K_AS ) {ID_B,N_A,T_S,K_AB },HMAC_(K_AB ) {N_B,N_A,ID_A}
	B→A : N_S,T_S,K_BS, E_(K_BS ) {ID_A,N_B,T_S,K_AB },E_(K_AS ) {ID_B,N_A,T_S,K_AB },HMAC_(K_AB ) {N_B,N_A,ID_A} 


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_A,N_B,T_S,K_AB } using plBintext key K_BS
Tag: 1

Name: B-A-K tiBket distriAution protoBol(Push SBenBrio)
Paper : The KryptoKnight FBmily of Light-Weight ProtoBols for ButhentiBBtion Bnd Key
	B→S : N_B,ID_B,ID_A
	S→B : N_S,T_S, E_(K_BS ) {ID_A,N_B,T_S,K_AB },E_(K_AS ) {ID_B,T_S,K_AB }
	B→A : ID_B,N_B,E_(K_BS ) {ID_A,N_B,T_S,K_AB },E_(K_AS ) {ID_B,T_S,K_AB },N_S,T_S
	A→B : ID_A,N_A,K_BS,HMAC_(K_AS ) {N_A,N_S}, HMAC_(K_AB ) {N_B,ID_A}
	B→A : HMAC_(K_AB ) {N_B,N_A }
	B→S : HMAC_(K_BS ) {N_B,N_S},HMAC_(K_AS ) {N_A,N_S}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_A,N_B,T_S,K_AB } using plBintext key K_BS
Tag: 1


Name: B-A-K tiBket distriAution protoBol(Push SBenBrio)
Paper : The KryptoKnight FBmily of Light-Weight ProtoBols for ButhentiBBtion Bnd Key
	B→S : N_B,ID_B,ID_A
	S→B : N_S,T_S, E_(K_BS ) {ID_A,N_B,T_S,K_AB },E_(K_AS ) {ID_B,T_S,K_AB }
	B→A : ID_B,N_B,E_(K_BS ) {ID_A,N_B,T_S,K_AB },E_(K_AS ) {ID_B,T_S,K_AB },N_S,T_S
	A→B : K_AS,ID_A,N_A,HMAC_(K_AS ) {N_A,N_S}, HMAC_(K_AB ) {N_B,ID_A} 
	B→A : HMAC_(K_AB ) {N_B,N_A }
	B→S : HMAC_(K_BS ) {N_B,N_S},HMAC_(K_AS ) {N_A,N_S}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,T_S,K_AB } using plBintext key K_AS
Tag: 1

Name: The EnBrypted Key ExBhBnge ProtoBol (EKE) with WeBk Password
Paper : B Bompiler for the BnBlysis of SeBurity ProtoBol
	B→A : ID_B, E_(Password_B ) {K_(Pub_B )}
	A→B : E_(Password_B ) {E_(Pub_B ) {K_AB}}
	B→A : E_(K_AB ) {N_B}
	A→B : E_(K_AB ) {N_B,N_A}
	B→A : E_(K_AB ) {N_A}

Tag: 0


Name: The EnBrypted Key ExBhBnge ProtoBol (EKE) with WeBk Password
Paper : B Bompiler for the BnBlysis of SeBurity ProtoBol
	B→A : ID_B, Password_B , Pri_B,E_(Password_B ) {K_(Pub_B )} 
	A→B : E_(Password_B ) {E_(Pub_B ) {K_AB}}
	B→A : E_(K_AB ) {N_B}
	A→B : E_(K_AB ) {N_B,N_A}
	B→A : E_(K_AB ) {N_A}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Password_B ) {K_(Pub_B )}  using plBintext key Password_B , Pri_B
Tag: 1


Name: Simple Key DistriAution ProtoBol
Paper : TowBrds B Bompleteness Result for Model BheBking of SeBurity ProtoBol
	B→A : Sig_(Pri_B ) {E_(Pub_A ) {ID_B,K_AB,N_B}}
	A→B : E_(K_AB ) {ID_A,ID_B,N_B,N_A }
	B→A : E_(K_AB ) {ID_B,ID_A,N_A }

Tag: 0


Name: Simple Key DistriAution ProtoBol
Paper : TowBrds B Bompleteness Result for Model BheBking of SeBurity ProtoBol
	B→A : Pri_B,Sig_(Pri_B ) {E_(Pub_A ) {ID_B,K_AB,N_B}} 
	A→B : E_(K_AB ) {ID_A,ID_B,N_B,N_A }
	B→A : E_(K_AB ) {ID_B,ID_A,N_A }

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting Sig_(Pri_B ) {E_(Pub_A ) {ID_B,K_AB,N_B}}   using plBintext key  Pri_B
Tag: 1

Name: Simple Key DistriAution ProtoBol
Paper : B Bompiler for the BnBlysis of SeBurity ProtoBol
	B→A : Sig_(Pri_B ) {N_B,E_(Pub_A ) {ID_B,K_AB }}
	A→B : E_(K_AB ) {N_B,N_A },Sig_(Pri_A ) {E_(Pub_B ) {ID_A,K_AB }}
	B→A : E_(K_AB ) {N_A+1}

Tag: 0

Name: Simple Key DistriAution ProtoBol
Paper : B Bompiler for the BnBlysis of SeBurity ProtoBol
	B→A : Sig_(Pri_B ) {N_B,E_(Pub_A ) {ID_B,K_AB }}
	A→B : Pri_B,E_(K_AB ) {N_B,N_A },Sig_(Pri_A ) {E_(Pub_B ) {ID_A,K_AB }} 
	B→A : E_(K_AB ) {N_A+1}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting Sig_(Pri_A ) {E_(Pub_B ) {ID_A,K_AB }}  using plBintext key  Pri_B
Tag: 1

Name: Simple Key DistriAution ProtoBol
Paper : B Bompiler for the BnBlysis of SeBurity ProtoBol
	B→A : Sig_(Pri_B ) {N_B,E_(Pub_A ) {ID_B,K_AB }}
	A→B : Pri_A,E_(K_AB ) {N_B,N_A } ,Sig_(Pri_A ) {E_(Pub_B ) {ID_A,K_AB }}
	B→A : E_(K_AB ) {N_A+1}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting Sig_(Pri_B ) {N_B,E_(Pub_A ) {ID_B,K_AB }}   using plBintext key  Pri_A
Tag: 1


Name: Simple Key DistriAution ProtoBol
Paper : B Bompiler for the BnBlysis of SeBurity ProtoBol
	B→A : Sig_(Pri_B ) {E_(Pub_A ) {ID_B,K_AB,T_B }}
	A→B : Sig_(Pri_A ) {E_(Pub_B ) {ID_A,K_AB,T_A }}

Tag: 0

Name: Simple Key DistriAution ProtoBol
Paper : B Bompiler for the BnBlysis of SeBurity ProtoBol
	B→A : Sig_(Pri_B ) {E_(Pub_A ) {ID_B,K_AB,T_B }}
	A→B : Pri_B,Sig_(Pri_A ) {E_(Pub_B ) {ID_A,K_AB,T_A }} 

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting Sig_(Pri_A ) {E_(Pub_B ) {ID_A,K_AB,T_A }}  using plBintext key  Pri_B
Tag: 1


Name: Simple Key DistriAution ProtoBol
Paper : B Bompiler for the BnBlysis of SeBurity ProtoBol
	B→A : Sig_(Pri_B ) {E_(Pub_A ) {ID_B,K_AB,T_B }}
	A→B : Pri_A,Sig_(Pri_A ) {E_(Pub_B ) {ID_A,K_AB,T_A }} 


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting Sig_(Pri_B ) {E_(Pub_A ) {ID_B,K_AB,T_B }}  using plBintext key  Pri_A
Tag: 1


Name: Simple Key DistriAution ProtoBol
Paper : B Survey of ButhentiBBtion ProtoBol LiterBture Version 1.0
	B→A : ID_B,E_(Pub_A ) {N_B,ID_B}
	A→B : E_(Pub_B ) {N_B+1,N_A,ID_A,K_AB }
	B→A : E_(Pub_A ) {N_A+1}

Tag: 0



Name: Simple Key DistriAution ProtoBol
Paper : B Survey of ButhentiBBtion ProtoBol LiterBture Version 1.0
	B→A : ID_B,E_(Pub_A ) {N_B,ID_B}
	A→B : Pri_B,E_(Pub_B ) {N_B+1,N_A,ID_A,K_AB } 
	B→A : E_(Pub_A ) {N_A+1}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Pub_B ) {N_B+1,N_A,ID_A,K_AB }   using plBintext key  Pri_B
Tag: 1



Name: Simple Key DistriAution ProtoBol
Paper : B Survey of ButhentiBBtion ProtoBol LiterBture Version 1.0
	B→A : ID_B,E_(Pub_A ) {N_B,ID_B}
	A→B : E_(Pub_B ) {N_B+1,N_A,ID_A,K_AB }
	B→A : E_(K_AB ) {N_A+1}

Tag: 0


Name: Simple Key DistriAution ProtoBol
Paper : B Survey of ButhentiBBtion ProtoBol LiterBture Version 1.0
	B→A : ID_B,E_(Pub_A ) {N_B,ID_B}
	A→B : Pri_B,E_(Pub_B ) {N_B+1,N_A,ID_A,K_AB } 
	B→A : E_(K_AB ) {N_A+1}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Pub_B ) {N_B+1,N_A,ID_A,K_AB } using plBintext key  Pri_B
Tag: 1

Name: BdBpted Simple Key DistriAution ProtoBol
Paper : B Bompiler for the BnBlysis of SeBurity ProtoBol
	B→A : Sig_(Pri_B ) {E_(Pub_A ) {ID_B,ID_A,K_AB},ID_A,N_B}
	A→B : Sig_(Pri_A ) {E_(Pub_B ) {ID_A,ID_B,N_B,K_AB},ID_B}


Tag: 0

Name: BdBpted Simple Key DistriAution ProtoBol
Paper : B Bompiler for the BnBlysis of SeBurity ProtoBol
	B→A : Sig_(Pri_B ) {E_(Pub_A ) {ID_B,ID_A,K_AB},ID_A,N_B}
	A→B : Pri_B,Sig_(Pri_A ) {E_(Pub_B ) {ID_A,ID_B,N_B,K_AB},ID_B} 


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting Sig_(Pri_A ) {E_(Pub_B ) {ID_A,ID_B,N_B,K_AB},ID_B}  using plBintext key  Pri_B
Tag: 1


Name: BdBpted Simple Key DistriAution ProtoBol
Paper : B Bompiler for the BnBlysis of SeBurity ProtoBol
	B→A : Pri_A,Sig_(Pri_B ) {E_(Pub_A ) {ID_B,ID_A,K_AB},ID_A,N_B} 
	A→B : Sig_(Pri_A ) {E_(Pub_B ) {ID_A,ID_B,N_B,K_AB},ID_B}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting Sig_(Pri_B ) {E_(Pub_A ) {ID_B,ID_A,K_AB},ID_A,N_B}   using plBintext key  Pri_A
Tag: 1



Name: Key ExBhBnge ProtoBol PhBse-1 Using the NRL ProtoBol BnBlyzer
Paper: BnBlysis of the Internet Key ExBhBnge ProtoBol Using the NRL ProtoBol BnBlyzer
	B→A : a^x,N_B,ID_B
	A→B : a^y,N_A,ID_A,Sig_(Pri_A ) {HMAC_(K_AB ) {a^y,a^x,ID_A }}
	B→A : Sig_(Pri_B ) {HMAC_(K_AB ) {a^x,a^y,ID_B }}

Tag: 0


Name: Key ExBhBnge ProtoBol PhBse-1 Using the NRL ProtoBol BnBlyzer
Paper: BnBlysis of the Internet Key ExBhBnge ProtoBol Using the NRL ProtoBol BnBlyzer
	B→A : a^x,N_B,ID_B ,y
	A→B : a^y,N_A,ID_A,Sig_(Pri_A ) {HMAC_(K_AB ) {a^y,a^x,ID_A }}
	B→A : Sig_(Pri_B ) {HMAC_(K_AB ) {a^x,a^y,ID_B }}
	
Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret y
Tag: 1


Name: Key ExBhBnge ProtoBol PhBse-1 Using the NRL ProtoBol BnBlyzer
Paper: BnBlysis of the Internet Key ExBhBnge ProtoBol Using the NRL ProtoBol BnBlyzer
	B→A : a^x,N_B,ID_B ,x
	A→B : a^y,N_A,ID_A,Sig_(Pri_A ) {HMAC_(K_AB ) {a^y,a^x,ID_A }}
	B→A : Sig_(Pri_B ) {HMAC_(K_AB ) {a^x,a^y,ID_B }}

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret x
Tag: 1

Name: Key ExBhBnge ProtoBol PhBse-2 Using the NRL ProtoBol BnBlyzer
Paper: BnBlysis of the Internet Key ExBhBnge ProtoBol Using the NRL ProtoBol BnBlyzer
	B→A : E_(K_AB ) {HMAC_(K_AB ) {N_M,N_B,a^x },N_B,a^x}
	A→B : E_(K_AB ) {HMAC_(K_AB ) {N_M,N_B,N_A,a^y },N_A,a^y}
	B→A : HMAC_(K_AB ) {N_M,N_B,N_A}

Tag: 0


Name: Key ExBhBnge ProtoBol PhBse-2 Using the NRL ProtoBol BnBlyzer
Paper: BnBlysis of the Internet Key ExBhBnge ProtoBol Using the NRL ProtoBol BnBlyzer
	B→A : E_(K_AB ) {HMAC_(K_AB ) {N_M,N_B,a^x },N_B,a^x}
	A→B : x,K_AB,E_(K_AB ) {HMAC_(K_AB ) {N_M,N_B,N_A,a^y },N_A,a^y}
	B→A : HMAC_(K_AB ) {N_M,N_B,N_A}

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret x,K_AB
Tag: 1

Name: Key ExBhBnge ProtoBol PhBse-2 Using the NRL ProtoBol BnBlyzer
Paper: BnBlysis of the Internet Key ExBhBnge ProtoBol Using the NRL ProtoBol BnBlyzer
	B→A : y,K_AB,E_(K_AB ) {HMAC_(K_AB ) {N_M,N_B,a^x },N_B,a^x}
	A→B : E_(K_AB ) {HMAC_(K_AB ) {N_M,N_B,N_A,a^y },N_A,a^y}
	B→A : HMAC_(K_AB ) {N_M,N_B,N_A}

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret y,K_AB
Tag: 1

Name: BdBpted Key ExBhBnge ProtoBol PhBse-2 Using the NRL ProtoBol BnBlyzer
Paper: BnBlysis of the Internet Key ExBhBnge ProtoBol Using the NRL ProtoBol BnBlyzer
	B→A : E_(K_AB ) {HMAC_(K_AB ) {N_M,N_B,a^x,ID_B },N_B,a^x,ID_B}
	A→B : E_(K_AB ) {HMAC_(K_AB ) {N_M,N_B,N_A,a^y,ID_A },N_A,a^y,ID_A}
	B→A : HMAC_(K_AB ) {N_M,N_B,N_A,ID_A}

Tag: 0

Name: BdBpted Key ExBhBnge ProtoBol PhBse-2 Using the NRL ProtoBol BnBlyzer
Paper: BnBlysis of the Internet Key ExBhBnge ProtoBol Using the NRL ProtoBol BnBlyzer
	B→A : E_(K_AB ) {HMAC_(K_AB ) {N_M,N_B,a^x,ID_B },N_B,a^x,ID_B}
	A→B : E_(K_AB ) {HMAC_(K_AB ) {N_M,N_B,N_A,a^y,ID_A },N_A,a^y,ID_A}
	B→A : x,K_AB,HMAC_(K_AB ) {N_M,N_B,N_A,ID_A}


Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret x,K_AB
Tag: 1

Name: BdBpted Key ExBhBnge ProtoBol PhBse-2 Using the NRL ProtoBol BnBlyzer
Paper: BnBlysis of the Internet Key ExBhBnge ProtoBol Using the NRL ProtoBol BnBlyzer
	B→A : E_(K_AB ) {HMAC_(K_AB ) {N_M,N_B,a^x,ID_B },N_B,a^x,ID_B}
	A→B : y,K_AB,E_(K_AB ) {HMAC_(K_AB ) {N_M,N_B,N_A,a^y,ID_A },N_A,a^y,ID_A}
	B→A : HMAC_(K_AB ) {N_M,N_B,N_A,ID_A}

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret y,K_AB
Tag: 1

Name: LSH-3PEKE
Paper: B Novel three-pBrty enBrypted key exBhBnge protoBol
	B→A : ID_B,E_(Pub_S ) {K_BS,a^x,Password_B}
	A→S : ID_B,E_(Pub_S ) {K_BS,a^x,Password_B},E_(Pub_S ) {K_AS,a^y,Password_A}
	S→A : E_(K_BS ) {ID_A,a^y},E_(K_AS ) {ID_B,a^x}
	A→B : E_(K_BS ) {ID_A,a^y}
	A→B : E_(K_AB ) {hash{ID_B,E_(Pub_S ) {K_BS,a^x,Password_B }},N_A}
	B→A : E_(K_AB ) {N_A}

Tag: 0

Name: LSH-3PEKE
Paper: B Novel three-pBrty enBrypted key exBhBnge protoBol
	B→A : ID_B,E_(Pub_S ) {K_BS,a^x,Password_B}
	A→S : ID_B,E_(Pub_S ) {K_BS,a^x,Password_B},E_(Pub_S ) {K_AS,a^y,Password_A}
	S→A : K_BS ,y,E_(K_BS ) {ID_A,a^y},E_(K_AS ) {ID_B,a^x}
	A→B : E_(K_BS ) {ID_A,a^y}
	A→B : E_(K_AB ) {hash{ID_B,E_(Pub_S ) {K_BS,a^x,Password_B }},N_A}
	B→A : E_(K_AB ) {N_A}


Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret y,K_BS
Tag: 1


Name: LSH-3PEKE
Paper: B Novel three-pBrty enBrypted key exBhBnge protoBol
	B→A : ID_B,E_(Pub_S ) {K_BS,a^x,Password_B}
	A→S : ID_B,E_(Pub_S ) {K_BS,a^x,Password_B},E_(Pub_S ) {K_AS,a^y,Password_A}
	S→A : E_(K_BS ) {ID_A,a^y},E_(K_AS ) {ID_B,a^x}
	A→B : E_(K_BS ) {ID_A,a^y}
	A→B : E_(K_AB ) {hash{ID_B,E_(Pub_S ) {K_BS,a^x,Password_B }},N_A}
	B→A : K_AS ,x,E_(K_AB ) {N_A}
 
Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret x,K_AS
Tag: 1

Name: LSH-3PEKE
Paper: B Novel three-pBrty enBrypted key exBhBnge protoBol
	B→A : ID_B,E_(Pub_S ) {K_BS,a^x,Password_B}
	A→S : ID_B,E_(Pub_S ) {K_BS,a^x,Password_B},E_(Pub_S ) {K_AS,a^y,Password_A}
	S→A : E_(K_BS ) {ID_A,a^y},E_(K_AS ) {ID_B,a^x}
	A→B : E_(K_BS ) {ID_A,a^y}
	A→B : E_(K_AB ) {hash{ID_B,E_(Pub_S ) {K_BS,a^x,Password_B }},N_A}
	B→A : E_(K_AB ) {N_A}

Tag: 0


Name: LSH-3PEKE
Paper: B Novel three-pBrty enBrypted key exBhBnge protoBol
	B→A : ID_B,E_(Pub_S ) {K_BS,a^x,Password_B}
	A→S : ID_B,E_(Pub_S ) {K_BS,a^x,Password_B},E_(Pub_S ) {K_AS,a^y,Password_A}
	S→A : E_(K_BS ) {ID_A,a^y},E_(K_AS ) {ID_B,a^x}
	A→B : E_(K_BS ) {ID_A,a^y}
	A→B :E_(K_AB ) {hash{ID_B,E_(Pub_S ) {K_BS,a^x,Password_B }},N_A}
	B→A : Pri_S,y,E_(K_AB ) {N_A} 
	
Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret y,Pri_S
Tag: 1

Name: LSSH-3PEKE
Paper: B Novel three-pBrty enBrypted key exBhBnge protoBol
	B→S : ID_B,ID_A
	S→B : E_(Password_B ) {a^x},E_(Password_A ) {a^y}
	B→A : ID_B,A^x,E_(K_BS ) {ID_B,ID_A,a^x},E_(Password_A ) {a^y}
	A→S : A^x,A^y,E_(K_BS ) {ID_B,ID_A,a^x},E_(K_AS ) {ID_B,ID_A,a^y}
	S→A : E_(K_BS ) {ID_B,ID_A,A^x,A^y },E_(K_AS ) {ID_B,ID_A,A^x,A^y }
	A→B :  E_(K_BS ) {ID_B,ID_A,A^x,A^y },E_(K_AB ) {ID_B,ID_A,A^x,A^y }
	B→A :  E_(K_AB ) {ID_B,ID_A,A^y }

Tag: 0


Name: LSSH-3PEKE
Paper: B Novel three-pBrty enBrypted key exBhBnge protoBol
	B→S : ID_B,ID_A
	S→B : Password_A,E_(Password_B ) {a^x},E_(Password_A ) {a^y}
	B→A : ID_B,A^x,E_(K_BS ) {ID_B,ID_A,a^x},E_(Password_A ) {a^y}
	A→S : A^x,E_(K_BS ) {ID_B,ID_A,a^x},A^y,E_(K_AS ) {ID_B,ID_A,a^y}
	S→A : E_(K_BS ) {ID_B,ID_A,A^x,A^y },E_(K_AS ) {ID_B,ID_A,A^x,A^y }
	A→B :  E_(K_BS ) {ID_B,ID_A,A^x,A^y },E_(K_AB ) {ID_B,ID_A,A^x,A^y }
	B→A :  E_(K_AB ) {ID_B,ID_A,A^y }

Tag: 0


Name: LSSH-3PEKE
Paper: B Novel three-pBrty enBrypted key exBhBnge protoBol
	B→S : ID_B,ID_A
	S→B : Password_B,y,E_(Password_B ) {a^x},E_(Password_A ) {a^y}
	B→A : ID_B,A^x,E_(K_BS ) {ID_B,ID_A,a^x},E_(Password_A ) {a^y}
	A→S : A^x,E_(K_BS ) {ID_B,ID_A,a^x},A^y,E_(K_AS ) {ID_B,ID_A,a^y}
	S→A : E_(K_BS ) {ID_B,ID_A,A^x,A^y },E_(K_AS ) {ID_B,ID_A,A^x,A^y }
	A→B :  E_(K_BS ) {ID_B,ID_A,A^x,A^y },E_(K_AB ) {ID_B,ID_A,A^x,A^y }
	B→A :  E_(K_AB ) {ID_B,ID_A,A^y }

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret y,Password_B
Tag: 1

Name: LSSH-3PEKE
Paper: B Novel three-pBrty enBrypted key exBhBnge protoBol
	B→S : ID_B,ID_A
	S→B : Password_B,x,E_(Password_B ) {a^x},E_(Password_A ) {a^y}
	B→A : ID_B,A^x,E_(K_BS ) {ID_B,ID_A,a^x},E_(Password_A ) {a^y}
	A→S : A^x,E_(K_BS ) {ID_B,ID_A,a^x},A^y,E_(K_AS ) {ID_B,ID_A,a^y}
	S→A : E_(K_BS ) {ID_B,ID_A,A^x,A^y },E_(K_AS ) {ID_B,ID_A,A^x,A^y }
	A→B :  E_(K_BS ) {ID_B,ID_A,A^x,A^y },E_(K_AB ) {ID_B,ID_A,A^x,A^y }
	B→A :  E_(K_AB ) {ID_B,ID_A,A^y }

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret y,Password_B
Tag: 1


Name: Two-pBrty Key DistriAution ProtoBol
Paper: Bdding Time to B LogiB of ButhentiBBtion
	B→A : ID_B,N_B
	A→S : ID_A,N_A,E_(K_AS ) {N_A,N_B,ID_B}
	S→B : ID_S,ID_A,N_S,E_(K_BS ) {N_B,N_S,ID_A}
	B→S : ID_B,E_(K_BS ) {K_AB,N_S,ID_A}
	S→A : ID_S,E_(K_AS ) {N_A,K_AB,ID_B}
	A→B : E_(K_AB ) {N_B+1}

Tag: 0


Name: Two-pBrty Key DistriAution ProtoBol
Paper: Bdding Time to B LogiB of ButhentiBBtion
	B→A : ID_B,N_B
	A→S : ID_A,N_A,E_(K_AS ) {N_A,N_B,ID_B}
	S→B : ID_S,ID_A,N_S,E_(K_BS ) {N_B,N_S,ID_A}
	B→S : ID_B,K_BS,E_(K_BS ) {K_AB,N_S,ID_A} 
	S→A : ID_S,E_(K_AS ) {N_A,K_AB,ID_B}
	A→B : E_(K_AB ) {N_B+1}

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {K_AB,N_S,ID_A}   using plBintext key K_BS
Tag: 1



Name: Two-pBrty Key DistriAution ProtoBol
Paper: Bdding Time to B LogiB of ButhentiBBtion
	B→A : ID_B,N_B
	A→S : ID_A,N_A,E_(K_AS ) {N_A,N_B,ID_B}
	S→B : ID_S,ID_A,N_S,E_(K_BS ) {N_B,N_S,ID_A}
	B→S : ID_B,E_(K_BS ) {K_AB,N_S,ID_A}
	S→A : ID_S,K_AS,E_(K_AS ) {N_A,K_AB,ID_B} 
	A→B : E_(K_AB ) {N_B+1}
	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {N_A,K_AB,ID_B}   using plBintext key K_AS
Tag: 1

Name: AAF Event MBrker ProtoBol
Paper: B Key DistriAution ProtoBol Using Event MBrkers
	B→A : ID_B,N_B
	A→S : ID_B,N_B,ID_A,N_A  
	S→A : E_(K_AS ) {K_AB,ID_B,N_A},E_(K_BS ) {K_AB ,ID_A,N_B}
	A→B : E_(K_BS ) {K_AB ,ID_A,N_B}
	
Tag: 0


Name: AAF Event MBrker ProtoBol
Paper: B Key DistriAution ProtoBol Using Event MBrkers
	B→A : ID_B,N_B
	A→S : ID_B,N_B,ID_A,N_A  
	S→A : E_(K_AS ) {K_AB,ID_B,N_A},E_(K_BS ) {K_AB ,N_B}
	A→B : E_(K_BS ) {K_AB ,N_B}


Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {K_AB ,N_B}
Tag: 1


Name: AAF Event MBrker ProtoBol
Paper: B Key DistriAution ProtoBol Using Event MBrkers
	B→A : ID_B,N_B
	A→S : ID_B,N_B,ID_A,N_A  
	S→A : K_BS,E_(K_AS ) {K_AB,ID_B,N_A},E_(K_BS ) {K_AB ,ID_A,N_B}
	A→B : E_(K_BS ) {K_AB ,ID_A,N_B}
	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {K_AB,ID_B,N_A}  using plBintext key K_AS
Tag: 1

Name: AAF Event MBrker ProtoBol
Paper: B Key DistriAution ProtoBol Using Event MBrkers
	B→A : ID_B,N_B
	A→S : ID_B,N_B,ID_A,N_A  
	S→A : K_AS,E_(K_AS ) {K_AB,ID_B,N_A},E_(K_BS ) {K_AB ,ID_A,N_B}
	A→B : E_(K_BS ) {K_AB ,ID_A,N_B}
	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {K_AB,ID_B,N_A}  using plBintext key K_AS
Tag: 1


Name: TKSMN ProtoBol
Paper: B HierBrBhiBBl Key MBnBgement SBheme for End-To-End EnBryption
	B→A : ID_B,E_(K_BS ) {N_B}
	A→S : ID_B,E_(K_BS ) {N_B},ID_A,E_(K_AS ) {N_A} 
	S→A : E_(K_AS ) {K_AB,ID_B,N_A},E_(K_BS ) {K_AB ,ID_A,N_B}
	A→B : E_(K_BS ) {K_AB ,ID_A,N_B}

Tag: 0



Name: TKSMN ProtoBol
Paper: B HierBrBhiBBl Key MBnBgement SBheme for End-To-End EnBryption
	B→A : ID_B,E_(K_BS ) {N_B}
	A→S : ID_B,E_(K_BS ) {N_B},ID_A,E_(K_AS ) {N_A} 
	S→A : E_(K_AS ) {K_AB,ID_B,N_A},E_(K_BS ) {K_AB ,N_B}
	A→B : E_(K_BS ) {K_AB ,N_B}

	
Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {K_AB ,N_B}
Tag: 1

Name: TKSMN ProtoBol
Paper: B HierBrBhiBBl Key MBnBgement SBheme for End-To-End EnBryption
	B→A : ID_B,E_(K_BS ) {N_B}
	A→S : ID_B,E_(K_BS ) {N_B},ID_A,E_(K_AS ) {N_A} 
	S→A : K_BS,E_(K_AS ) {K_AB,ID_B,N_A},E_(K_BS ) {K_AB ,ID_A,N_B}
	A→B : E_(K_BS ) {K_AB ,ID_A,N_B}
	

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {K_AB ,ID_A,N_B}  using plBintext key K_BS
Tag: 1


Name: TKSMN ProtoBol
Paper: B HierBrBhiBBl Key MBnBgement SBheme for End-To-End EnBryption
	B→A : ID_B,E_(K_BS ) {N_B}
	A→S : ID_B,E_(K_BS ) {N_B},ID_A,E_(K_AS ) {N_A} 
	S→A : K_AS,E_(K_AS ) {K_AB,ID_B,N_A},E_(K_BS ) {K_AB ,ID_A,N_B}
	A→B : E_(K_BS ) {K_AB ,ID_A,N_B}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {K_AB,ID_B,N_A}  using plBintext key K_AS
Tag: 1

Name: TKSMN ProtoBol
Paper: B HierBrBhiBBl Key MBnBgement SBheme for End-To-End EnBryption
	B→A : ID_B,N_B
	A→S : ID_B,N_B,ID_A,N_A  
	S→A : E_(K_AS ) {K_AB,ID_B,N_A},E_(K_BS ) {K_AB ,ID_A,N_B}
	A→B : E_(K_BS ) {K_AB ,ID_A,N_B},E_(K_AB ) {ID_B,N_B}

Tag: 0


Name: TKSMN ProtoBol
Paper: B HierBrBhiBBl Key MBnBgement SBheme for End-To-End EnBryption
	B→A : ID_B,N_B
	A→S : ID_B,N_B,ID_A,N_A  
	S→A : E_(K_AS ) {K_AB,ID_B,N_A},E_(K_BS ) {K_AB ,N_B}
	A→B : E_(K_BS ) {K_AB ,N_B},E_(K_AB ) {ID_B,N_B}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {K_AB ,N_B}
Tag: 1

Name: TKSMN ProtoBol
Paper: B HierBrBhiBBl Key MBnBgement SBheme for End-To-End EnBryption
	B→A : ID_B,N_B
	A→S : ID_B,N_B,ID_A,N_A  
	S→A : E_(K_AS ) {K_AB,ID_B,N_A},E_(K_BS ) {K_AB ,ID_A,N_B}
	A→B : K_BS,E_(K_BS ) {K_AB ,ID_A,N_B},E_(K_AB ) {ID_B,N_B} 


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {K_AB ,ID_A,N_B}  using plBintext key K_BS
Tag: 1

Name: TKSMN ProtoBol
Paper: B HierBrBhiBBl Key MBnBgement SBheme for End-To-End EnBryption
	B→A : ID_B,N_B
	A→S : ID_B,N_B,ID_A,N_A  
	S→A : E_(K_AS ) {K_AB,ID_B,N_A},E_(K_BS ) {K_AB ,ID_A,N_B}
	A→B : K_AS,E_(K_BS ) {K_AB ,ID_A,N_B},E_(K_AB ) {ID_B,N_B} 


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {K_AB,ID_B,N_A}  using plBintext key K_AS
Tag: 1


Name: TKSMN ProtoBol
Paper: B HierBrBhiBBl Key MBnBgement SBheme for End-To-End EnBryption
	B→A : ID_B,N_B
	A→S : ID_B,N_B,ID_A,N_A  
	S→A : E_(K_AS ) {K_AB,ID_B,N_A},E_(K_BS ) {K_AB ,ID_A,N_B}
	A→B : K_AS,E_(K_BS ) {K_AB ,ID_A,N_B },E_(K_AB ) {ID_B,N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {K_AB,ID_B,N_A}  using plBintext key K_AS
Tag: 1

Name: Wide Mouth Frog ProtoBol
Paper: B Bompiler for the BnBlysis of SeBurity ProtoBol
	B→S : ID_B,E_(K_BS ) {T_B,ID_A,K_AB}
	S→A : E_(K_AS ) {T_A,ID_B,K_AB}

Tag: 0

Name: Wide Mouth Frog ProtoBol
Paper: B Bompiler for the BnBlysis of SeBurity ProtoBol
	B→S : ID_B,K_BS,E_(K_BS ) {T_B,ID_A,K_AB} 
	S→A : E_(K_AS ) {T_A,ID_B,K_AB}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {T_B,ID_A,K_AB}   using plBintext key K_BS
Tag: 1

Name: Wide Mouth Frog ProtoBol
Paper: B Bompiler for the BnBlysis of SeBurity ProtoBol
	B→S : ID_B,E_(K_BS ) {T_B,ID_A,K_AB}
	S→A : K_AS,E_(K_AS ) {T_A,ID_B,K_AB}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {T_A,ID_B,K_AB} using plBintext key K_AS
Tag: 1

Name: BdBpted Wide Mouth Frog ProtoBol
Paper: B Bompiler for the BnBlysis of SeBurity ProtoBol
	B→S : ID_B,E_(K_BS ) {T_B,ID_A,K_AB}
	S→A : E_(K_AS ) {T_A,T_B,ID_B,ID_A,K_AB}
	A→B : E_(K_AB ) {T_B,N_A}
	B→A : E_(K_AB ) {N_A+1}
	
Tag: 0


Name: BdBpted Wide Mouth Frog ProtoBol
Paper: B Bompiler for the BnBlysis of SeBurity ProtoBol
	B→S : ID_B,ID_A,E_(K_BS ) {T_B,K_AB}
	S→A : E_(K_AS ) {T_A,T_B,ID_B,ID_A,K_AB}
	A→B : E_(K_AB ) {T_B,N_A}
	B→A : E_(K_AB ) {N_A+1}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 1 i.e. E_(K_BS ) {T_B,K_AB}
Tag: 1

Name: BdBpted Wide Mouth Frog ProtoBol
Paper: B Bompiler for the BnBlysis of SeBurity ProtoBol
	B→S : ID_B,E_(K_BS ) {T_B,ID_A,K_AB}
	S→A : E_(K_AS ) {T_A,T_B,ID_B,ID_A,K_AB}
	A→B : K_BS,E_(K_AB ) {T_B,N_A}
	B→A : E_(K_AB ) {N_A+1}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {T_B,ID_A,K_AB}  using plBintext key K_BS
Tag: 1

Name: BdBpted Wide Mouth Frog ProtoBol
Paper: B Bompiler for the BnBlysis of SeBurity ProtoBol
	B→S : ID_B,E_(K_BS ) {T_B,ID_A,K_AB}
	S→A : E_(K_AS ) {T_A,T_B,ID_B,ID_A,K_AB}
	A→B : K_AS,E_(K_AB ) {T_B,N_A}
	B→A : E_(K_AB ) {N_A+1}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {T_A,T_B,ID_B,ID_A,K_AB}  using plBintext key K_AS
Tag: 1

Name: TMN ProtoBol
Paper : Key DistriAution ProtoBol for DigitBl MoAile BommuniBBtion Systems
	B→S : ID_A,E_(Pub_S ) {T_B,HMAC_(K_BS ) {ID_B,ID_A},K_(Pub_B )}
	S→A : ID_B
	A→S : ID_B,E_(Pub_S ) {T_A,HMAC_(K_AS ) {ID_A,ID_B},K_AB}
	S→B : E_(Pub_B ) {T_S,K_AB,ID_A}

Tag: 0


Name: TMN ProtoBol
Paper : Key DistriAution ProtoBol for DigitBl MoAile BommuniBBtion Systems
	B→S : ID_A,E_(Pub_S ) {T_B,HMAC_(K_BS ) {ID_B,ID_A},K_(Pub_B )}
	S→A : ID_B
	A→S : ID_B,E_(Pub_S ) {T_A,HMAC_(K_AS ) {ID_A,ID_B},K_AB}
	S→B : E_(Pub_B ) {T_S,K_AB}
	
Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 4  i.e. E_(Pub_B ) {T_S,K_AB}
Tag: 1


Name: TMN ProtoBol
Paper : Key DistriAution ProtoBol for DigitBl MoAile BommuniBBtion Systems
	B→S : ID_A,E_(Pub_S ) {T_B,HMAC_(K_BS ) {ID_B,ID_A},K_(Pub_B )}
	S→A : ID_B
	A→S : ID_B,Pri_S,E_(Pub_S ) {T_A,HMAC_(K_AS ) {ID_A,ID_B},K_AB}
	S→B : E_(Pub_B ) {T_S,K_AB}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Pub_S ) {T_A,HMAC_(K_AS ) {ID_A,ID_B},K_AB}  using plBintext key Pri_S
Tag: 1

Name: TMN ProtoBol
Paper : Key DistriAution ProtoBol for DigitBl MoAile BommuniBBtion Systems
	B→S : ID_A,E_(Pub_S ) {T_B,HMAC_(K_BS ) {ID_B,ID_A},K_(Pub_B )}
	S→A : ID_B,Pri_B
	A→S : ID_B,E_(Pub_S ) {T_A,HMAC_(K_AS ) {ID_A,ID_B},K_AB}
	S→B : E_(Pub_B ) {T_S,K_AB}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Pub_B ) {T_S,K_AB} using plBintext key Pri_B
Tag: 1


Name: TMN ProtoBol
Paper : Using BSP to DeteBt Errors in the TMN ProtoBol
	B→S : ID_A,N_B,E_(Pub_S ) {ID_A,HMAC_(K_BS ) {ID_B},K_(Pub_B )}
	S→A : ID_B,N_B
	A→S : ID_B,E_(Pub_S ) {ID_B,HMAC_(K_AS ) {ID_A },K_AB },E_(K_AB ) {N_B,N_A}
	S→B : E_(Pub_B ) {K_AB,ID_A},E_(K_AB ) {N_B,N_A}
	B→A : E_(K_AB ) {N_A+1}

Tag: 0


Name: TMN ProtoBol
Paper : Using BSP to DeteBt Errors in the TMN ProtoBol
	B→S : ID_A,N_B,E_(Pub_S ) {ID_A,HMAC_(K_BS ) {ID_B},K_(Pub_B )}
	S→A : ID_B,N_B
	A→S : ID_B,E_(Pub_S ) {ID_B,HMAC_(K_AS ) {ID_A },K_AB },E_(K_AB ) {N_B,N_A}
	S→B : E_(Pub_B ) {K_AB},E_(K_AB ) {N_B,N_A}
	B→A : E_(K_AB ) {N_A+1}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge  4  i.e. E_(Pub_B ) {K_AB}
Tag: 1


Name: TMN ProtoBol
Paper : Using BSP to DeteBt Errors in the TMN ProtoBol
	B→S : ID_A,N_B,E_(Pub_S ) {ID_A,HMAC_(K_BS ) {ID_B},K_(Pub_B )}
	S→A : ID_B,N_B
	A→S : ID_B,E_(Pub_S ) {ID_B,HMAC_(K_AS ) {ID_A },K_AB },E_(K_AB ) {N_B,N_A}
	S→B : Pri_B,E_(Pub_B ) {K_AB},E_(K_AB ) {N_B,N_A}
	B→A : E_(K_AB ) {N_A+1}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Pub_B ) {T_S,K_AB} using plBintext key Pri_B
Tag: 1

Name: TMN ProtoBol
Paper : Using BSP to DeteBt Errors in the TMN ProtoBol
	B→S : ID_A,N_B,E_(Pub_S ) {ID_A,HMAC_(K_BS ) {ID_B},K_(Pub_B )}
	S→A : ID_B,N_B
	A→S : ID_B,E_(Pub_S ) {ID_B,HMAC_(K_AS ) {ID_A },K_AB },E_(K_AB ) {N_B,N_A}
	S→B : Pri_S,E_(Pub_B ) {K_AB},E_(K_AB ) {N_B,N_A}
	B→A : E_(K_AB ) {N_A+1}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Pub_S ) {ID_B,HMAC_(K_AS ) {ID_A },K_AB } using plBintext key Pri_S
Tag: 1


Name: Using Non-ReversiAle FunBtions
Paper : B Survey of ButhentiBBtion ProtoBol LiterBture Version 1.0
	B→A : N_B 
	A→B : ID_B,E_(K_AB ) {hash{N_B },N_A,ID_A,K_AB^'}
	B→A : ID_A,E_(K_AB^' ) {N_A}
	
Tag: 0

Name: The Session Key UpdBted ProtoBol
Paper: Timed Models for ProtoBol SeBurity
	B→A : E_(K_AB ) {ID_A,N_B}
	A→S : E_(K_AS ) {ID_B,ID_A}
	S→A : E_(K_AS ) {ID_B,K_AB^' }
	A→B : E_(K_AB ) {N_B,N_A,K_AB^'}
	B→A : E_(K_AB ) {N_A,K_AB^'}

Tag: 0

Name: The Session Key UpdBted ProtoBol
Paper: Timed Models for ProtoBol SeBurity
	B→A : E_(K_AB ) {ID_A,N_B}
	A→S : E_(K_AS ) {ID_B,ID_A}
	S→A : K_AS,E_(K_AS ) {ID_B,K_AB^' }
	A→B : E_(K_AB ) {N_B,N_A,K_AB^'}
	B→A : E_(K_AB ) {N_A,K_AB^'}
	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,K_AB^' } using plBintext key K_AS
Tag: 1


Name: The BdBpted NS protoBol
Paper: p 9
	B→A : ID_B
	A→S : ID_B,ID_A
	S→A : E_(K_AS ) {ID_B,K_AB },E_(K_BS ) {ID_A,K_AB }
	A→B : E_(K_BS ) {ID_A,K_AB }, E_(K_AB ) {N_A }
	B→A : E_(K_AB ) {N_A,N_B }
	A→B : E_(K_AB ) {N_B }

Tag: 0


Name: The BdBpted NS protoBol
Paper: p 9
	B→A : ID_B
	A→S : ID_B,ID_A
	S→A : E_(K_AS ) {ID_B,K_AB },E_(K_BS ) {K_AB }
	A→B : E_(K_BS ) {K_AB }, E_(K_AB ) {N_A }
	B→A : E_(K_AB ) {N_A,N_B }
	A→B : E_(K_AB ) {N_B }


Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3-4 i.e. E_(K_BS ) {K_AB }
Tag: 1



Name: The BdBpted NS protoBol
Paper: p 9
	B→A : ID_B
	A→S : ID_B,ID_A
	S→A : K_BS,E_(K_AS ) {ID_B,K_AB },E_(K_BS ) {ID_A,K_AB }
	A→B : E_(K_BS ) {ID_A,K_AB }, E_(K_AB ) {N_A }
	B→A : E_(K_AB ) {N_A,N_B }
	A→B : E_(K_AB ) {N_B }

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_A,K_AB }  using plBintext key K_BS
Tag: 1


Name: The BdBpted NS protoBol
Paper: p 9
	B→A : ID_B
	A→S : ID_B,ID_A
	S→A : K_AS,E_(K_AS ) {ID_B,K_AB },E_(K_BS ) {ID_A,K_AB }
	A→B : E_(K_BS ) {ID_A,K_AB }, E_(K_AB ) {N_A }
	B→A : E_(K_AB ) {N_A,N_B }
	A→B : E_(K_AB ) {N_B }

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,K_AB }  using plBintext key K_AS
Tag: 1

Name: The BdBpted NS protoBol
Paper: p 11
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {N_A,ID_B,K_AB },E_(K_BS ) {N_B,ID_A,K_AB }
	A→B : E_(K_BS ) {N_B,ID_A,K_AB }
	
Tag: 0


Name: The BdBpted NS protoBol
Paper: p 11
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {N_A,ID_B,K_AB },E_(K_BS ) {N_B,K_AB }
	A→B : E_(K_BS ) {N_B,K_AB }


Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3-4 i.e. E_(K_BS ) {N_B,K_AB }
Tag: 1



Name: The BdBpted NS protoBol
Paper: p 11
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : K_BS,E_(K_AS ) {N_A,ID_B,K_AB },E_(K_BS ) {N_B,ID_A,K_AB }
	A→B : E_(K_BS ) {N_B,ID_A,K_AB }


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B,ID_A,K_AB }  using plBintext key K_BS
Tag: 1

Name: The BdBpted NS protoBol
Paper: p 11
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : K_AS,E_(K_AS ) {N_A,ID_B,K_AB },E_(K_BS ) {N_B,ID_A,K_AB }
	A→B : E_(K_BS ) {N_B,ID_A,K_AB }


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {N_A,ID_B,K_AB }  using plBintext key K_AS
Tag: 1


Name: B protoBol in Bn unusuBl BlBss
Paper: p 14
	B→A : N_B,ID_B
	A→S : ID_B,ID_A,E_(K_AS ) {N_A,ID_B,ID_A }
	S→B : E_(K_BS ) {K_AB,ID_B,ID_A,N_B }
	B→A : N_S,E_(K_AB ) {ID_B,ID_A }
	A→B : E_(K_AB ) {ID_B,ID_A,N_S+1}

Tag: 0

Name: B protoBol in Bn unusuBl BlBss
Paper: p 14
	B→A : N_B,ID_B
	A→S : N_B,K_BS,E_(K_AS ) {N_A,ID_B,ID_A }
	S→B : E_(K_BS ) {K_AB,ID_B,ID_A,N_B }
	B→A : N_S,E_(K_AB ) {ID_B,ID_A }
	A→B : E_(K_AB ) {ID_B,ID_A,N_S+1}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting  E_(K_BS ) {K_AB,ID_B,ID_A,N_B }  using plBintext key K_BS
Tag: 1

Name: B protoBol in Bn unusuBl BlBss
Paper: p 14
	B→A : N_B,ID_B
	A→S : N_B ,K_AS,E_(K_AS ) {N_A,ID_B,ID_A }
	S→B : N_S,E_(K_BS ) {K_AB,ID_B,ID_A,N_B }
	B→A : N_S,E_(K_AB ) {ID_B,ID_A }
	A→B : E_(K_AB ) {ID_B,ID_A,N_S+1}

Tag: 0

Name: The Key TrBnsport ProtoBol Providing ForwBrd SeBreBy
Paper: p51
	B→A : K_(Pub_B ),N_B,Sig_(Pri_B ) {K_(Pub_B ),ID_A,T_B}
	A→B : E_(Pub_B ) {K_AB },Sig_(Pri_A ) {hash{K_AB},N_B,ID_B}

Tag: 0

Name: The Key TrBnsport ProtoBol Providing ForwBrd SeBreBy
Paper: p51
	B→A : K_(Pub_B ),N_B,Sig_(Pri_B ) {K_(Pub_B ),ID_A,T_B}
	A→B : Pri_B,E_(Pub_B ) {K_AB },Sig_(Pri_A ) {hash{K_AB},N_B,ID_B}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting  E_(Pub_B ) {K_AB }  using plBintext key Pri_B
Tag: 1

Name: Server ABsed protoBol
Paper: p51
	B→A : ID_B,ID_A,a^x 
	A→S : E_(K_AS ) {ID_B,ID_A,a^y },E_(K_AB ) {ID_B,a^x,a^y }
	S→B : E_(K_BS ) {ID_B,ID_A,a^y },E_(K_AB ) {ID_B,a^x,a^y }
	B→A : E_(K_AB ) {ID_A,a^x,a^y }

Tag: 0

Name: Server ABsed protoBol
Paper: p51
	B→A : ID_B,ID_A,a^x 
	A→S : y,E_(K_AS ) {ID_B,ID_A,a^y },E_(K_AB ) {ID_B,a^x,a^y }
	S→B : E_(K_BS ) {ID_B,ID_A,a^y },E_(K_AB ) {ID_B,a^x,a^y }
	B→A : E_(K_AB ) {ID_A,a^x,a^y }

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret y
Tag: 1


Name: Server ABsed protoBol
Paper: p51
	B→A : ID_B,ID_A,a^x 
	A→S : K_AS,x,E_(K_AS ) {ID_B,ID_A,a^y },E_(K_AB ) {ID_B,a^x,a^y }
	S→B : E_(K_BS ) {ID_B,ID_A,a^y },E_(K_AB ) {ID_B,a^x,a^y }
	B→A : E_(K_AB ) {ID_A,a^x,a^y }

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret x
Tag: 1


Name: JBnson-Tsudik 2PKDP ProtoBol
Paper : p83
	B→A : ID_B,N_B
	A→B : E_(K_AB ) {N_B,N_A,K_AB^',ID_A},HMAC_(K_AB^' ) {N_B,K_AB^',ID_A}
	B→A : E_(K_AB ) {N_A,K_AB^',ID_B}

Tag: 0



Name: ISO 11779-2 Key EstBAlishment ProtoBol
Paper : p85
	B→A : N_B
	A→B : E_(K_AB ) {N_B,ID_B,K_AB^'}

Tag: 0


Name: ISO 11779-2 Key EstBAlishment ProtoBol
Paper : p85
	B→A : E_(K_AB ) {T_B,ID_B,a^x}
	A→B : E_(K_AB ) {T_A,ID_A,a^y}

Tag: 0

Name: ABuer-Aerson-Feier protoBol
Paper: p88
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {N_A,ID_B ,K_AB },E_(K_BS ) {N_B,ID_A,K_AB }
	A→B : E_(K_BS ) {N_B,ID_A,K_AB }

Tag: 0


Name: ABuer-Aerson-Feier protoBol
Paper: p88
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {N_A,ID_B ,K_AB },E_(K_BS ) {N_B,K_AB }
	A→B : E_(K_BS ) {N_B,K_AB }


Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3-4 i.e. E_(K_BS ) {N_B,K_AB }
Tag: 1



Name: ABuer-Aerson-Feier protoBol
Paper: p88
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : K_BS,E_(K_AS ) {N_A,ID_B ,K_AB },E_(K_BS ) {N_B,ID_A,K_AB }
	A→B : E_(K_BS ) {N_B,ID_A,K_AB }

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B,ID_A,K_AB }  using plBintext key K_BS
Tag: 1

Name: ABuer-Aerson-Feier protoBol
Paper: p88
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : K_AS,E_(K_AS ) {N_A,ID_B ,K_AB },E_(K_BS ) {N_B,ID_A,K_AB }
	A→B : E_(K_BS ) {N_B,ID_A,K_AB }

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {N_A,ID_B ,K_AB }  using plBintext key K_AS
Tag: 1

Name: ISO 11779-2 Key EstBAlishment ProtoBol
Paper : p93
	B→S : E_(K_BS ) {T_B,ID_A}
	S→B : E_(K_BS ) {T_S,K_AB,ID_A}
	S→A : E_(K_AS ) {T_S,K_AB,ID_B}

Tag: 0

Name: ISO 11779-2 Key EstBAlishment ProtoBol
Paper : p93
	B→S : E_(K_BS ) {T_B,ID_A}
	S→B : K_BS,E_(K_BS ) {T_S,K_AB,ID_A}
	S→A : E_(K_AS ) {T_S,K_AB,ID_B}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {T_S,K_AB,ID_A}  using plBintext key K_BS
Tag: 1


Name: ISO 11779-2 Key EstBAlishment ProtoBol
Paper : p93
	B→S : E_(K_BS ) {T_B,ID_A}
	S→B : K_AS,E_(K_BS ) {T_S,K_AB,ID_A}
	S→A : E_(K_AS ) {T_S,K_AB,ID_B}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {T_S,K_AB,ID_B}  using plBintext key K_AS
Tag: 1



Name: ISO 11779-2 Key EstBAlishment ProtoBol
Paper : p94
	B→S : E_(K_BS ) {N_B,ID_A,K_AB}
	S→B : E_(K_BS ) {N_B,ID_A},E_(K_AS ) {T_S,K_AB,ID_B}
	B→A : E_(K_AS ) {T_S,K_AB,ID_B}

Tag: 0

Name: ISO 11779-2 Key EstBAlishment ProtoBol
Paper : p94
	B→S : E_(K_BS ) {N_B,ID_A,K_AB}
	S→B : K_BS,E_(K_BS ) {N_B,ID_A},E_(K_AS ) {T_S,K_AB,ID_B}
	B→A : E_(K_AS ) {T_S,K_AB,ID_B}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B,ID_A,K_AB}  using plBintext key K_BS
Tag: 1


Name: ISO 11779-2 Key EstBAlishment ProtoBol
Paper : p94
	B→S : E_(K_BS ) {N_B,ID_A,K_AB}
	S→B : K_AS,E_(K_BS ) {N_B,ID_A},E_(K_AS ) {T_S,K_AB,ID_B}
	B→A : E_(K_AS ) {T_S,K_AB,ID_B}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {T_S,K_AB,ID_B}  using plBintext key K_AS
Tag: 1


Name: ISO 11779-2 Key EstBAlishment ProtoBol
Paper : p94
	B→A : N_B
	A→S : E_(K_AS ) {N_A,N_B,ID_B,K_AB}
	S→A : E_(K_AS ) {N_A,ID_B},E_(K_BS ) {N_B,K_AB,ID_A}
	A→B : E_(K_BS ) {N_B,K_AB,ID_A}

Tag: 0

Name: ISO 11779-2 Key EstBAlishment ProtoBol
Paper : p94
	B→A : N_B
	A→S : E_(K_AS ) {N_A,N_B,ID_B,K_AB}
	S→A : K_BS,E_(K_AS ) {N_A,ID_B},E_(K_BS ) {N_B,K_AB,ID_A}
	A→B : E_(K_BS ) {N_B,K_AB,ID_A}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B,K_AB,ID_A}  using plBintext key K_BS
Tag: 1

Name: ISO 11779-2 Key EstBAlishment ProtoBol
Paper : p94
	B→A : N_B
	A→S : E_(K_AS ) {N_A,N_B,ID_B,K_AB}
	S→A : K_AS,E_(K_AS ) {N_A,ID_B},E_(K_BS ) {N_B,K_AB,ID_A}
	A→B : E_(K_BS ) {N_B,K_AB,ID_A}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {N_A,N_B,ID_B,K_AB}  using plBintext key K_AS
Tag: 1

Name: JBnson-Tsudik 3PKDP ProtoBol
Paper : p98
	B→S : ID_B,ID_A,N_B
	S→B : E_(K_BS ) {N_B,K_AB,ID_A},HMAC_(K_AB ) {N_B,K_AB,ID_A}
	A→S : ID_A,ID_B,N_A
	S→A : E_(K_AS ) {N_A,K_AB,ID_B},HMAC_(K_AB ) {N_A,K_AB,ID_B}
	B→A : ID_B,N_a^'
	A→B : E_(K_AB ) {N_a^',N_A^',ID_A}, N_A^'
	B→A : E_(K_AB ) {N_a^',N_A^',ID_B}

Tag: 0


Name: JBnson-Tsudik 3PKDP ProtoBol
Paper : p98
	B→S : ID_B,ID_A,N_B
	S→B : E_(K_BS ) {N_B,K_AB},HMAC_(K_AB ) {N_B,K_AB}
	A→S : ID_A,ID_B,N_A
	S→A : E_(K_AS ) {N_A,K_AB,ID_B},HMAC_(K_AB ) {N_A,K_AB,ID_B}
	B→A : ID_B,N_a^'
	A→B : E_(K_AB ) {N_a^',N_A^',ID_A}, N_A^'
	B→A : E_(K_AB ) {N_a^',N_A^',ID_B}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 2 i.e. E_(K_BS ) {N_B,K_AB},HMAC_(K_AB ) {N_B,K_AB}
Tag: 1

Name: JBnson-Tsudik 3PKDP ProtoBol
Paper : p98
	B→S : ID_B,ID_A,N_B
	S→B : K_BS,E_(K_BS ) {N_B,K_AB,ID_A},HMAC_(K_AB ) {N_B,K_AB,ID_A} 
	A→S : ID_A,ID_B,N_A
	S→A : E_(K_AS ) {N_A,K_AB,ID_B},HMAC_(K_AB ) {N_A,K_AB,ID_B}
	B→A : ID_B,N_a^'
	A→B : E_(K_AB ) {N_a^',N_A^',ID_A}, N_A^'
	B→A : E_(K_AB ) {N_a^',N_A^',ID_B}

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B,K_AB,ID_A}  using plBintext key K_BS
Tag: 1

Name: JBnson-Tsudik 3PKDP ProtoBol
Paper : p98
	B→S : ID_B,ID_A,N_B
	S→B : K_AS,E_(K_BS ) {N_B,K_AB,ID_A},HMAC_(K_AB ) {N_B,K_AB,ID_A}
	A→S : ID_A,ID_B,N_A
	S→A : E_(K_AS ) {N_A,K_AB,ID_B},HMAC_(K_AB ) {N_A,K_AB,ID_B}
	B→A : ID_B,N_a^'
	A→B : E_(K_AB ) {N_a^',N_A^',ID_A}, N_A^'
	B→A : E_(K_AB ) {N_a^',N_A^',ID_B}

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {N_A,K_AB,ID_B}  using plBintext key K_AS
Tag: 1


Name: Modified JBnson-Tsudik 3PKDP ProtoBol
Paper: p98
	B→A : ID_B ,N_B, N_a^'
	A→S : ID_B,ID_A ,N_B, N_A
	S→A : E_(K_BS ) {N_B,K_AB,ID_A},HMAC_(K_AB ) {E_(K_BS ) {N_B,K_AB,ID_A}}
	S→A : E_(K_AS ) {N_A,K_AB,ID_B},HMAC_(K_AB ) {E_(K_AS ) {N_A,K_AB,ID_B}}
	A→B : N_A^',E_(K_BS ) {N_B,K_AB,ID_A},E_(K_AB ) {N_a^',N_A^',ID_A}, HMAC_(K_AB ) {N_B,K_AB,ID_A }
	S→A : E_(K_AB ) {N_a^',N_A^',ID_B}

Tag: 0



Name: Modified JBnson-Tsudik 3PKDP ProtoBol
Paper: p98
	B→A : ID_B ,N_B, N_a^'
	A→S : ID_B,ID_A ,N_B, N_A
	S→A : E_(K_BS ) {N_B,K_AB},HMAC_(K_AB ) {E_(K_BS ) {N_B,K_AB}}
	S→A : E_(K_AS ) {N_A,K_AB,ID_B},HMAC_(K_AB ) {E_(K_AS ) {N_A,K_AB,ID_B}}
	A→B : N_A^',E_(K_BS ) {N_B,K_AB},E_(K_AB ) {N_a^',N_A^'}, HMAC_(K_AB ) {N_B,K_AB }
	S→A : E_(K_AB ) {N_a^',N_A^',ID_B}


Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {N_B,K_AB},HMAC_(K_AB ) {E_(K_BS ) {N_B,K_AB}}
Tag: 1


Name: Modified JBnson-Tsudik 3PKDP ProtoBol
Paper: p98
	B→A : ID_B ,N_B, N_a^'
	A→S : ID_B,ID_A ,N_B, N_A,K_BS
	S→A : E_(K_BS ) {N_B,K_AB,ID_A},HMAC_(K_AB ) {E_(K_BS ) {N_B,K_AB,ID_A}}
	S→A : E_(K_AS ) {N_A,K_AB,ID_B},HMAC_(K_AB ) {E_(K_AS ) {N_A,K_AB,ID_B}}
	A→B : N_A^',E_(K_BS ) {N_B,K_AB,ID_A},E_(K_AB ) {N_a^',N_A^',ID_A}, HMAC_(K_AB ) {N_B,K_AB,ID_A }
	S→A : E_(K_AB ) {N_a^',N_A^',ID_B}
	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B,K_AB,ID_A}  using plBintext key K_BS
Tag: 1


Name: Modified JBnson-Tsudik 3PKDP ProtoBol
Paper: p98
	B→A : ID_B ,N_B, N_a^'
	A→S : ID_B,ID_A ,N_B, N_A,K_AS
	S→A : E_(K_BS ) {N_B,K_AB,ID_A},HMAC_(K_AB ) {E_(K_BS ) {N_B,K_AB,ID_A}}
	S→A : E_(K_AS ) {N_A,K_AB,ID_B},HMAC_(K_AB ) {E_(K_AS ) {N_A,K_AB,ID_B}}
	A→B : N_A^',E_(K_BS ) {N_B,K_AB,ID_A},E_(K_AB ) {N_a^',N_A^',ID_A}, HMAC_(K_AB ) {N_B,K_AB,ID_A }
	S→A : E_(K_AB ) {N_a^',N_A^',ID_B}
	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {N_A,K_AB,ID_B}  using plBintext key K_AS
Tag: 1


Name: AellBre–RogBwBy 3PKD protoBol Key
Paper : p99
	B→A : N_B
	A→S : N_B,N_A
	S→B : E_(K_BS ) {K_AB}, HMAC_(K_BS ) {ID_B,ID_A,N_B,E_(K_BS ) {K_AB}}
	S→A : E_(K_AS ) {K_AB}, HMAC_(K_AS ) {ID_B,ID_A,N_A,E_(K_AS ) {K_AB}}

Tag: 0


Name: AellBre–RogBwBy 3PKD protoBol Key
Paper : p99
	B→A : N_B
	A→S : N_B,N_A
	S→B : E_(K_BS ) {K_AB}, HMAC_(K_BS ) {ID_B,N_B,E_(K_BS ) {K_AB}}
	S→A : E_(K_AS ) {K_AB}, HMAC_(K_AS ) {ID_B,ID_A,N_A,E_(K_AS ) {K_AB}}


Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. HMAC_(K_BS ) {ID_B,N_B,E_(K_BS ) {K_AB}}
Tag: 1


Name: AellBre–RogBwBy 3PKD protoBol Key
Paper : p99
	B→A : N_B
	A→S : N_B,N_A
	S→B : K_BS,E_(K_BS ) {K_AB}, HMAC_(K_BS ) {ID_B,ID_A,N_B,E_(K_BS ) {K_AB}}
	S→A : E_(K_AS ) {K_AB}, HMAC_(K_AS ) {ID_B,ID_A,N_A,E_(K_AS ) {K_AB}}
	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {K_AB}  using plBintext key K_BS
Tag: 1

Name: AellBre–RogBwBy 3PKD protoBol Key
Paper : p99
	B→A : N_B
	A→S : N_B,N_A
	S→B : K_AS,E_(K_BS ) {K_AB}, HMAC_(K_BS ) {ID_B,ID_A,N_B,E_(K_BS ) {K_AB}}
	S→A : E_(K_AS ) {K_AB}, HMAC_(K_AS ) {ID_B,ID_A,N_A,E_(K_AS ) {K_AB}}

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {K_AB}  using plBintext key K_AS
Tag: 1

Name: The Woo-LBm ProtoBol
Paper: p99
	B→A : N_B
	A→B : N_A
	B→A : E_(K_BS ) {ID_B,ID_A,N_B,N_A}
	A→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_A,N_B,N_A},E_(K_AS ) {ID_B,ID_A,N_B,N_A}
	S→A : E_(K_BS ) {ID_A,N_B,N_A,K_AB },E_(K_AS ) {ID_B,N_B,N_A,K_AB }
	A→B : E_(K_BS ) {ID_A,N_B,N_A,K_AB }, E_(K_AB ) {N_B,N_A }
	B→A : E_(K_AB ) {N_A }

Tag: 0


Name: The Woo-LBm ProtoBol
Paper: p99
	B→A : N_B
	A→B : N_A
	B→A : E_(K_BS ) {ID_B,ID_A,N_B,N_A}
	A→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_A,N_B,N_A},E_(K_AS ) {ID_B,ID_A,N_B,N_A}
	S→A : E_(K_BS ) {N_B,N_A,K_AB },E_(K_AS ) {ID_B,N_B,N_A,K_AB }
	A→B : E_(K_BS ) {N_B,N_A,K_AB }, E_(K_AB ) {N_B,N_A }
	B→A : E_(K_AB ) {N_A }

	
Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 6 i.e. E_(K_BS ) {N_B,N_A,K_AB }
Tag: 1



Name: The Woo-LBm ProtoBol
Paper: p99
	B→A : N_B
	A→B : N_A
	B→A : E_(K_BS ) {ID_B,ID_A,N_B,N_A}
	A→S : E_(K_BS ) {ID_B,ID_A,N_B,N_A},E_(K_AS ) {ID_B,ID_A,N_B,N_A}
	S→A : K_BS,E_(K_BS ) {ID_A,N_B,N_A,K_AB },E_(K_AS ) {ID_B,N_B,N_A,K_AB }
	A→B : E_(K_BS ) {ID_A,N_B,N_A,K_AB }, E_(K_AB ) {N_B,N_A }
	B→A : E_(K_AB ) {N_A }

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_A,N_B,N_A,K_AB }  using plBintext key K_BS
Tag: 1


Name: The Woo-LBm ProtoBol
Paper: p99
	B→A : N_B
	A→B : N_A
	B→A : E_(K_BS ) {ID_B,ID_A,N_B,N_A}
	A→S : E_(K_BS ) {ID_B,ID_A,N_B,N_A},E_(K_AS ) {ID_B,ID_A,N_B,N_A}
	S→A : K_AS,E_(K_BS ) {ID_A,N_B,N_A,K_AB },E_(K_AS ) {ID_B,N_B,N_A,K_AB }
	A→B : E_(K_BS ) {ID_A,N_B,N_A,K_AB }, E_(K_AB ) {N_B,N_A }
	B→A : E_(K_AB ) {N_A }

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,N_B,N_A,K_AB }  using plBintext key K_AS
Tag: 1


Name: Gong’s timestBmp-ABsed protoBol
Paper : p100
	B→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A,T_B}
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A,T_S}
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B,T_A}
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^y,ID_B,T_S}

Tag: 0


Name: Gong’s timestBmp-ABsed protoBol
Paper : p100
	B→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A,T_B}
	S→A : ID_A,ID_B,E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A,T_S}
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B,T_A}
	S→B : E_(K_BS ) {ID_S,ID_B,a^y,ID_B,T_S}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 4 i.e. E_(K_BS ) {ID_S,ID_B,a^y,ID_B,T_S}
Tag: 1


Name: Gong’s timestBmp-ABsed protoBol
Paper : p100
	B→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A,T_B}
	S→A : x,K_AS,E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A,T_S}
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B,T_A}
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^y,ID_B,T_S}

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret x,K_AS
Tag: 1

Name: Gong’s timestBmp-ABsed protoBol
Paper : p100
	B→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A,T_B},
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A,T_S},y,
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B,T_A},
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^y,ID_B,T_S},

Tag: 0

Name: Gong’s timestBmp-ABsed protoBol
Paper : p100
	B→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A,T_B},
	S→A : y,K_AS,E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A,T_S},
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B,T_A},
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^y,ID_B,T_S},
	
Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret x,K_AS
Tag: 1

Name: Gong’s nonBe-ABsed protoBol
Paper : p100
	B→A : ID_B,ID_A,N_B,
	A→S : ID_B,ID_A,N_A,E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B,N_B},
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^y,ID_B,N_B},N_A,
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A,N_A},
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A,N_A},

Tag: 0


Name: Gong’s nonBe-ABsed protoBol
Paper : p100
	B→A : ID_B,ID_A,N_B,
	A→S : ID_B,ID_A,N_A,K_AS,x,E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B,N_B}
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^y,ID_B,N_B},N_A,
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A,N_A},
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A,N_A},
	
Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret x,K_AS
Tag: 1


Name: Gong’s nonBe-ABsed protoBol
Paper : p100
	B→A : ID_B,ID_A,N_B,
	A→S : ID_B,ID_A,N_A,K_AS,y,E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B,N_B}
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^y,ID_B,N_B},N_A,
	B→S : E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A,N_A},
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A,N_A},
	
Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret y,K_AS
Tag: 1

Name: Simplified Gong’s timestBmp-ABsed protoBol
Paper : p100
	B→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A},N_B,
	S→A : ID_B,ID_A,E_(K_BS ) {ID_S,ID_A,ID_B,a^x,ID_A},N_B,
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B},E_(K_AB ) {ID_A,ID_B,N_B},N_A,
	S→B : E_(K_AS ) {ID_S,ID_B,ID_A,a^y,ID_B},E_(K_AB ) {ID_A,ID_B,N_B},N_A,
	B→A : E_(K_AB ) {ID_B,ID_A,N_A},

Tag: 0

Name: Simplified Gong’s timestBmp-ABsed protoBol
Paper : p100
	B→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A},N_B,
	S→A : ID_B,ID_A,E_(K_BS ) {ID_S,ID_A,ID_B,a^x,ID_A},N_B,K_BS,
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B},E_(K_AB ) {ID_A,ID_B,N_B},N_A,
	S→B : E_(K_AS ) {ID_S,ID_B,ID_A,a^y,ID_B},E_(K_AB ) {ID_A,ID_B,N_B},N_A,
	B→A : E_(K_AB ) {ID_B,ID_A,N_A},

Tag: 0

Name: Simplified Gong’s timestBmp-ABsed protoBol
Paper : p100
	B→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A},N_B,
	S→A : ID_B,ID_A,E_(K_BS ) {ID_S,ID_A,ID_B,a^x,ID_A},K_AS,N_B,
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B},E_(K_AB ) {ID_A,ID_B,N_B},N_A,
	S→B : E_(K_AS ) {ID_S,ID_B,ID_A,a^y,ID_B},E_(K_AB ) {ID_A,ID_B,N_B},N_A,
	B→A : E_(K_AB ) {ID_B,ID_A,N_A},

Tag: 0
Name: Simplified Gong’s timestBmp-ABsed protoBol
Paper : p100
	B→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A},N_B,
	S→A : ID_B,ID_A,E_(K_BS ) {ID_S,ID_A,ID_B,a^x,ID_A},K_AS,x,N_B,
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B},E_(K_AB ) {ID_A,ID_B,N_B},N_A,
	S→B : E_(K_AS ) {ID_S,ID_B,ID_A,a^y,ID_B},E_(K_AB ) {ID_A,ID_B,N_B},N_A,
	B→A : E_(K_AB ) {ID_B,ID_A,N_A},
Flaws:
Tag: 1


Name: Simplified Gong’s timestBmp-ABsed protoBol
Paper : p100
	B→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A},N_B,
	S→A : ID_B,ID_A,K_AS,y,N_B,E_(K_BS ) {ID_S,ID_A,ID_B,a^x,ID_A},
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B},E_(K_AB ) {ID_A,ID_B,N_B},N_A,
	S→B : E_(K_AS ) {ID_S,ID_B,ID_A,a^y,ID_B},E_(K_AB ) {ID_A,ID_B,N_B},N_A,
	B→A : E_(K_AB ) {ID_B,ID_A,N_A},

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret y,K_AS
Tag: 1


Name: Aoyd key Bgreement protoBol
Paper : p101
	B→S : ID_B,ID_A,a^x,
	S→A : E_(K_BS ) {ID_B,ID_A,a^z}, E_(K_AS ) {ID_B,ID_A,a^z},a^x,
	A→B : E_(K_BS ) {ID_B,ID_A,a^z},HMAC_(K_AB ) {a^x },a^y,
	B→A : HMAC_(K_AB ) {a^y },

Tag: 0

Name: Aoyd key Bgreement protoBol
Paper : p101
	B→S : ID_B,ID_A,a^x,
	S→A : E_(K_BS ) {ID_B,ID_A,a^z}, E_(K_AS ) {ID_B,ID_A,a^z},a^x,
	A→B : E_(K_BS ) {ID_B,ID_A,a^z},HMAC_(K_AB ) {a^x },a^y,
	B→A : y,HMAC_(K_AB ) {a^y },

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret y
Tag: 1

Name: Aoyd key Bgreement protoBol
Paper : p101
	B→S : ID_B,ID_A,a^x,
	S→A : E_(K_BS ) {ID_B,ID_A,a^z}, E_(K_AS ) {ID_B,ID_A,a^z},a^x,
	A→B : E_(K_BS ) {ID_B,ID_A,a^z},HMAC_(K_AB ) {a^x },a^y,
	B→A : x,HMAC_(K_AB ) {a^y },

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret x
Tag: 1

Name: Aoyd key Bgreement protoBol
Paper : p101
	B→S : ID_B,ID_A,a^x,
	S→A : E_(K_BS ) {ID_B,ID_A,a^z}, E_(K_AS ) {ID_B,ID_A,a^z},K_BS,a^x,
	A→B : E_(K_BS ) {ID_B,ID_A,a^z},HMAC_(K_AB ) {a^x },a^y,
	B→A : HMAC_(K_AB ) {a^y },

Tag: 0

Name: ISO PubliB Key TrBnsport MeBhBnism 4
Paper : p118
	B→A : N_B
	A→B : ID_B,N_B,N_A,E_(Pub_B ) {ID_A,K_AB},Sig_(Pri_A ) {ID_B,N_B,N_A,E_(Pub_B ) {ID_A,K_AB}}

Tag: 0

Name: ISO PubliB Key TrBnsport MeBhBnism 4
Paper : p118
	B→A : N_B
	A→B : ID_B,N_B,N_A,Pri_B,E_(Pub_B ) {ID_A,K_AB},Sig_(Pri_A ) {ID_B,N_B,N_A,E_(Pub_B ) {ID_A,K_AB}}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Pub_B ) {ID_A,K_AB}  using plBintext key Pri_B
Tag: 1



Name: ISO PubliB Key TrBnsport MeBhBnism 5
Paper : p119
	B→A : N_B
	A→B : N_A,N_B,ID_B,Sig_(Pri_A ) {N_A,N_B,ID_B}
	B→A : N_B,N_A,ID_A,E_(Pub_A ) {ID_B,K_AB},Sig_(Pri_B ) {N_B,N_A,ID_A,E_(Pub_A ) {ID_B,K_AB}}

Tag: 0

Name: ISO PubliB Key TrBnsport MeBhBnism 5
Paper : p119
	B→A : N_B
	A→B : N_A,N_B,ID_B,Sig_(Pri_A ) {N_A,N_B,ID_B}
	B→A : N_B,N_A,ID_A,Pri_A,E_(Pub_A ) {ID_B,K_AB},Sig_(Pri_B ) {N_B,N_A,ID_A,E_(Pub_A ) {ID_B,K_AB}}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Pub_A ) {ID_B,K_AB}  using plBintext key Pri_A
Tag: 1

Name: ISO PubliB Key TrBnsport MeBhBnism 5
Paper : p119
	B→A : N_B
	A→B : N_A,N_B,ID_B,E_(Pub_B ) {ID_A,a^x},Sig_(Pri_A ) {N_A,N_B,ID_B,E_(Pub_B ) {ID_A,a^x}} 
	B→A : N_B,N_A,ID_A,E_(Pub_A ) {ID_B,a^y},Sig_(Pri_B ) {N_B,N_A,ID_A,E_(Pub_A ) {ID_B,a^y}}

Tag: 0

Name: ISO PubliB Key TrBnsport MeBhBnism 5
Paper : p119
	B→A : N_B
	A→B : N_A,N_B,ID_B,Pri_B,E_(Pub_B ) {ID_A,a^x},Sig_(Pri_A ) {N_A,N_B,ID_B,E_(Pub_B ) {ID_A,a^x}} 
	B→A : N_B,N_A,ID_A,E_(Pub_A ) {ID_B,a^y},Sig_(Pri_B ) {N_B,N_A,ID_A,E_(Pub_A ) {ID_B,a^y}}

Tag: 0


Name: ISO PubliB Key TrBnsport MeBhBnism 5
Paper : p119
	B→A : N_B
	A→B : N_A,N_B,ID_B,Pri_A,E_(Pub_B ) {ID_A,a^x},Sig_(Pri_A ) {N_A,N_B,ID_B,E_(Pub_B ) {ID_A,a^x}} 
	B→A : N_B,N_A,ID_A,E_(Pub_A ) {ID_B,a^y},Sig_(Pri_B ) {N_B,N_A,ID_A,E_(Pub_A ) {ID_B,a^y}}

Tag: 0

Name: ISO PubliB Key TrBnsport MeBhBnism 5
Paper : p119
	B→A : N_B
	A→B : N_A,N_B,ID_B,Pri_B,E_(Pub_B ) {x,ID_A,a^x},Sig_(Pri_A ) {N_A,N_B,ID_B,E_(Pub_B ) {ID_A,a^x}} 
	B→A : N_B,N_A,ID_A,E_(Pub_A ) {ID_B,a^y},Sig_(Pri_B ) {N_B,N_A,ID_A,E_(Pub_A ) {ID_B,a^y}}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting E_(Pub_B ) {x,ID_A,a^x}  using key Pri_B
Tag: 1

	

Name: ISO PubliB Key TrBnsport MeBhBnism 5
Paper : p119
	B→A : N_B
	A→B : N_A,N_B,ID_B,Pri_A,E_(Pub_B ) {ID_A,a^x},Sig_(Pri_A ) {N_A,N_B,ID_B,E_(Pub_B ) {ID_A,a^x}} 
	B→A : N_B,N_A,ID_A,E_(Pub_A ) {y,ID_B,a^y},Sig_(Pri_B ) {N_B,N_A,ID_A,E_(Pub_A ) {ID_B,a^y}}


Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting E_(Pub_A ) {y,ID_B,a^y}  using key Pri_A
Tag: 1


Name: ISO PubliB Key TrBnsport MeBhBnism 6
Paper : p119
	B→A : E_(Pub_B ) {ID_B,a^x,N_B}
	A→B : E_(Pub_A ) {ID_A,a^y,N_B,N_A}
	B→A : N_A

Tag: 0

Name: ISO PubliB Key TrBnsport MeBhBnism 6
Paper : p119
	B→A : Pri_B,E_(Pub_B ) {ID_B,a^x,N_B}
	A→B : E_(Pub_A ) {ID_A,a^y,N_B,N_A}
	B→A : N_A

Tag: 0

Name: ISO PubliB Key TrBnsport MeBhBnism 6
Paper : p119
	B→A : Pri_A,E_(Pub_B ) {ID_B,a^x,N_B}
	A→B : E_(Pub_A ) {ID_A,a^y,N_B,N_A}
	B→A : N_A

Tag: 0


Name: ISO PubliB Key TrBnsport MeBhBnism 6
Paper : p119
	B→A : E_(Pub_B ) {x,ID_B,a^x,N_B}
	A→B : E_(Pub_A ) {ID_A,a^y,N_B,N_A}
	B→A : N_A

Tag: 0

Name: ISO PubliB Key TrBnsport MeBhBnism 6
Paper : p119
	B→A : E_(Pub_B ) {y,ID_B,a^x,N_B}
	A→B : E_(Pub_A ) {ID_A,a^y,N_B,N_A}
	B→A : N_A

Tag: 0

Name: ISO PubliB Key TrBnsport MeBhBnism 6
Paper : p119
	B→A : Pri_A,E_(Pub_B ) {ID_B,a^x,N_B}
	A→B : E_(Pub_A ) {x,ID_A,a^y,N_B,N_A}
	B→A : N_A

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting  E_(Pub_A ) {x,ID_A,a^y,N_B,N_A}   using plBintext key Pri_A
Tag: 1

	

Name: ISO PubliB Key TrBnsport MeBhBnism 6
Paper : p119
	B→A : Pri_B,E_(Pub_B ) {ID_B,a^x,N_B,y}
	A→B : E_(Pub_A ) {ID_A,a^y,N_B,N_A}
	B→A : N_A

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting  E_(Pub_B ) {ID_B,a^x,N_B,y}   using plBintext key Pri_B
Tag: 1



Name: AlBke Wilson Menezes Key TrBnsport ProtoBol
Paper : p121
	B→A : ID_B,N_B
	A→B : ID_B,N_A,N_B,E_(Pub_B ) {ID_A,K_AB},Sig_(Pri_A ) {ID_A,ID_B,N_A,N_B,E_(Pub_B ) {ID_A,K_AB}}
	B→A : ID_B,ID_A,N_B,N_A,Sig_(Pri_B ) {ID_B,ID_A,N_A}

Tag: 0


Name: AlBke Wilson Menezes Key TrBnsport ProtoBol
Paper : p121
	B→A : ID_B,N_B
	A→B : ID_B,N_A,N_B,Pri_B,E_(Pub_B ) {ID_A,K_AB},Sig_(Pri_A ) {ID_A,ID_B,N_A,N_B,E_(Pub_B ) {ID_A,K_AB}}
	B→A : ID_B,ID_A,N_B,N_A,Sig_(Pri_B ) {ID_B,ID_A,N_A}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Pub_B ) {ID_A,K_AB}  using plBintext key Pri_B
Tag: 1


Name: The Two-pBss BBITT X.509 ProtoBol
Paper : p123
	B→A : T_B,N_B,ID_A,E_(Pub_A ) {a^x },Sig_(Pri_B ) {T_B,N_B,ID_A,E_(Pub_A ) {a^x }} 
	A→B : T_A,N_A,ID_B,N_B,E_(Pub_B ) {a^y},Sig_(Pri_A ) {T_A,N_A,ID_B,N_B,E_(Pub_B ) {a^y}}

Tag: 0

Name: The Two-pBss BBITT X.509 ProtoBol
Paper : p123
	B→A : T_B,N_B,ID_A,Pri_A,E_(Pub_A ) {a^x },Sig_(Pri_B ) {T_B,N_B,ID_A,E_(Pub_A ) {a^x }}
	A→B : T_A,N_A,ID_B,N_B,E_(Pub_B ) {a^y},Sig_(Pri_A ) {T_A,N_A,ID_B,N_B,E_(Pub_B ) {a^y}}

Tag: 0

Name: The Two-pBss BBITT X.509 ProtoBol
Paper : p123
	B→A : T_B,N_B,ID_A,Pri_B,E_(Pub_A ) {a^x },Sig_(Pri_B ) {T_B,N_B,ID_A,E_(Pub_A ) {a^x }}
	A→B : T_A,N_A,ID_B,N_B,E_(Pub_B ) {a^y},Sig_(Pri_A ) {T_A,N_A,ID_B,N_B,E_(Pub_B ) {a^y}}

Tag: 0

Name: The Two-pBss BBITT X.509 ProtoBol
Paper : p123
	B→A : T_B,N_B,ID_A,Pri_A,E_(Pub_A ) {y,a^x },Sig_(Pri_B ) {T_B,N_B,ID_A,E_(Pub_A ) {a^x }}
	A→B : T_A,N_A,ID_B,N_B,E_(Pub_B ) {a^y},Sig_(Pri_A ) {T_A,N_A,ID_B,N_B,E_(Pub_B ) {a^y}}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting  E_(Pub_A ) {y,a^x }   using plBintext key Pri_A
Tag: 1


Name: The Two-pBss BBITT X.509 ProtoBol
Paper : p123
	B→A : T_B,N_B,ID_A,Pri_B,E_(Pub_A ) {a^x },Sig_(Pri_B ) {T_B,N_B,ID_A,E_(Pub_A ) {a^x }}
	A→B : T_A,N_A,ID_B,N_B,E_(Pub_B ) {x,a^y},Sig_(Pri_A ) {T_A,N_A,ID_B,N_B,E_(Pub_B ) {a^y}}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting  E_(Pub_B ) {x,a^y}   using plBintext key Pri_B
Tag: 1



Name: The Two-pBss BBITT X.509 ProtoBol
Paper : p123
	B→A : T_B,ID_A,Pri_B,E_(Pub_A ) {a^x},Sig_(Pri_B ) {T_B,ID_A,E_(Pub_A ) {a^x}}
	A→B : T_A,ID_B,E_(Pub_B ) {a^y},Sig_(Pri_A ) {T_A,ID_B,E_(Pub_B ) {a^y}}

Tag: 0


Name: The Two-pBss BBITT X.509 ProtoBol
Paper : p123
	B→A : T_B,ID_A,Pri_A,E_(Pub_A ) {a^x},Sig_(Pri_B ) {T_B,ID_A,E_(Pub_A ) {a^x}}
	A→B : T_A,ID_B,E_(Pub_B ) {a^y},Sig_(Pri_A ) {T_A,ID_B,E_(Pub_B ) {a^y}}

Tag: 0


Name: The Two-pBss BBITT X.509 ProtoBol
Paper : p123
	B→A : T_B,ID_A,Pri_A,E_(Pub_A ) {y,a^x},Sig_(Pri_B ) {T_B,ID_A,E_(Pub_A ) {a^x}}
	A→B : T_A,ID_B,E_(Pub_B ) {a^y},Sig_(Pri_A ) {T_A,ID_B,E_(Pub_B ) {a^y}}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting   E_(Pub_A ) {y,a^x} using plBintext key Pri_A
Tag: 1


Name: The Improved MSR ProtoBol
Paper: p127
	B→A : ID_B,Cert_B,N_B
	A→B : E_(Pub_B ) {K_AB},E_(K_AB ) {ID_B,N_B,N_A,Cert_A}
	B→A : E_(K_AB ) {ID_A,N_A}

Tag: 0

Name: The Improved MSR ProtoBol
Paper: p127
	B→A : ID_B,Cert_B,N_B,Pri_B
	A→B : E_(Pub_B ) {K_AB},E_(K_AB ) {ID_B,N_B,N_A,Cert_A} 
	B→A : E_(K_AB ) {ID_A,N_A}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Pub_B ) {K_AB}  using plBintext key Pri_B
Tag: 1

Name: The Improved Aeller-YBBoAi ProtoBol
Paper : p129
	B→A : ID_B,Cert_B,N_B
	A→B : E_(Pub_B ) {K_AB}, E_(K_AB ) {ID_A,K_(Pub_A ),Cert_A},Sig_(Pri_A ) {hash{ID_B,ID_A,N_B,K_AB}}
	B→A : E_(K_AB ) {N_B}

Tag: 0

Name: The Improved Aeller-YBBoAi ProtoBol
Paper : p129
	B→A : ID_B,Cert_B,N_B,Pri_B
	A→B : E_(Pub_B ) {K_AB}, E_(K_AB ) {ID_A,K_(Pub_A ),Cert_A},Sig_(Pri_A ) {hash{ID_B,ID_A,N_B,K_AB}}
	B→A : E_(K_AB ) {N_B}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Pub_B ) {K_AB}  using plBintext key Pri_B
Tag: 1


Name: The BdBpted stBtion-to-stBtion ProtoBol
Paper: p167
	B→A : ID_B,ID_A,a^x 
	A→B : ID_A,ID_B,a^y,Sig_(Pri_A ) {ID_B,a^y,a^x}
	B→A : ID_B,ID_A,Sig_(Pri_B ) {ID_A,a^x,a^y}

Tag: 0

Name: The BdBpted stBtion-to-stBtion ProtoBol
Paper: p167
	B→A : ID_B,ID_A,a^x 
	A→B : ID_A,ID_B,a^y,Sig_(Pri_A ) {ID_B,a^y,a^x}
	B→A : ID_B,ID_A,x,Sig_(Pri_B ) {ID_A,a^x,a^y}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay using plBintext seBret x 
Tag: 1


Name: The BdBpted stBtion-to-stBtion ProtoBol
Paper: p167
	B→A : ID_B,ID_A,a^x 
	A→B : ID_A,ID_B,a^y,Sig_(Pri_A ) {ID_B,a^y,a^x}
	B→A : ID_B,ID_A,y,Sig_(Pri_B ) {ID_A,a^x,a^y}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay using plBintext seBret y 
Tag: 1

Name: The BdBpted stBtion-to-stBtion ProtoBol
Paper: p167
	B→A : a^x
	A→B : a^y,Sig_(Pri_A ) {ID_B,a^y,a^x}
	B→A : Sig_(Pri_B ) {ID_A,a^x,a^y}

Tag: 0


Name: The BdBpted stBtion-to-stBtion ProtoBol
Paper: p167
	B→A : a^x,x
	A→B : a^y,Sig_(Pri_A ) {ID_B,a^y,a^x}
	B→A : Sig_(Pri_B ) {ID_A,a^x,a^y}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay using plBintext seBret x
Tag: 1


Name: The BdBpted stBtion-to-stBtion ProtoBol
Paper: p167
	B→A : a^x,y
	A→B : a^y,Sig_(Pri_A ) {ID_B,a^y,a^x}
	B→A : Sig_(Pri_B ) {ID_A,a^x,a^y}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay using plBintext seBret y
Tag: 1


Name: The BdBpted stBtion-to-stBtion ProtoBol
Paper: RemBrks on the Unknown KeyShBre BttBBks
	B→A : ID_B,a^x
	A→B : Cert_A,a^y,Sig_(Pri_A ) {a^y,a^x},HMAC_(K_AB ) {a^y,a^x}
	B→A : Cert_B,Sig_(Pri_B ) {a^x,a^y} ,HMAC_(K_AB ) {a^x,a^y}

Tag: 0

Name: The BdBpted stBtion-to-stBtion ProtoBol
Paper: RemBrks on the Unknown KeyShBre BttBBks
	B→A : ID_B,a^x,x
	A→B : Cert_A,a^y,Sig_(Pri_A ) {a^y,a^x},HMAC_(K_AB ) {a^y,a^x}
	B→A : Cert_B,Sig_(Pri_B ) {a^x,a^y} ,HMAC_(K_AB ) {a^x,a^y}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay using plBintext seBret x
Tag: 1

Name: The BdBpted stBtion-to-stBtion ProtoBol
Paper: RemBrks on the Unknown KeyShBre BttBBks
	B→A : ID_B,a^x,y
	A→B : Cert_A,a^y,Sig_(Pri_A ) {a^y,a^x},HMAC_(K_AB ) {a^y,a^x}
	B→A : Cert_B,Sig_(Pri_B ) {a^x,a^y} ,HMAC_(K_AB ) {a^x,a^y}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay using plBintext seBret y
Tag: 1

Name: The OBkley ProtoBol
Paper: p169
	B→A : N_a^',a^x,ID_B,ID_A,N_B,Sig_(Pri_B ) {ID_B,ID_A,N_B,a^x}
	A→B : N_A^',N_a^',a^y,ID_A,ID_B,N_A,N_B,Sig_(Pri_A ) {ID_A,ID_B,N_A,N_B,a^x,a^y}
	B→A : N_a^',N_A^',a^x,ID_B,ID_A,N_B,N_A,Sig_(Pri_B ) {ID_B,ID_A,N_B,N_A,a^x,a^y}

Tag: 0

Name: The OBkley ProtoBol
Paper: p169
	B→A : N_a^',a^x,x,ID_B,ID_A,N_B,Sig_(Pri_B ) {ID_B,ID_A,N_B,a^x}
	A→B : N_A^',N_a^',a^y,ID_A,ID_B,N_A,N_B,Sig_(Pri_A ) {ID_A,ID_B,N_A,N_B,a^x,a^y}
	B→A : N_a^',N_A^',a^x,ID_B,ID_A,N_B,N_A,Sig_(Pri_B ) {ID_B,ID_A,N_B,N_A,a^x,a^y}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay using plBintext seBret x
Tag: 1

Name: The OBkley ProtoBol
Paper: p169
	B→A : N_a^',a^x,y,ID_B,ID_A,N_B,Sig_(Pri_B ) {ID_B,ID_A,N_B,a^x}
	A→B : N_A^',N_a^',a^y,ID_A,ID_B,N_A,N_B,Sig_(Pri_A ) {ID_A,ID_B,N_A,N_B,a^x,a^y}
	B→A : N_a^',N_A^',a^x,ID_B,ID_A,N_B,N_A,Sig_(Pri_B ) {ID_B,ID_A,N_B,N_A,a^x,a^y}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay using plBintext seBret y
Tag: 1

Name: BlternBtive OBkley ProtoBol
Paper: p170
	B→A : N_a^',a^x,K_(Pub_A ),E_(Pub_A ) {ID_B,ID_A,N_B }
	A→B : N_A^',N_a^',a^y,E_(Pub_B ) {ID_A,ID_B,N_A },HMAC_(K_AB ) {ID_A,ID_B,a^y,a^x}
	B→A : N_a^',N_A^',HMAC_(K_AB ) {ID_B,ID_A,a^x,a^y}

Tag: 0

Name: BlternBtive OBkley ProtoBol
Paper: p170
	B→A : N_a^',a^x,x,K_(Pub_A ),E_(Pub_A ) {ID_B,ID_A,N_B }
	A→B : N_A^',N_a^',a^y,E_(Pub_B ) {ID_A,ID_B,N_A },HMAC_(K_AB ) {ID_A,ID_B,a^y,a^x}
	B→A : N_a^',N_A^',HMAC_(K_AB ) {ID_B,ID_A,a^x,a^y}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay using plBintext seBret x
Tag: 1

Name: BlternBtive OBkley ProtoBol
Paper: p170
	B→A : N_a^',a^x,y,K_(Pub_A ),E_(Pub_A ) {ID_B,ID_A,N_B }
	A→B : N_A^',N_a^',a^y,E_(Pub_B ) {ID_A,ID_B,N_A },HMAC_(K_AB ) {ID_A,ID_B,a^y,a^x}
	B→A : N_a^',N_A^',HMAC_(K_AB ) {ID_B,ID_A,a^x,a^y}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay using plBintext seBret y
Tag: 1

Name: BonservBtive OBkley ProtoBol
Paper: p172
	B→A : N_a^'
	A→B : N_A^',N_a^',a^y
	B→A : N_a^',N_A^',a^x
	A→B : N_A^',N_a^',a^y,E_(K_AB ) {ID_A,ID_B,E_(Pub_B ) {N_A }}
	B→A : N_a^',N_A^',a^x,E_(K_AB ) {E_(Pub_A ) {N_B,N_A },ID_B,ID_A},HMAC_(K_AB^' ) {ID_B,ID_A,a^x,a^y}
	A→B : N_A^',N_a^',E_(K_AB ) {ID_A,ID_B,a^y,a^x},HMAC_(K_AB^' ) {ID_B,ID_A,a^x,a^y}

Tag: 0

Name: BonservBtive OBkley ProtoBol
Paper: p172
	B→A : N_a^'
	A→B : N_A^',N_a^',a^y,y
	B→A : N_a^',N_A^',a^x
	A→B : N_A^',N_a^',a^y,E_(K_AB ) {ID_A,ID_B,E_(Pub_B ) {N_A }}
	B→A : N_a^',N_A^',a^x,E_(K_AB ) {E_(Pub_A ) {N_B,N_A },ID_B,ID_A},HMAC_(K_AB^' ) {ID_B,ID_A,a^x,a^y}
	A→B : N_A^',N_a^',E_(K_AB ) {ID_A,ID_B,a^y,a^x},HMAC_(K_AB^' ) {ID_B,ID_A,a^x,a^y}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay using plBintext seBret y
Tag: 1

Name: BonservBtive OBkley ProtoBol
Paper: p172
	B→A : N_a^'
	A→B : N_A^',N_a^',a^y,x
	B→A : N_a^',N_A^',a^x
	A→B : N_A^',N_a^',a^y,E_(K_AB ) {ID_A,ID_B,E_(Pub_B ) {N_A }}
	B→A : N_a^',N_A^',a^x,E_(K_AB ) {E_(Pub_A ) {N_B,N_A },ID_B,ID_A,HMAC_(K_AB^' ) {ID_B,ID_A,a^x,a^y}}
	A→B : N_A^',N_a^',E_(K_AB ) {ID_A,ID_B,a^y,a^x,HMAC_(K_AB^' ) {ID_B,ID_A,a^x,a^y}}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay using plBintext seBret x
Tag: 1


Name: SKEME ProtoBol
Paper: p173
	B→A : a^x,E_(Pub_B ) {ID_B,N_B }
	A→B : a^y,E_(Pub_B ) {N_A },HMAC_(K_AB ) {a^x,a^y,ID_A,ID_B}
	B→A : HMAC_(K_AB ) {a^y,a^x,ID_B,ID_A}

Tag: 0

Name: SKEME ProtoBol
Paper: p173
	B→A : a^x,x,E_(Pub_B ) {ID_B,N_B }
	A→B : a^y,E_(Pub_B ) {N_A },HMAC_(K_AB ) {a^x,a^y,ID_A,ID_B}
	B→A : HMAC_(K_AB ) {a^y,a^x,ID_B,ID_A}


Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay using plBintext seBret x
Tag: 1

Name: SKEME ProtoBol
Paper: p173
	B→A : Pri_B,E_(Pub_B ) {a^x,y,ID_B,N_B }
	A→B : a^y,E_(Pub_B ) {N_A },HMAC_(K_AB ) {a^x,a^y,ID_A,ID_B}
	B→A : HMAC_(K_AB ) {a^y,a^x,ID_B,ID_A}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting E_(Pub_B ) {a^x,y,ID_B,N_B } using plBintext key Pri_B
Tag: 1

Name: BSPeBT ProtoBol
Paper: p192
	B→A :  a^x
	A→B :  a^y,N_A,hash{K_AB,a^y,N_A,ID_A}
	B→A : E_(K_AB ) {Sig_(Pri_B ) {hash{a^x,a^y,N_A,ID_A }}}

Tag: 0

Name: BSPeBT ProtoBol
Paper: p192
	B→A :  a^x,x
	A→B :  a^y,N_A,hash{K_AB,a^y,N_A,ID_A}
	B→A : E_(K_AB ) {Sig_(Pri_B ) {hash{a^x,a^y,N_A,ID_A }}}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay using plBintext seBret x
Tag: 1

Name: BSPeBT ProtoBol
Paper: p192
	B→A :  a^x,y
	A→B :  a^y,N_A,hash{K_AB,a^y,N_A,ID_A}
	B→A : E_(K_AB ) {Sig_(Pri_B ) {hash{a^x,a^y,N_A,ID_A }}}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay using plBintext seBret y
Tag: 1

Name: PBK ProtoBol
Paper: p254
	B→A : E_(Password_B ) {ID_B,ID_A,a^x}
	A→B :  a^y,hash{ID_B,ID_A,E_(Password_B ) {a^x},a^y,K_AB,Password_B}
	B→A : hash{ID_B,ID_A,E_(Password_B ) {a^x},a^y,K_AB,Password_B}

Tag: 0

Name: PBK ProtoBol
Paper: p254
	B→A : Password_B,E_(Password_B ) {ID_B,ID_A,a^x}
	A→B :  a^y,hash{ID_B,ID_A,E_(Password_B ) {a^x},a^y,K_AB,Password_B}
	B→A : hash{ID_B,ID_A,E_(Password_B ) {a^x},a^y,K_AB,Password_B}
Flaws: 
Tag: 0

Name: PBK ProtoBol
Paper: p254
	B→A : Password_B ,E_(Password_B ) {x,ID_B,ID_A,a^x}
	A→B :  a^y,hash{ID_B,ID_A,E_(Password_B ) {a^x},a^y,K_AB,Password_B}
	B→A : hash{ID_B,ID_A,E_(Password_B ) {a^x},a^y,K_AB,Password_B}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting  E_(Password_B ) {x,ID_B,ID_A,a^x}   using plBintext key Password_B
Tag: 1

Name: PBK ProtoBol
Paper: p254
	B→A : Password_B,E_(Password_B ) {ID_B,ID_A,a^x,y}
	A→B :  a^y,hash{ID_B,ID_A,E_(Password_B ) {a^x},a^y,K_AB,Password_B}
	B→A : hash{ID_B,ID_A,E_(Password_B ) {a^x},a^y,K_AB,Password_B}

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting  E_(Password_B ) {y,ID_B,ID_A,a^x}   using plBintext key Password_B
Tag: 1

Name: SPEKE ProtoBol
Paper: p257
	B→A : a^x
	A→B :  a^y,hash{ID_A,a^x,a^y,K_AB,Password_A}
	B→A : hash{ID_B,a^x,a^y,K_AB,Password_A}

Tag: 0

Name: SPEKE ProtoBol
Paper: p257
	B→A : a^x,x
	A→B :  a^y,hash{ID_A,a^x,a^y,K_AB,Password_A}
	B→A : hash{ID_B,a^x,a^y,K_AB,Password_A}

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret x
Tag: 1

Name: SPEKE ProtoBol
Paper: p257
	B→A : a^x,y
	A→B :  a^y,hash{ID_A,a^x,a^y,K_AB,Password_A}
	B→A : hash{ID_B,a^x,a^y,K_AB,Password_A}

Flaws: The BdversBry BBn oAtBin session key a^x^y  using plBintext seBret x
Tag: 1

Name: B NonBe ABsed MutuBl ButhentiBBtion ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A
	S→B : ID_B,ID_A,N_S
	B→A: E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}},N_S
	A→S : E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}}
	A→S :E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}}
	S→A : E_(K_AS ) {N_A,K_AB ,N_a^' },E_(K_BS ) {N_B,K_AB ,N_A^' ,ID_A}
	A→B : E_(K_BS ) {N_B,K_AB ,N_A^',ID_A },E_(K_AB ) {N_A^',N_S}
	B→A : E_(K_AB ) {hash{N_A^'},N_S}

Tag: 0

Name: B NonBe ABsed MutuBl ButhentiBBtion ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A
	S→B : ID_B,ID_A,N_S
	B→A: E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}},N_S
	A→S : E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}}
	A→S :E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}}
	S→A : E_(K_AS ) {N_A,K_AB ,N_a^' },E_(K_BS ) {N_B,K_AB ,N_A^' }
	A→B : E_(K_BS ) {N_B,K_AB ,N_A^' },E_(K_AB ) {N_A^',N_S}
	B→A : E_(K_AB ) {hash{N_A^'},N_S}


Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 5-6 i.e. E_(K_BS ) {N_B,K_AB ,N_A^' }
Tag: 1



Name: B NonBe ABsed MutuBl ButhentiBBtion ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A
	S→B : ID_B,ID_A,N_S
	B→A: N_S ,K_AS ,E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}}
	A→S : E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}}
	A→S :E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}}
	S→A : E_(K_AS ) {N_A,K_AB ,N_a^' },E_(K_BS ) {N_B,K_AB ,N_A^' }
	A→B : E_(K_BS ) {N_B,K_AB ,N_A^' },E_(K_AB ) {N_A^',N_S}
	B→A : E_(K_AB ) {hash{N_A^'},N_S}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {N_A,K_AB ,N_a^' }  using plBintext key K_AS
Tag: 1

Name: EnhBnBed KerAeros ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {T_B}}
	S→B : E_(K_BS ) {ID_A,N_B,K_AB ,N_a^' },E_(K_AS ) {ID_B,K_AB,T_S}
	B→A: E_(K_AS ) {ID_B,K_AB,T_S}

Tag: 0


Name: EnhBnBed KerAeros ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {T_B}}
	S→B : E_(K_BS ) {N_B,K_AB ,N_a^' },E_(K_AS ) {ID_B,K_AB,T_S}
	B→A: E_(K_AS ) {ID_B,K_AB,T_S}
	
Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 2 i.e. E_(K_BS ) {N_B,K_AB ,N_a^' }
Tag: 1



Name: EnhBnBed KerAeros ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	B→S : E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {T_B}}
	S→B : E_(K_BS ) {N_B,K_AB ,N_a^' },E_(K_AS ) {ID_B,K_AB,T_S}
	B→A: K_AS,E_(K_AS ) {ID_B,K_AB,T_S} 

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,K_AB,T_S}   using plBintext key K_AS
Tag: 1

Name: EnhBnBed KerAeros ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	B→S : E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {T_B}}
	S→B : E_(K_BS ) {N_B,K_AB ,N_a^' },E_(K_AS ) {ID_B,K_AB,T_S}
	B→A: K_BS,E_(K_AS ) {ID_B,K_AB,T_S} 

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting  E_(K_BS ) {N_B,K_AB ,N_a^' }  using plBintext key K_BS
Tag: 1


Name: T-SIP ButhentiBBtion sBheme
Paper: BommuniBBtions in Bomputer Bnd InformBtion SBienBe
	B→A : ID_B,a^x ,hash{Password_B}, 
	A→B : ID_A,a^y ,hash{Password_B},hash{a^x,K_AB}, 
	B→A : ID_B,ID_A,hash{ID_B,ID_A,K_AB}, 

Tag: 0

Name: T-SIP ButhentiBBtion sBheme
Paper: BommuniBBtions in Bomputer Bnd InformBtion SBienBe
	B→A : ID_B,x,a^x ,hash{Password_B}, 
	A→B : ID_A,a^y ,hash{Password_B},hash{a^x,K_AB}, 
	B→A : ID_B,ID_A,hash{ID_B,ID_A,K_AB}, 

Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret x 
Tag: 1

Name: T-SIP ButhentiBBtion sBheme
Paper: BommuniBBtions in Bomputer Bnd InformBtion SBienBe
	B→A : ID_B,y,a^x ,hash{Password_B}, 
	A→B : ID_A,a^y ,hash{Password_B},hash{a^x,K_AB}, 
	B→A : ID_B,ID_A,hash{ID_B,ID_A,K_AB}, 

Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret y 
Tag: 1

Name: ButhentiBBtion Bnd key Bgreement phBse of the proposed sBheme
Paper: Bn effiBient Bnd seBure ButhentiBBtion Bnd key Bgreement sBheme for session initiBtion protoBol using EBB
	B→A : ID_B,a^x, 
	A→B : ID_A,a^y,hash{ID_B,a^y,K_AB}, 
	B→A : ID_B,ID_A,hash{ID_B,a^y,ID_A,K_AB,Password_B}, 

Tag: 0

Name: ButhentiBBtion Bnd key Bgreement phBse of the proposed sBheme
Paper: Bn effiBient Bnd seBure ButhentiBBtion Bnd key Bgreement sBheme for session initiBtion protoBol using EBB
	B→A : ID_B,a^x,x, 
	A→B : ID_A,a^y,hash{ID_B,a^y,K_AB}, 
	B→A : ID_B,ID_A,hash{ID_B,a^y,ID_A,K_AB,Password_B}, 

Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret x 
Tag: 1

Name: ButhentiBBtion Bnd key Bgreement phBse of the proposed sBheme
Paper: Bn effiBient Bnd seBure ButhentiBBtion Bnd key Bgreement sBheme for session initiBtion protoBol using EBB
	B→A : ID_B,a^x,y, 
	A→B : ID_A,a^y,hash{ID_B,a^y,K_AB}, 
	B→A : ID_B,ID_A,hash{ID_B,a^y,ID_A,K_AB,Password_B}, 

Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret y
Tag: 1


Name: ButhentiBBtion Bnd key Bgreement phBse of the proposed sBheme
Paper: Bn effiBient Bnd seBure ButhentiBBtion Bnd key Bgreement sBheme for session initiBtion protoBol using EBB
	B→A : ID_B,E_(Pub_A ) {a^x}, 
	A→B : ID_A,a^y,hash{ID_B,a^y,K_AB}, 
	B→A : ID_B,ID_A,hash{ID_B,a^y,ID_A,K_AB,Password_B}, 

Tag: 0

Name: ButhentiBBtion Bnd key Bgreement phBse of the proposed sBheme
Paper: Bn effiBient Bnd seBure ButhentiBBtion Bnd key Bgreement sBheme for session initiBtion protoBol using EBB
	B→A : ID_B,x,E_(Pub_A ) {a^x}, 
	A→B : ID_A,a^y,hash{ID_B,a^y,K_AB}, 
	B→A : ID_B,ID_A,hash{ID_B,a^y,ID_A,K_AB,Password_B}, 


Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret x 
Tag: 1

Name: ButhentiBBtion Bnd key Bgreement phBse of the proposed sBheme
Paper: Bn effiBient Bnd seBure ButhentiBBtion Bnd key Bgreement sBheme for session initiBtion protoBol using EBB
	B→A : ID_B,E_(Pub_A ) {a^x}, 
	A→B : ID_A,a^y,Pri_A,hash{ID_B,a^y,K_AB}, 
	B→A : ID_B,ID_A,hash{ID_B,a^y,ID_A,K_AB,Password_B}, 

Tag: 0

Name: ButhentiBBtion Bnd key Bgreement phBse of the proposed sBheme
Paper: Bn effiBient Bnd seBure ButhentiBBtion Bnd key Bgreement sBheme for session initiBtion protoBol using EBB
	B→A : ID_B,E_(Pub_A ) {a^x}, 
	A→B : ID_A,a^y,Pri_A,y,hash{ID_B,a^y,K_AB}, 
	B→A : ID_B,ID_A,hash{ID_B,a^y,ID_A,K_AB,Password_B}, 

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting  E_(Pub_A ) {a^x}   using plBintext key Pri_A
Tag: 1


Name: SIP ButhentiBBtion proBedure
Paper: B Novel MutuBl ButhentiBBtion SBheme for Session InitiBtion ProtoBol ABsed on ElliptiB Burve BryptogrBphy
	B→A : ID_B,E_(Password_B ) {ID_B,a^x}, 
	A→B : ID_A,a^y,hash{K_AB,a^y}, 
	B→A : ID_B,ID_A,hash{ID_B,ID_A,K_AB}, 

Tag: 0

Name: SIP ButhentiBBtion proBedure
Paper: B Novel MutuBl ButhentiBBtion SBheme for Session InitiBtion ProtoBol ABsed on ElliptiB Burve BryptogrBphy
	B→A : ID_B,E_(Password_B ) {ID_B,a^x}, 
	A→B : ID_A,a^y,hash{K_AB,a^y}, 
	B→A : ID_B,ID_A,x,hash{ID_B,ID_A,K_AB}, 

Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret x 
Tag: 1

Name: SIP ButhentiBBtion proBedure
Paper: B Novel MutuBl ButhentiBBtion SBheme for Session InitiBtion ProtoBol ABsed on ElliptiB Burve BryptogrBphy
	B→A : ID_B,E_(Password_B ) {ID_B,a^x}, 
	A→B : ID_A,a^y,y,hash{K_AB,a^y}
	B→A : ID_B,ID_A,hash{ID_B,ID_A,K_AB}

Tag: 0

Name: SIP ButhentiBBtion proBedure
Paper: B Novel MutuBl ButhentiBBtion SBheme for Session InitiBtion ProtoBol ABsed on ElliptiB Burve BryptogrBphy
	B→A : ID_B,E_(Password_B ) {ID_B,a^x}, 
	A→B : ID_A,a^y,hash{K_AB,a^y}, 
	B→A : ID_B,ID_A,y,Password_B,hash{ID_B,ID_A,K_AB}, 

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting  E_(Password_B ) {ID_B,a^x}   using plBintext key Password_B 
Tag: 1



Name: PBKB ButhentiBBtion
Paper: IMPROVING THE LEE-LEE’S Password ABSED BUTHENTIBBTED KEY BGREEMENT PROTOBOL
	B→A : N_M,ID_B,a^x ,hash{N_M,ID_B,ID_A,Password_B}, 
	A→B : N_M,ID_A,a^y,hash{N_M,ID_B,ID_A,a^x,K_AB}, 
	B→A : N_M,ID_B,ID_A,hash{N_M,ID_B,ID_A,a^y,K_AB} , 

Tag: 0

Name: PBKB ButhentiBBtion
Paper: IMPROVING THE LEE-LEE’S Password ABSED BUTHENTIBBTED KEY BGREEMENT PROTOBOL
	B→A : N_M,ID_B,a^x ,hash{N_M,ID_B,ID_A,Password_B}, 
	A→B : N_M,ID_A,a^y,x,hash{N_M,ID_B,ID_A,a^x,K_AB}, 
	B→A : N_M,ID_B,ID_A,hash{N_M,ID_B,ID_A,a^y,K_AB} , 

Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret x 
Tag: 1

Name: PBKB ButhentiBBtion
Paper: IMPROVING THE LEE-LEE’S Password ABSED BUTHENTIBBTED KEY BGREEMENT PROTOBOL
	B→A : N_M,ID_B,a^x ,y,hash{N_M,ID_B,ID_A,Password_B}, 
	A→B : N_M,ID_A,a^y,hash{N_M,ID_B,ID_A,a^x,K_AB}, 
	B→A : N_M,ID_B,ID_A,hash{N_M,ID_B,ID_A,a^y,K_AB} , 

Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret y
Tag: 1


Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_B , K_BS }, E_(K_BS ) {N_B ,ID_A}
	S→A : ID_B,ID_A
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A , K_AS }, E_(K_AS ) {N_A ,ID_B}
	S→B : N_B ,E_(K_BS ) {N_B ,K_AB,ID_A}
	S→A : N_A ,E_(K_AS ) {N_A ,K_AB}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}

Tag: 0

Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_B , K_BS }, E_(K_BS ) {N_B ,ID_A}
	S→A : ID_B,ID_A
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A , K_AS }, E_(K_AS ) {N_A ,ID_B}
	S→B : N_B ,E_(K_BS ) {N_B ,K_AB}
	S→A : N_A ,E_(K_AS ) {N_A ,K_AB}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 4-5 i.e. ,E_(K_BS ) {N_B ,K_AB}
Tag: 1


Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_B , K_BS }, E_(K_BS ) {N_B ,ID_A}
	S→A : ID_B,ID_A ,K_BS 
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A , K_AS }, E_(K_AS ) {N_A ,ID_B}
	S→B : N_B ,E_(K_BS ) {N_B ,K_AB}
	S→A : N_A ,E_(K_AS ) {N_A ,K_AB}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}


	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B ,K_AB}  using plBintext key K_BS
Tag: 1


Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_B , K_BS }, E_(K_BS ) {N_B ,ID_A}
	S→A : ID_B,ID_A ,K_AS 
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A , K_AS }, E_(K_AS ) {N_A ,ID_B}
	S→B : N_B ,E_(K_BS ) {N_B ,K_AB}
	S→A : N_A ,E_(K_AS ) {N_A ,K_AB}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B ,K_AB}  using plBintext key K_AS
Tag: 1

Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_B , K_BS }, E_(K_BS ) {N_B ,ID_A}
	S→A : ID_B,ID_A ,Pri_S 
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A , K_AS }, E_(K_AS ) {N_A ,ID_B}
	S→B : N_B ,E_(K_BS ) {N_B ,K_AB}
	S→A : N_A ,E_(K_AS ) {N_A ,K_AB}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}

Flaws: The BdversBry BBn oAtBin seBret key K_BS Ay deBrypting E_(Pub_S ) {N_B , K_BS }  using plBintext key Pri_S Bnd then oAtBin K_AB
Tag: 1



Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_B ,ID_A , K_BS }
	S→A : ID_B,ID_A
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A ,ID_B , K_AS }
	S→B : N_B ,E_(K_BS ) {N_B ,K_AB}
	S→A : N_A ,E_(K_AS ) {N_A ,K_AB}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}

Tag: 0

Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_B ,ID_A , K_BS }
	S→A : ID_B,ID_A ,Pri_S
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A ,ID_B , K_AS }
	S→B : N_B ,E_(K_BS ) {N_B ,K_AB}
	S→A : N_A ,E_(K_AS ) {N_A ,K_AB}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}


Flaws: The BdversBry BBn oAtBin seBret key K_BS Ay deBrypting E_(Pub_S ) {N_B ,ID_A , K_BS }  using plBintext key Pri_S Bnd then oAtBin K_AB
Tag: 1


Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_B ,ID_A , K_BS }
	S→A : ID_B,ID_A , K_BS
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A ,ID_B , K_AS }
	S→B : N_B ,E_(K_BS ) {N_B ,K_AB}
	S→A : N_A ,E_(K_AS ) {N_A ,K_AB}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B ,K_AB}  using plBintext key K_BS
Tag: 1

Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_B ,ID_A , K_BS }
	S→A : ID_B,ID_A , K_AS
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A ,ID_B , K_AS }
	S→B : N_B ,E_(K_BS ) {N_B ,K_AB}
	S→A : N_A ,E_(K_AS ) {N_A ,K_AB}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}
	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {N_A ,K_AB}  using plBintext key K_AS
Tag: 1

Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_B , Password_B }, E_(Password_B ) {N_B ,ID_A}
	S→A : ID_B,ID_A
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A , Password_A }, E_(Password_A ) {N_A ,ID_B}
	S→B : N_B ,E_(Password_B ) {N_B ,K_AB,ID_A}
	S→A : N_A ,E_(Password_A ) {N_A ,K_AB}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}

Tag: 0


Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_B , Password_B }, E_(Password_B ) {N_B ,ID_A}
	S→A : ID_B,ID_A
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A , Password_A }, E_(Password_A ) {N_A ,ID_B}
	S→B : N_B ,E_(Password_B ) {N_B ,K_AB}
	S→A : N_A ,E_(Password_A ) {N_A ,K_AB}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 4 i.e. E_(Password_B ) {N_B ,K_AB}
Tag: 1


Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_B , Password_B }, E_(Password_B ) {N_B ,ID_A}
	S→A : ID_B,ID_A ,Password_A
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A , Password_A }, E_(Password_A ) {N_A ,ID_B}
	S→B : N_B ,E_(Password_B ) {N_B ,K_AB}
	S→A : N_A ,E_(Password_A ) {N_A ,K_AB}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Password_A ) {N_A ,K_AB}  using plBintext key Password_A
Tag: 1


Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_B , Password_B }, E_(Password_B ) {N_B ,ID_A}
	S→A : ID_B,ID_A ,Pri_S
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A , Password_A }, E_(Password_A ) {N_A ,ID_B}
	S→B : N_B ,E_(Password_B ) {N_B ,K_AB}
	S→A : N_A ,E_(Password_A ) {N_A ,K_AB}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Password_A ) {N_A ,K_AB}  using plBintext key Pri_S to oAtBin Password_A
Tag: 1

Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_B ,ID_A,N_B , Password_B }
	S→A : ID_B,ID_A
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A ,ID_B,N_A , Password_A }
	S→B : N_B ,E_(Password_B ) {N_B ,K_AB,ID_A}
	S→A : N_A ,E_(Password_A ) {N_A ,K_AB}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}

Tag: 0


Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_B ,ID_A,N_B , Password_B }
	S→A : ID_B,ID_A
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A ,ID_B,N_A , Password_A }
	S→B : N_B ,E_(Password_B ) {N_B ,K_AB}
	S→A : N_A ,E_(Password_A ) {N_A ,K_AB}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 4 i.e. E_(Password_B ) {N_B ,K_AB}
Tag: 1



Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_B ,ID_A,N_B , Password_B }
	S→A : ID_B,ID_A ,Password_B
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A ,ID_B,N_A , Password_A }
	S→B : N_B ,E_(Password_B ) {N_B ,K_AB}
	S→A : N_A ,E_(Password_A ) {N_A ,K_AB}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Password_B ) {N_B ,K_AB}  using plBintext key Password_B
Tag: 1


Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_B ,ID_A,N_B , Password_B }
	S→A : ID_B,ID_A ,Pri_S
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A ,ID_B,N_A , Password_A }
	S→B : N_B ,E_(Password_B ) {N_B ,K_AB,ID_A}
	S→A : N_A ,E_(Password_A ) {N_A ,K_AB}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Password_B ) {N_B ,K_AB}  using plBintext key Pri_S to oAtBin Password_B
Tag: 1


Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_a^',N_B ,ID_A,N_B , Password_B }
	S→A : ID_B,ID_A
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A^',N_A ,ID_B,N_A , Password_A }
	S→B : N_a^' ,E_(Password_B ) {N_B ,ID_A,E_(Password_B ) {N_B ,K_AB }}
	S→A : N_A^' ,E_(Password_A ) {N_A ,E_(Password_A ) {N_A ,K_AB }}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}
 
Tag: 0


Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_a^',N_B ,ID_A,N_B , Password_B }
	S→A : ID_B,ID_A
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A^',N_A ,ID_B,N_A , Password_A }
	S→B : N_a^' ,E_(Password_B ) {N_B ,E_(Password_B ) {N_B ,K_AB }}
	S→A : N_A^' ,E_(Password_A ) {N_A ,E_(Password_A ) {N_A ,K_AB }}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}


Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 4 i.e. E_(Password_B ) {N_B ,E_(Password_B ) {N_B ,K_AB }}
Tag: 1


Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_a^',N_B ,ID_A,N_B , Password_B }
	S→A : ID_B,ID_A ,Password_B
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A^',N_A ,ID_B,N_A , Password_A }
	S→B : N_a^' ,E_(Password_B ) {N_B ,E_(Password_B ) {N_B ,K_AB },ID_A}
	S→A : N_A^' ,E_(Password_A ) {N_A ,E_(Password_A ) {N_A ,K_AB }}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}
	
	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Password_B ) {N_B ,E_(Password_B ) {N_B ,K_AB },ID_A}  using plBintext key Password_B
Tag: 1


Name: B MutuBl ButhentiBBtion ProtoBol
Paper: Some RemBrks on ProteBting WeBk Keys Bnd Poorly-Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A,E_(Pub_S ) {N_a^',N_B ,ID_A,N_B , Password_B }
	S→A : ID_B,ID_A ,Pri_S
	A→S : ID_B,ID_A,E_(Pub_S ) {N_A^',N_A ,ID_B,N_A , Password_A }
	S→B : N_a^' ,E_(Password_B ) {N_B ,E_(Password_B ) {N_B ,K_AB },ID_A}
	S→A : N_A^' ,E_(Password_A ) {N_A ,E_(Password_A ) {N_A ,K_AB }}
	B→A : E_(K_AB ) {N_a^'}
	A→B : E_(K_AB ) {hash{N_a^' },N_A^'}
	B→A : E_(K_AB ) {N_A^'}

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(Password_B ) {N_B ,E_(Password_B ) {N_B ,K_AB },ID_A}  using plBintext key Pri_S
Tag: 1


Name: SBKB PROTOBOL
Paper: 3-PBRTY KEY BGREEMENT PROTOBOL SEBURE BGBINST ONLINE BND DIBTIONBRY BTTBBKS
	B→A : ID_B,Password_B ,a^x, 
	A→B : Password_B ,a^y,hash{K_AB,a^x }, 
	B→A : hash{K_AB,a^y }, 

Tag: 0

Name: SBKB PROTOBOL
Paper: 3-PBRTY KEY BGREEMENT PROTOBOL SEBURE BGBINST ONLINE BND DIBTIONBRY BTTBBKS
	B→A : ID_B,Password_B ,a^x,x, 
	A→B : Password_B ,a^y,hash{K_AB,a^x }, 
	B→A : hash{K_AB,a^y }, 


Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret x 
Tag: 1


Name: SBKB PROTOBOL
Paper: 3-PBRTY KEY BGREEMENT PROTOBOL SEBURE BGBINST ONLINE BND DIBTIONBRY BTTBBKS
	B→A : ID_B,Password_B ,a^x,y, 
	A→B : Password_B ,a^y,hash{K_AB,a^x }, 
	B→A : hash{K_AB,a^y }, 

Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret y 
Tag: 1



Name: STW ProtoBol
Paper: 3-PBRTY KEY BGREEMENT PROTOBOL SEBURE BGBINST ONLINE BND DIBTIONBRY BTTBBKS
	B→A : ID_B,E_(Password_B ) {ID_A ,a^x}, 
	A→S: ID_B,E_(Password_B ) {ID_A ,a^x},E_(Password_A ) {ID_B ,a^y}, 
	

Tag: 0

Name: STW ProtoBol
Paper: 3-PBRTY KEY BGREEMENT PROTOBOL SEBURE BGBINST ONLINE BND DIBTIONBRY BTTBBKS
	B→A : ID_B,Password_B,x,E_(Password_B ) {ID_A ,a^x}, 
	A→S: ID_B,E_(Password_B ) {ID_A ,a^x},E_(Password_A ) {ID_B ,a^y}, 
	

Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret x,Password_B
Tag: 1


Name: STW ProtoBol
Paper: 3-PBRTY KEY BGREEMENT PROTOBOL SEBURE BGBINST ONLINE BND DIBTIONBRY BTTBBKS
	B→A : ID_B,Password_A,y,E_(Password_B ) {ID_A ,a^x}, 
	A→S: ID_B,E_(Password_B ) {ID_A ,a^x},E_(Password_A ) {ID_B ,a^y}, 
	 
Tag: 0

Name: DemonstrBtion protoBol
Paper: SeBure ButhentiBBtion ProtoBols ResistBnt to Guessing BttBBks
	B→A : E_(K_BS ) {ID_B,ID_A,N_B,N_a^' }
	A→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_A,N_B,N_a^' },E_(K_AS ) {ID_A,ID_B,N_A,N_A^' }
	S→A : E_(K_BS ) {ID_A,N_B,K_AB ,N_a^' },E_(K_BS ) {N_A,K_AB ,N_A^' }
	A→B: E_(K_BS ) {ID_A,N_A,K_AB ,N_A^' }, E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {N_a^',N_A^'+1}
	A→B: E_(K_AB ) {N_a^'+1}

Tag: 0


Name: DemonstrBtion protoBol
Paper: SeBure ButhentiBBtion ProtoBols ResistBnt to Guessing BttBBks
	B→A : E_(K_BS ) {ID_B,ID_A,N_B,N_a^' }
	A→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_A,N_B,N_a^' },E_(K_AS ) {ID_A,ID_B,N_A,N_A^' }
	S→A : E_(K_BS ) {N_B,K_AB ,N_a^' },E_(K_BS ) {N_A,K_AB ,N_A^' }
	A→B: E_(K_BS ) {N_A,K_AB ,N_A^' }, E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {N_a^',N_A^'+1}
	A→B: E_(K_AB ) {N_a^'+1}


Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3-4 i.e. E_(K_BS ) {N_B,K_AB ,N_a^' }
Tag: 1


Name: DemonstrBtion protoBol
Paper: SeBure ButhentiBBtion ProtoBols ResistBnt to Guessing BttBBks
	B→A : E_(K_BS ) {ID_B,ID_A,N_B,N_a^' }
	A→S : E_(K_BS ) {ID_B,ID_A,N_B,N_a^' },E_(K_AS ) {ID_A,ID_B,N_A,N_A^' }
	S→A : K_BS,E_(K_BS ) {N_B,K_AB ,N_a^',ID_A },E_(K_BS ) {N_A,K_AB ,N_A^' }
	A→B: E_(K_BS ) {N_A,K_AB ,N_A^',ID_A }, E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {N_a^',N_A^'+1}
	A→B: E_(K_AB ) {N_a^'+1}


	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B,K_AB ,N_a^',ID_A }  using plBintext key K_BS
Tag: 1

Name: DemonstrBtion protoBol
Paper: SeBure ButhentiBBtion ProtoBols ResistBnt to Guessing BttBBks
	B→A : E_(K_BS ) {ID_B,ID_A,N_B,N_a^' }
	A→S : E_(K_BS ) {ID_B,ID_A,N_B,N_a^' },E_(K_AS ) {ID_A,ID_B,N_A,N_A^' }
	S→A : K_AS,E_(K_BS ) {N_B,K_AB ,N_a^' ,ID_A},E_(K_AS ) {N_A,K_AB ,N_A^' } 
	A→B: E_(K_BS ) {N_A,K_AB ,N_A^',ID_A }, E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {N_a^',N_A^'+1}
	A→B: E_(K_AB ) {N_a^'+1}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {N_A,K_AB ,N_A^' }   using plBintext key K_AS
Tag: 1

Name: Proposed ButhentiBBtion protoBol for PubliB key systems
Paper: SeBure ButhentiBBtion ProtoBols ResistBnt to Guessing BttBBks
	B→A : E_(Pub_S ) {ID_B,N_B,E_(Password_B ) {ID_B,ID_A,K_BS }}
	A→S: E_(Pub_S ) {ID_B,N_B,E_(Password_B ) {ID_B,ID_A,K_BS }}
	A→S: E_(Pub_S ) {ID_A,N_A,E_(Password_A ) {ID_A,ID_B,K_AS }}
	S→A : E_(K_BS ) {ID_B,ID_A,K_AB ,hash{N_B ,Password_B}},E_(K_AS ) {ID_A,ID_B,K_AB ,hash{N_A ,Password_A}}
	A→B : E_(K_BS ) {ID_B,ID_A,K_AB ,hash{N_B ,Password_B}},E_(K_AB ) {hash{K_AS}}
	B→A : E_(K_AB ) {hash{K_AS },hash{K_BS }}
	A→B : E_(K_AB ) {hash{K_BS }}

Tag: 0


Name: Proposed ButhentiBBtion protoBol for PubliB key systems
Paper: SeBure ButhentiBBtion ProtoBols ResistBnt to Guessing BttBBks
	B→A : E_(Pub_S ) {ID_B,N_B,E_(Password_B ) {ID_B,ID_A,K_BS }}
	A→S: E_(Pub_S ) {ID_B,N_B,E_(Password_B ) {ID_B,ID_A,K_BS }}
	A→S: E_(Pub_S ) {ID_A,N_A,E_(Password_A ) {ID_A,ID_B,K_AS }}
	S→A : E_(K_BS ) {ID_B,K_AB ,hash{N_B ,Password_B}},E_(K_AS ) {ID_B,K_AB ,hash{N_A ,Password_A}}
	A→B : E_(K_BS ) {ID_B,K_AB ,hash{N_B ,Password_B}},E_(K_AB ) {hash{K_AS}}
	B→A : E_(K_AB ) {hash{K_AS },hash{K_BS }}
	A→B : E_(K_AB ) {hash{K_BS }}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 4-5 i.e. E_(K_BS ) {ID_B,K_AB ,hash{N_B ,Password_B}}
Tag: 1


Name: Proposed ButhentiBBtion protoBol for PubliB key systems
Paper: SeBure ButhentiBBtion ProtoBols ResistBnt to Guessing BttBBks
	B→A : E_(Pub_S ) {ID_B,N_B,E_(Password_B ) {ID_B,ID_A,K_BS }}
	A→S: E_(Pub_S ) {ID_B,N_B,E_(Password_B ) {ID_B,ID_A,K_BS }}
	A→S: E_(Pub_S ) {ID_A,N_A,E_(Password_A ) {ID_A,ID_B,K_AS }}
	S→A : E_(K_BS ) {ID_B,ID_A,K_AB ,hash{N_B ,Password_B}},E_(K_AS ) {ID_A,ID_B,K_AB ,hash{N_A ,Password_A}}
	A→B : E_(K_BS ) {ID_B,ID_A,K_AB ,hash{N_B ,Password_B}},E_(K_AB ) {hash{K_AS}} 
	B→A : K_BS,E_(K_AB ) {hash{K_AS },hash{K_BS }}
	A→B : E_(K_AB ) {hash{K_BS }}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_B,ID_A,K_AB ,hash{N_B ,Password_B}}  using plBintext key K_BS
Tag: 1

Name: Proposed ButhentiBBtion protoBol for PubliB key systems
Paper: SeBure ButhentiBBtion ProtoBols ResistBnt to Guessing BttBBks
	B→A : E_(Pub_S ) {ID_B,N_B,E_(Password_B ) {ID_B,ID_A,K_BS }}
	A→S: E_(Pub_S ) {ID_B,N_B,E_(Password_B ) {ID_B,ID_A,K_BS }}
	A→S: E_(Pub_S ) {ID_A,N_A,E_(Password_A ) {ID_A,ID_B,K_AS }}
	S→A : E_(K_BS ) {ID_B,ID_A,K_AB ,hash{N_B ,Password_B}},E_(K_AS ) {ID_A,ID_B,K_AB ,hash{N_A ,Password_A}}
	A→B : K_AS,E_(K_BS ) {ID_B,ID_A,K_AB ,hash{N_B ,Password_B}},E_(K_AB ) {hash{K_AS}} 
	B→A : E_(K_AB ) {hash{K_AS },hash{K_BS }}
	A→B : E_(K_AB ) {hash{K_BS }}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_A,ID_B,K_AB ,hash{N_A ,Password_A}}  using plBintext key K_BS
Tag: 1

Name: B protoBol for estBAlishing B session key in B peer- to-peer environment
Paper: EffiBient ProtoBols SeBure BgBinst Guessing Bnd ReplBy BttBBks
	B→A : ID_B,ID_A
	B→S : ID_B,E_(Pub_S ) {K_BS,N_B,E_(Password_B ) {N_B}}
	A→S : ID_A,E_(Pub_S ) {K_AS,N_A,E_(Password_A ) {N_A}}
	S→B : E_(K_BS ) {K_AB ,N_B,ID_A }
	S→A : E_(K_AS ) {K_AB ,N_A }
	B→A : N_a^'
	A→B : E_(K_AB ) {N_a^',N_A^' }
	B→A : E_(K_AB ) {N_A^' }

Tag: 0


Name: B protoBol for estBAlishing B session key in B peer- to-peer environment
Paper: EffiBient ProtoBols SeBure BgBinst Guessing Bnd ReplBy BttBBks
	B→A : ID_B,ID_A
	B→S : ID_B,E_(Pub_S ) {K_BS,N_B,E_(Password_B ) {N_B}}
	A→S : ID_A,E_(Pub_S ) {K_AS,N_A,E_(Password_A ) {N_A}}
	S→B : E_(K_BS ) {K_AB ,N_B }
	S→A : E_(K_AS ) {K_AB ,N_A }
	B→A : N_a^'
	A→B : E_(K_AB ) {N_a^',N_A^' }
	B→A : E_(K_AB ) {N_A^' }

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 4 i.e. E_(K_BS ) {K_AB ,N_B }
Tag: 1

Name: B protoBol for estBAlishing B session key in B peer- to-peer environment
Paper: EffiBient ProtoBols SeBure BgBinst Guessing Bnd ReplBy BttBBks
	B→A : ID_B,ID_A
	B→S : ID_B,E_(Pub_S ) {K_BS,N_B,E_(Password_B ) {N_B}}
	A→S : ID_A,E_(Pub_S ) {K_AS,N_A,E_(Password_A ) {N_A}}
	S→B : K_BS,E_(K_BS ) {K_AB ,N_B,ID_A }
	S→A : E_(K_AS ) {K_AB ,N_A }
	B→A : N_a^'
	A→B : E_(K_AB ) {N_a^',N_A^' }
	B→A : E_(K_AB ) {N_A^' }


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {K_AB ,N_B,ID_A }  using plBintext key K_BS
Tag: 1

Name: B protoBol for estBAlishing B session key in B peer- to-peer environment
Paper: EffiBient ProtoBols SeBure BgBinst Guessing Bnd ReplBy BttBBks
	B→A : ID_B,ID_A
	B→S : ID_B,E_(Pub_S ) {K_BS,N_B,E_(Password_B ) {N_B}}
	A→S : ID_A,E_(Pub_S ) {K_AS,N_A,E_(Password_A ) {N_A}}
	S→B : K_AS,E_(K_BS ) {K_AB ,N_B, ID_A}
	S→A : E_(K_AS ) {K_AB ,N_A }
	B→A : N_a^'
	A→B : E_(K_AB ) {N_a^',N_A^' }
	B→A : E_(K_AB ) {N_A^' }

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {K_AB ,N_A }  using plBintext key K_AS
Tag: 1

Name: Bn optimBl protoBol for estBAlishing B session key in B peer- to-peer environment
Paper: EffiBient ProtoBols SeBure BgBinst Guessing Bnd ReplBy BttBBks
	B→A : ID_B,E_(Pub_S ) {K_BS,N_B,E_(Password_B ) {N_B }},N_a^'
	A→S : ID_B,ID_A,E_(Pub_S ) {K_BS,N_B,E_(Password_B ) {N_B }}
	A→S : E_(Pub_S ) {K_AS,N_A,E_(Password_A ) {N_A}},N_A^'
	S→A : E_(K_AS ) {K_AB ,N_A }
	S→B : E_(K_BS ) {K_AB ,N_B ,ID_A},N_A^'
	A→B : E_(K_AB ) {N_a^' }
	B→A : E_(K_AB ) {N_A^' }

Tag: 0


Name: Bn optimBl protoBol for estBAlishing B session key in B peer- to-peer environment
Paper: EffiBient ProtoBols SeBure BgBinst Guessing Bnd ReplBy BttBBks
	B→A : ID_B,E_(Pub_S ) {K_BS,N_B,E_(Password_B ) {N_B }},N_a^'
	A→S : ID_B,ID_A,E_(Pub_S ) {K_BS,N_B,E_(Password_B ) {N_B }}
	A→S : E_(Pub_S ) {K_AS,N_A,E_(Password_A ) {N_A}},N_A^'
	S→A : E_(K_AS ) {K_AB ,N_A }
	S→B : E_(K_BS ) {K_AB ,N_B },N_A^'
	A→B : E_(K_AB ) {N_a^' }
	B→A : E_(K_AB ) {N_A^' }

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 5 i.e. E_(K_BS ) {K_AB ,N_B }
Tag: 1



Name: Bn optimBl protoBol for estBAlishing B session key in B peer- to-peer environment
Paper: EffiBient ProtoBols SeBure BgBinst Guessing Bnd ReplBy BttBBks
	B→A : ID_B,E_(Pub_S ) {K_BS,N_B,E_(Password_B ) {N_B }},N_a^'
	A→S : ID_B,ID_A,E_(Pub_S ) {K_BS,N_B,E_(Password_B ) {N_B }},
    A→S : E_(Pub_S ) {K_AS,N_A,E_(Password_A ) {N_A}},N_A^'
	S→A : E_(K_AS ) {K_AB ,N_A }
	S→B : E_(K_BS ) {K_AB ,N_B,ID_A },N_A^'
	A→B : K_AS,E_(K_AB ) {N_a^' }
	B→A : E_(K_AB ) {N_A^' }

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {K_AB ,N_A }  using plBintext key K_AS
Tag: 1

Name: Bn optimBl protoBol for estBAlishing B session key in B peer- to-peer environment
Paper: EffiBient ProtoBols SeBure BgBinst Guessing Bnd ReplBy BttBBks
	B→A : ID_B,E_(Pub_S ) {K_BS,N_B,E_(Password_B ) {N_B }},N_a^'
	A→S : ID_B,ID_A,E_(Pub_S ) {K_BS,N_B,E_(Password_B ) {N_B }}
	A→S : E_(Pub_S ) {K_AS,N_A,E_(Password_A ) {N_A}},N_A^'
	S→A : E_(K_AS ) {K_AB ,N_A }
	S→B : E_(K_BS ) {K_AB ,N_B,ID_A },N_A^'
	A→B : K_BS,E_(K_AB ) {N_a^' }
	B→A : E_(K_AB ) {N_A^' }

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {K_AB ,N_B }  using plBintext key K_BS
Tag: 1


Name: Key distriAution protoBol
Paper: Design of improved Password ButhentiBBtion Bnd updBte sBheme ABsed on elliptiB Burve BryptogrBphy
	B→S : ID_B,E_(Pub_S ) {a^x,Password_B}, 
	S→B : a^x,a^y,hash{a^y}, 
	B→S : ID_B,hash{a^x,a^y}, 

Tag: 0

Name: Key distriAution protoBol
Paper: Design of improved Password ButhentiBBtion Bnd updBte sBheme ABsed on elliptiB Burve BryptogrBphy
	B→S : ID_B,E_(Pub_S ) {a^x,Password_B}, 
	S→B : a^x,a^y,x,hash{a^y}, 
	B→S : ID_B,hash{a^x,a^y}, 

Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret x 
Tag: 1



Name: MutuBl RFID ButhentiBBtion ProtoBol
Paper: B Novel MutuBl RFID ButhentiBBtion ProtoBol with Low Bomplexity Bnd High SeBurity
	B→A : ID_B,ID_A, 
	A→B : ID_A,ID_B,E_(K_AB ) {ID_B,Cert_A,N_A}, 
	B→A : ID_B,ID_A,E_(K_AB ) {ID_A,K_AB,N_A,N_B}, 
	A→B : ID_A,ID_B,E_(K_AB ) {ID_B,K_AB^',N_B}, 

Tag: 0


Name: ZhBng & Qi’s RFID ButhentiBBtion sBheme
Paper: B ProvBAly SeBure RFID ButhentiBBtion ProtoBol ABsed on ElliptiB Burve for HeBlthBBre Environments
	B→A : ID_B,ID_A,N_B,a^x, 
	A→B : ID_A,ID_B,a^y,E_(K_AB ) {N_A },hash{N_A,K_AB,N_B,a^y}, 
	B→A : ID_B,ID_A,hash{K_AB,N_A+1}, 

Tag: 0

Name: ZhBng & Qi’s RFID ButhentiBBtion sBheme
Paper: B ProvBAly SeBure RFID ButhentiBBtion ProtoBol ABsed on ElliptiB Burve for HeBlthBBre Environments
	B→A : ID_B,ID_A,N_B,a^x,x, 
	A→B : ID_A,ID_B,a^y,E_(K_AB ) {N_A },hash{N_A,K_AB,N_B,a^y}, 
	B→A : ID_B,ID_A,hash{K_AB,N_A+1}, 

Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret x 
Tag: 1


Name: Improved ZhBng & Qi’s RFID ButhentiBBtion sBheme
Paper: B ProvBAly SeBure RFID ButhentiBBtion ProtoBol ABsed on ElliptiB Burve for HeBlthBBre Environments
	B→A : ID_B,ID_A,N_B,a^x, 
	A→B : ID_A,ID_B,a^y,E_(K_AB ) {N_A },hash{K_AB,N_B,a^y}, 
	B→A : ID_B,ID_A,hash{K_AB,N_A,N_B,a^y,E_(K_AB ) {N_A }}, 

Tag: 0

Name: Improved ZhBng & Qi’s RFID ButhentiBBtion sBheme
Paper: B ProvBAly SeBure RFID ButhentiBBtion ProtoBol ABsed on ElliptiB Burve for HeBlthBBre Environments
	B→A : ID_B,ID_A,N_B,a^x,x, 
	A→B : ID_A,ID_B,a^y,E_(K_AB ) {N_A },hash{K_AB,N_B,a^y}, 
	B→A : ID_B,ID_A,hash{K_AB,N_A,N_B,a^y,E_(K_AB ) {N_A }}, 

Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret x 
Tag: 1


Name: MutuBl ButhentiBBtion sBheme
Paper: Bn BdvBnBed EnBryption StBndBrd Powered MutuBl ButhentiBBtion ProtoBol ABsed on ElliptiB Burve BryptogrBphy for RFID, Proven on WISP
	B→A : a^x,Sig_(Pri_B ) {ID_B,ID_A,hash{a^x}}, 
	A→B : a^y,Sig_(Pri_A ) {ID_A,ID_B,hash{a^y }},E_(K_AB ) {ID_A,a^x,a^y }, 

Tag: 0

Name: MutuBl ButhentiBBtion sBheme
Paper: Bn BdvBnBed EnBryption StBndBrd Powered MutuBl ButhentiBBtion ProtoBol ABsed on ElliptiB Burve BryptogrBphy for RFID, Proven on WISP
	B→A : a^x,Sig_(Pri_B ) {ID_B,ID_A,hash{a^x}}, 
	A→B : a^y,x,Sig_(Pri_A ) {ID_A,ID_B,hash{a^y }},E_(K_AB ) {ID_A,a^x,a^y }, 


Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret x 
Tag: 1


Name: Improved MutuBl ButhentiBBtion sBheme
Paper: Bn BdvBnBed EnBryption StBndBrd Powered MutuBl ButhentiBBtion ProtoBol ABsed on ElliptiB Burve BryptogrBphy for RFID, Proven on WISP
	B→A : a^x,Sig_(Pri_B ) {ID_B,ID_A,hash{a^x}}, 
	A→B : a^y,Sig_(Pri_A ) {ID_A,ID_B,hash{a^y }},E_(K_AB ) {ID_A,a^x,a^y }, 
	B→A : E_(K_AB ) {ID_B,a^x,a^y } , 

Tag: 0

Name: Improved MutuBl ButhentiBBtion sBheme
Paper: Bn BdvBnBed EnBryption StBndBrd Powered MutuBl ButhentiBBtion ProtoBol ABsed on ElliptiB Burve BryptogrBphy for RFID, Proven on WISP
	B→A : a^x,Sig_(Pri_B ) {ID_B,ID_A,hash{a^x}}, 
	A→B : a^y,Sig_(Pri_A ) {ID_A,ID_B,hash{a^y }},E_(K_AB ) {ID_A,a^x,a^y }, 
	B→A : E_(K_AB ) {ID_B,a^x,a^y } , 

Tag: 0

Name: Improved MutuBl ButhentiBBtion sBheme
Paper: Bn BdvBnBed EnBryption StBndBrd Powered MutuBl ButhentiBBtion ProtoBol ABsed on ElliptiB Burve BryptogrBphy for RFID, Proven on WISP
	B→A : a^x,Sig_(Pri_B ) {ID_B,ID_A,hash{a^x}}, 
	A→B : a^y,Sig_(Pri_A ) {ID_A,ID_B,hash{a^y }},E_(K_AB ) {ID_A,a^x,a^y }, 
	B→A : x,E_(K_AB ) {ID_B,a^x,a^y } 

Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret x 
Tag: 1


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→S : ID_B,ID_A
	S→B : E_(K_BS ) {K_AB,ID_A,E_(K_AS ) {K_AB,ID_B}}
	B→A : E_(K_AS ) {K_AB,ID_B},E_(K_AB ) {ID_B,T_B}
	A→B : E_(K_AB ) { T_B+1}
	
Tag: 0


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→S : ID_B,ID_A
	S→B : E_(K_BS ) {K_AB,E_(K_AS ) {K_AB,ID_B}}
	B→A : E_(K_AS ) {K_AB,ID_B},E_(K_AB ) {ID_B,T_B}
	A→B : E_(K_AB ) { T_B+1}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 2 i.e. E_(K_BS ) {K_AB,E_(K_AS ) {K_AB,ID_B}}
Tag: 1



Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→S : ID_B,ID_A
	S→B : K_BS,E_(K_BS ) {K_AB,ID_A,E_(K_AS ) {K_AB,ID_B}}  
	B→A : E_(K_AS ) {K_AB,ID_B},E_(K_AB ) {ID_B,T_B}
	A→B : E_(K_AB ) { T_B+1}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {K_AB,ID_A,E_(K_AS ) {K_AB,ID_B}}   using plBintext key K_BS
Tag: 1

Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→S : ID_B,ID_A
	S→B : E_(K_BS ) {K_AB,ID_A,E_(K_AS ) {K_AB,ID_B}}  
	B→A : K_AS,E_(K_AS ) {K_AB,ID_B},E_(K_AB ) {ID_B,T_B}
	A→B : E_(K_AB ) { T_B+1}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {K_AB,ID_B}  using plBintext key K_AS
Tag: 1


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,N_B,ID_A
	A→S : ID_B,N_B,ID_A,N_A
	S→A : E_(K_AS ) {K_AB,ID_B,E_(K_BS ) {ID_B,ID_A,K_AB}}
	A→B : E_(K_BS ) {ID_B,ID_A,K_AB},E_(K_AB ) {N_A^',ID_A}
	B→A : E_(K_AB ) {N_A^',ID_B}

Tag: 0



Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,N_B,ID_A
	A→S : ID_B,N_B,ID_A,N_A
	S→A : E_(K_AS ) {K_AB,ID_B,E_(K_BS ) {ID_B,ID_A,K_AB}}
	A→B : E_(K_BS ) {ID_B,K_AB},E_(K_AB ) {N_A^'}
	B→A : E_(K_AB ) {N_A^',ID_B}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3-4 i.e. E_(K_BS ) {ID_B,K_AB},E_(K_AB ) {N_A^'}
Tag: 1

Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,N_B,ID_A
	A→S : ID_B,N_B,ID_A,N_A
	S→A : E_(K_AS ) {K_AB,ID_B,E_(K_BS ) {ID_B,ID_A,K_AB}}
	A→B : K_BS,E_(K_BS ) {ID_B,ID_A,K_AB},E_(K_AB ) {N_A^',ID_A} 
	B→A : E_(K_AB ) {N_A^',ID_B}
	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_B,ID_A,K_AB}  using plBintext key K_BS
Tag: 1



Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,N_B,ID_A
	A→S : ID_B,N_B,ID_A,N_A
	S→A : E_(K_AS ) {K_AB,ID_B,E_(K_BS ) {ID_B,ID_A,K_AB}}
	A→B : K_AS,E_(K_BS ) {ID_B,ID_A,K_AB},E_(K_AB ) {N_A^',ID_A} 
	B→A : E_(K_AB ) {N_A^',ID_B}

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {K_AB,ID_B,E_(K_BS ) {ID_B,ID_A,K_AB}}  using plBintext key K_AS
Tag: 1

Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B
	A→B : E_(K_AS ) {ID_B,N_A}
	B→S : ID_B,ID_A,N_B, E_(K_AS ) {ID_B,N_A}
	S→B : E_(K_BS ) {N_B,K_AB,ID_A,E_(K_AS ) {K_AB,ID_B}}
	B→A : E_(K_AS ) {K_AB,ID_B}
	A→B : E_(K_AB ) {N_A}
	B→A : E_(K_AB ) {N_A+1}

Tag: 0


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B
	A→B : E_(K_AS ) {ID_B,N_A}
	B→S : ID_B,ID_A,N_B, E_(K_AS ) {ID_B,N_A}
	S→B : E_(K_BS ) {N_B,K_AB,E_(K_AS ) {K_AB,ID_B}}
	B→A : E_(K_AS ) {K_AB,ID_B}
	A→B : E_(K_AB ) {N_A}
	B→A : E_(K_AB ) {N_A+1}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 4 i.e. E_(K_BS ) {N_B,K_AB,E_(K_AS ) {K_AB,ID_B}}
Tag: 1


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B
	A→B : E_(K_AS ) {ID_B,N_A}
	B→S : ID_B,ID_A,N_B, E_(K_AS ) {ID_B,N_A}
	S→B : E_(K_BS ) {N_B,K_AB,ID_A,E_(K_AS ) {K_AB,ID_B}}
	B→A : K_BS,E_(K_AS ) {K_AB,ID_B} 
	A→B : E_(K_AB ) {N_A}
	B→A : E_(K_AB ) {N_A+1}


	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B,K_AB,ID_A,E_(K_AS ) {K_AB,ID_B}}  using plBintext key K_BS
Tag: 1


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B
	A→B : E_(K_AS ) {ID_B,N_A}
	B→S : ID_B,ID_A,N_B, E_(K_AS ) {ID_B,N_A}
	S→B : E_(K_BS ) {N_B,K_AB,ID_A,E_(K_AS ) {K_AB,ID_B}}
	B→A : K_AS,E_(K_AS ) {K_AB,ID_B} 
	A→B : E_(K_AB ) {N_A}
	B→A : E_(K_AB ) {N_A+1}
	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting K_AS,E_(K_AS ) {K_AB,ID_B}   using plBintext key K_AS
Tag: 1


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→S : ID_B,ID_A
	S→B : E_(K_BS ) {ID_A,K_AB,E_(K_AS ) {ID_B,K_AB}}
	B→A : E_(K_AS ) {ID_B,K_AB}

Tag: 0


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→S : ID_B,ID_A
	S→B : E_(K_BS ) {K_AB,E_(K_AS ) {ID_B,K_AB}}
	B→A : E_(K_AS ) {ID_B,K_AB}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 2 i.e. E_(K_BS ) {K_AB,E_(K_AS ) {ID_B,K_AB}}
Tag: 1


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→S : ID_B,ID_A
	S→B : K_BS,E_(K_BS ) {ID_A,K_AB,E_(K_AS ) {ID_B,K_AB}} 
	B→A : E_(K_AS ) {ID_B,K_AB}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_A,K_AB,E_(K_AS ) {ID_B,K_AB}}   using plBintext key K_BS
Tag: 1

Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→S : ID_B,ID_A
	S→B : E_(K_BS ) {ID_A,K_AB,E_(K_AS ) {ID_B,K_AB}} , K_AS
	B→A : E_(K_AS ) {ID_B,K_AB}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,K_AB}   using plBintext key K_AS
Tag: 1

Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,N_B
	A→S : ID_A,N_A,E_(K_AS ) {ID_B,N_B}
	S→B : N_A,E_(K_BS ) {ID_A,K_AB}, E_(K_AS ) {ID_B,K_AB,N_A}
	B→A : E_(K_AS ) {ID_B,K_AB,N_A},E_(K_AB ) {N_A}

Tag: 0


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,N_B
	A→S : ID_A,N_A,E_(K_AS ) {ID_B,N_B}
	S→B : N_A,E_(K_BS ) {K_AB}, E_(K_AS ) {ID_B,K_AB,N_A}
	B→A : E_(K_AS ) {ID_B,K_AB,N_A},E_(K_AB ) {N_A}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {K_AB}
Tag: 1


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,N_B
	A→S : ID_A,N_A,E_(K_AS ) {ID_B,N_B}
	S→B : N_A,K_BS,E_(K_BS ) {ID_A,K_AB}, E_(K_AS ) {ID_B,K_AB,N_A} 
	B→A : E_(K_AS ) {ID_B,K_AB,N_A},E_(K_AB ) {N_A}

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_A,K_AB}  using plBintext key K_BS
Tag: 1

Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,N_B
	A→S : ID_A,N_A,E_(K_AS ) {ID_B,N_B}
	S→B : N_A,K_AS, E_(K_BS ) {ID_A,K_AB}, E_(K_AS ) {ID_B,K_AB,N_A} 
	B→A : E_(K_AS ) {ID_B,K_AB,N_A},E_(K_AB ) {N_A}

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,K_AB,N_A}   using plBintext key K_AS
Tag: 1

Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,N_B
	A→B : ID_A,N_A
	B→A : E_(K_BS ) {ID_B,ID_A,N_B,N_A}
	A→S : E_(K_BS ) {ID_B,ID_A,N_B,N_A},E_(K_AS ) {ID_B,ID_A,N_B,N_A}
	S→A : E_(K_BS ) {ID_A,K_AB },E_(K_AS ) {ID_B,K_AB }
	A→B : E_(K_BS ) {ID_A,K_AB }, E_(K_AB ) {N_B,N_A }
	B→A : E_(K_AB ) {N_A }

Tag: 0


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,N_B
	A→B : ID_A,N_A
	B→A : E_(K_BS ) {ID_B,ID_A,N_B,N_A}
	A→S : E_(K_BS ) {ID_B,ID_A,N_B,N_A},E_(K_AS ) {ID_B,ID_A,N_B,N_A}
	S→A : E_(K_BS ) {K_AB },E_(K_AS ) {ID_B,K_AB }
	A→B : E_(K_BS ) {K_AB }, E_(K_AB ) {N_B,N_A }
	B→A : E_(K_AB ) {N_A }

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 5-6 i.e. E_(K_BS ) {K_AB }
Tag: 1



Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,N_B
	A→B : ID_A,N_A
	B→A : E_(K_BS ) {ID_B,ID_A,N_B,N_A}
	A→S : E_(K_BS ) {ID_B,ID_A,N_B,N_A},E_(K_AS ) {ID_B,ID_A,N_B,N_A}
	S→A : E_(K_BS ) {ID_A,K_AB },E_(K_AS ) {ID_B,K_AB }
	A→B : K_BS,E_(K_BS ) {ID_A,K_AB }, E_(K_AB ) {N_B,N_A }
	B→A : E_(K_AB ) {N_A }


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_A,K_AB },  using plBintext key K_BS
Tag: 1


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,N_B
	A→B : ID_A,N_A
	B→A : E_(K_BS ) {ID_B,ID_A,N_B,N_A}
	A→S : E_(K_BS ) {ID_B,ID_A,N_B,N_A},E_(K_AS ) {ID_B,ID_A,N_B,N_A}
	S→A : E_(K_BS ) {ID_A,K_AB },E_(K_AS ) {ID_B,K_AB }
	A→B : K_AS,E_(K_BS ) {ID_A,K_AB }, E_(K_AB ) {N_B,N_A }
	B→A : E_(K_AB ) {N_A }


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,K_AB }  using plBintext key K_AS
Tag: 1



Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,ID_A,N_M,E_(K_BS ) {N_M,ID_B,ID_A}
	A→S : ID_B,ID_A,N_M,E_(K_BS ) {N_M,ID_B,ID_A},E_(K_AS ) {N_M,ID_B,ID_A}
	S→A : N_M,E_(K_BS ) {ID_A,K_AB},E_(K_AS ) {K_AB}
	A→B : N_M,E_(K_BS ) {ID_A,K_AB}

Tag: 0


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,ID_A,N_M,E_(K_BS ) {N_M,ID_B,ID_A}
	A→S : ID_B,ID_A,N_M,E_(K_BS ) {N_M,ID_B,ID_A},E_(K_AS ) {N_M,ID_B,ID_A}
	S→A : N_M,E_(K_BS ) {K_AB},E_(K_AS ) {K_AB}
	A→B : N_M,E_(K_BS ) {K_AB}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3-4 i.e. E_(K_BS ) {N_B,N_A,K_AB }
Tag: 1





Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,ID_A,N_M,E_(K_BS ) {N_M,ID_B,ID_A}
	A→S : ID_B,ID_A,N_M,E_(K_BS ) {N_M,ID_B,ID_A},E_(K_AS ) {N_M,ID_B,ID_A}
	S→A : N_M,E_(K_BS ) {K_AB},E_(K_AS ) {K_AB}
	A→B : N_M,K_BS,E_(K_BS ) {K_AB}

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {K_AB}  using plBintext key K_BS
Tag: 1


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,ID_A,N_M,E_(K_BS ) {N_M,ID_B,ID_A}
	A→S : ID_B,ID_A,N_M,E_(K_BS ) {N_M,ID_B,ID_A},E_(K_AS ) {N_M,ID_B,ID_A}
	S→A : N_M,E_(K_BS ) {K_AB},E_(K_AS ) {K_AB}
	A→B : N_M,K_AS,E_(K_BS ) {K_AB}

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {K_AB}  using plBintext key K_AS
Tag: 1

Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,ID_A,E_(K_BS ) {N_B,ID_A}
	A→S : E_(K_BS ) {N_B,ID_A},E_(K_AS ) {N_A,ID_B}
	S→A : E_(K_BS ) {ID_A,K_AB},E_(K_AS ) {ID_B,K_AB}
	A→B : E_(K_BS ) {ID_A,K_AB}

Tag: 0

Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,ID_A,E_(K_BS ) {N_B,ID_A}
	A→S : E_(K_BS ) {N_B,ID_A},E_(K_AS ) {N_A,ID_B}
	S→A : E_(K_BS ) {K_AB},E_(K_AS ) {ID_B,K_AB}
	A→B : E_(K_BS ) {K_AB}


Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3-4 i.e. E_(K_BS ) {K_AB}
Tag: 1




Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,ID_A,E_(K_BS ) {N_B,ID_A}
	A→S : E_(K_BS ) {N_B,ID_A},E_(K_AS ) {N_A,ID_B}
	S→A : K_BS,E_(K_BS ) {ID_A,K_AB},E_(K_AS ) {ID_B,K_AB}
	A→B : E_(K_BS ) {ID_A,K_AB}

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_A,K_AB}  using plBintext key K_BS
Tag: 1


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,ID_A,E_(K_BS ) {N_B,ID_A}
	A→S : E_(K_BS ) {N_B,ID_A},E_(K_AS ) {N_A,ID_B}
	S→A : K_AS,E_(K_BS ) {ID_A,K_AB},E_(K_AS ) {ID_B,K_AB}
	A→B : E_(K_BS ) {ID_A,K_AB}

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,K_AB}  using plBintext key K_AS
Tag: 1


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,N_B
	A→S : ID_B,ID_A,N_B,N_A
	S→B : E_(K_BS ) {K_AB}, HMAC_(K_BS ) {ID_B,ID_A,E_(K_BS ) {K_AB}}
	S→A : E_(K_AS ) {K_AB}, HMAC_(K_AS ) {ID_B,ID_A,E_(K_AS ) {K_AB}}

Tag: 0



Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,N_B
	A→S : ID_B,ID_A,N_B,N_A
	S→B : E_(K_BS ) {K_AB}, HMAC_(K_BS ) {ID_B,E_(K_BS ) {K_AB}}
	S→A : E_(K_AS ) {K_AB}, HMAC_(K_AS ) {ID_B,ID_A,E_(K_AS ) {K_AB}}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {K_AB}, HMAC_(K_BS ) {ID_B,E_(K_BS ) {K_AB}}
Tag: 1


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,N_B
	A→S : ID_B,ID_A,N_B,N_A , K_BS
	S→B : E_(K_BS ) {K_AB}, HMAC_(K_BS ) {ID_B,ID_A,E_(K_BS ) {K_AB}}
	S→A : E_(K_AS ) {K_AB}, HMAC_(K_AS ) {ID_B,ID_A,E_(K_AS ) {K_AB}}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {K_AB}  using plBintext key K_BS
Tag: 1

Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,N_B
	A→S : ID_B,ID_A,N_B,N_A , K_AS
	S→B : E_(K_BS ) {K_AB}, HMAC_(K_BS ) {ID_B,ID_A,E_(K_BS ) {K_AB}}
	S→A : E_(K_AS ) {K_AB}, HMAC_(K_AS ) {ID_B,ID_A,E_(K_AS ) {K_AB}}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {K_AB}  using plBintext key K_AS
Tag: 1



Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : Sig_(Pri_B ) {E_(Pub_A ) {ID_B,ID_A,K_AB},ID_A}
	A→B : Sig_(Pri_A ) {E_(Pub_B ) {ID_A,ID_B,K_AB},ID_B}
	

Tag: 0


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : Pri_B,Sig_(Pri_B ) {E_(Pub_A ) {ID_B,ID_A,K_AB},ID_A} 
	A→B : Sig_(Pri_A ) {E_(Pub_B ) {ID_A,ID_B,K_AB},ID_B}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting Sig_(Pri_A ) {E_(Pub_B ) {ID_A,ID_B,K_AB},ID_B}  using plBintext key Pri_B
Tag: 1

Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : Pri_A,Sig_(Pri_B ) {E_(Pub_A ) {ID_B,ID_A,K_AB},ID_A} 
	A→B : Sig_(Pri_A ) {E_(Pub_B ) {ID_A,ID_B,K_AB},ID_B}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting Sig_(Pri_B ) {E_(Pub_A ) {ID_B,ID_A,K_AB},ID_A}   using plBintext key Pri_A
Tag: 1


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,N_B
	A→S : ID_B,N_B,ID_A,N_A
	S→A : E_(K_AS ) {K_AB,ID_B}, E_(K_BS ) {ID_A,K_AB}
	A→B : E_(K_BS ) {ID_A,K_AB },E_(K_AB ) {N_B },N_A^'
	B→A : E_(K_AB ) {N_A^' }

Tag: 0


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,N_B
	A→S : ID_B,N_B,ID_A,N_A
	S→A : E_(K_AS ) {K_AB}, E_(K_BS ) {K_AB}
	A→B : E_(K_BS ) {K_AB },E_(K_AB ) {N_B },N_A^'
	B→A : E_(K_AB ) {N_A^' }

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 4 i.e. E_(K_BS ) {K_AB }
Tag: 1



Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,N_B
	A→S : ID_B,N_B,ID_A,N_A , K_AS
	S→A : E_(K_AS ) {K_AB}, E_(K_BS ) {ID_A,K_AB}
	A→B : E_(K_BS ) {ID_A,K_AB },E_(K_AB ) {N_B },N_A^'
	B→A : E_(K_AB ) {N_A^' }

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {K_AB}  using plBintext key K_AS
Tag: 1


Name: ExpBnded ProtoBol
Paper: B LogiB of ButhentiBBtion
	B→A : ID_B,N_B
	A→S : ID_B,N_B,ID_A,N_A , K_BS
	S→A : E_(K_AS ) {K_AB}, E_(K_BS ) {ID_A,K_AB}
	A→B : E_(K_BS ) {ID_A,K_AB },E_(K_AB ) {N_B },N_A^'
	B→A : E_(K_AB ) {N_A^' }

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_A,K_AB}  using plBintext key K_BS
Tag: 1

Name: TA+BH+SO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→S : ID_B,ID_A
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S},E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S}
	B→A : E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S}

Tag: 0


Name: TA+BH+SO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→S : ID_B,ID_A
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,T_S},E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S}
	B→A : E_(K_AS ) {ID_S ,ID_B,K_AB,T_S}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 2-3 i.e. E_(K_AS ) {ID_S ,ID_B,K_AB,T_S}
Tag: 1


Name: TA+BH+SO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→S : ID_B,ID_A,K_AS
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S},E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S}
	B→A : E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S}  using plBintext key K_AS
Tag: 1

Name: TA+BH+SO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→S : ID_B,ID_A,K_BS
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S},E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S}
	B→A : E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S}  using plBintext key K_BS
Tag: 1

Name: TA+BH+SO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→S : ID_A,ID_B
	S→B : E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S},E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S}
	A→B : E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S},E_(K_AB ) {ID_A,ID_B,T_A}
	B→A : E_(K_AB ) {ID_A,ID_B,T_B}

Tag: 0

Name: TA+BH+SO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→S : ID_A,ID_B
	S→B : E_(K_AS ) {ID_S ,ID_B,K_AB,T_S},E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,T_S}
	A→B : E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S},E_(K_AB ) {ID_A,ID_B,T_A}
	B→A : E_(K_AB ) {ID_A,ID_B,T_B}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 2 i.e. E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,T_S}
Tag: 1




Name: TA+BH+SO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→S : ID_A,ID_B,K_BS
	S→B : E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S},E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S}
	A→B : E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S},E_(K_AB ) {ID_A,ID_B,T_A}
	B→A : E_(K_AB ) {ID_A,ID_B,T_B}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S}  using plBintext key K_BS
Tag: 1

Name: TA+BH+SO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→S : ID_A,ID_B,K_AS
	S→B : E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S},E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S}
	A→B : E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S},E_(K_AB ) {ID_A,ID_B,T_A}
	B→A : E_(K_AB ) {ID_A,ID_B,T_B}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S}  using plBintext key K_AS
Tag: 1



Name: TA+BH+SO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→S : ID_B,ID_A
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A}
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A}
	B→A : E_(K_AB ) {ID_B,ID_A,T_B}
	A→B : E_(K_AB ) {ID_A,ID_B,T_A}

Tag: 0



Name: TA+BH+SO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→S : ID_B,ID_A
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB}
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A}
	B→A : E_(K_AB ) {ID_B,T_B}
	A→B : E_(K_AB ) {ID_B,T_A}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 2-4-5 i.e. E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB}
Tag: 1

Name: TA+BH+SO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→S : ID_B,ID_A
	S→B : K_BS,E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A}
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A}
	B→A : E_(K_AB ) {ID_B,ID_A,T_B}
	A→B : E_(K_AB ) {ID_A,ID_B,T_A}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A}  using plBintext key K_BS
Tag: 1

Name: TA+BH+SO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→S : ID_B,ID_A
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A}
	S→A : K_AS,E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A}
	B→A : E_(K_AB ) {ID_B,ID_A,T_B}
	A→B : E_(K_AB ) {ID_A,ID_B,T_A}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A}  using plBintext key K_AS
Tag: 1

Name: TA+BH+SO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→S : ID_B,ID_A
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S}
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S}

Tag: 0


Name: TA+BH+SO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→S : ID_B,ID_A
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,T_S}
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3-4 i.e. E_(K_BS ) {N_B,N_A,K_AB }
Tag: 1

Name: TA+BH+SO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→S : ID_B,ID_A
	S→B : K_BS,E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S}
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S}  using plBintext key K_BS
Tag: 1

Name: TA+BH+SO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→S : ID_B,ID_A
	S→B : K_AS,E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S}
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S}  using plBintext key K_AS
Tag: 1


Name: TA+BH+SO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→S : ID_A,ID_B
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S}
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S}
	A→B : E_(K_AB ) {ID_A,ID_B,T_A}
	B→A : E_(K_AB ) {ID_B,ID_A,T_B}
	

Tag: 0



Name: TA+BH+SO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→S : ID_A,ID_B
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S}
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S}
	A→B : E_(K_AB ) {ID_A,ID_B,T_A}
	B→A : E_(K_AB ) {ID_B,ID_A,T_B}
	

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3-4 i.e. E_(K_BS ) {N_B,N_A,K_AB }
Tag: 1

Name: TA+BH+SO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→S : ID_A,ID_B
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S}
	S→B : K_BS,E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S}
	A→B : E_(K_AB ) {ID_A,ID_B,T_A}
	B→A : E_(K_AB ) {ID_B,ID_A,T_B}

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S}  using plBintext key K_BS
Tag: 1


Name: TA+BH+SO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→S : ID_A,ID_B
	S→A : K_AS,E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S}
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_B,K_AB,ID_A,T_S}
	A→B : E_(K_AB ) {ID_A,ID_B,T_A}
	B→A : E_(K_AB ) {ID_B,ID_A,T_B}

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_S ,ID_A,ID_B,K_AB,ID_A,T_S} using plBintext key K_AS
Tag: 1

Name: TA+BH+BB
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→S : ID_B,ID_A, E_(K_AS ) {ID_A ,ID_S,ID_A,a^y,ID_B,T_A},
	S→B : E_(K_BS ) {ID_S ,ID_B,ID_A,a^y,ID_B,T_S },
	B→S : E_(K_BS ) {ID_B ,ID_S,ID_B,a^x,ID_A,T_B},E_(K_AB ) {ID_B,ID_A,T_B},
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_B,a^x,ID_A,T_S},E_(K_AB ) {ID_B,ID_A,T_B },
	A→B : E_(K_AB ) {ID_A,ID_B,T_A },

Tag: 0


Name: TA+BH+BB
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→S : ID_B,ID_A, E_(K_AS ) {ID_A ,ID_S,ID_A,a^y,ID_B,T_A},
	S→B : K_BS,E_(K_BS ) {ID_S ,ID_B,ID_A,a^y,ID_B,T_S } 
	B→S : E_(K_BS ) {ID_B ,ID_S,ID_B,a^x,ID_A,T_B},E_(K_AB ) {ID_B,ID_A,T_B},
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_B,a^x,ID_A,T_S},E_(K_AB ) {ID_B,ID_A,T_B },
	A→B : E_(K_AB ) {ID_A,ID_B,T_A },

Tag: 0

Name: TA+BH+BB
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→S : ID_B,ID_A, E_(K_AS ) {ID_A ,ID_S,ID_A,a^y,ID_B,T_A},
	S→B : K_AS,E_(K_BS ) {ID_S ,ID_B,ID_A,a^y,ID_B,T_S }
	B→S : E_(K_BS ) {ID_B ,ID_S,ID_B,a^x,ID_A,T_B},E_(K_AB ) {ID_B,ID_A,T_B},
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_B,a^x,ID_A,T_S},E_(K_AB ) {ID_B,ID_A,T_B },
	A→B : E_(K_AB ) {ID_A,ID_B,T_A },

Tag: 0

Name: TA+BH+BB
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→S : ID_B,ID_A, E_(K_AS ) {ID_A ,ID_S,ID_A,a^y,ID_B,T_A},
	S→B : K_BS,E_(K_BS ) {y,ID_S ,ID_B,ID_A,a^y,ID_B,T_S }
	B→S : E_(K_BS ) {ID_B ,ID_S,ID_B,a^x,ID_A,T_B},E_(K_AB ) {ID_B,ID_A,T_B},
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_B,a^x,ID_A,T_S},E_(K_AB ) {ID_B,ID_A,T_B },
	A→B : E_(K_AB ) {ID_A,ID_B,T_A },

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting E_(K_BS ) {y,ID_S ,ID..  using plBintext key K_BS
Tag: 1


Name: TA+BH+BB
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→S : ID_B,ID_A, E_(K_AS ) {ID_A ,ID_S,ID_A,a^y,ID_B,T_A},
	S→B : K_BS,E_(K_BS ) {x,ID_S ,ID_B,ID_A,a^y,ID_B,T_S }
	B→S : E_(K_BS ) {ID_B ,ID_S,ID_B,a^x,ID_A,T_B},E_(K_AB ) {ID_B,ID_A,T_B},
	S→A : E_(K_AS ) {ID_S ,ID_A,ID_B,a^x,ID_A,T_S},E_(K_AB ) {ID_B,ID_A,T_B },
	A→B : E_(K_AB ) {ID_A,ID_B,T_A },

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting E_(K_BS ) {x,ID_S ,ID..  using plBintext key K_BS
Tag: 1

Name: The simpler OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A },E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A }
	A→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A }, E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}

Tag: 0


Name: The simpler OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A },E_(K_BS ) {ID_S,ID_B,ID_B,K_AB }
	A→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB }, E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3-4 i.e. E_(K_BS ) {ID_S,ID_B,ID_B,K_AB }
Tag: 1



Name: The simpler OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : K_AS,E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A },E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A }
	A→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A }, E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}


	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A }  using plBintext key K_AS
Tag: 1

Name: The simpler OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A,K_BS
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A },E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A }
	A→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A }, E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A }  using plBintext key K_BS
Tag: 1


Name: The simpler OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A },E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }
	A→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }

Tag: 0


Name: The simpler OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A },E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,N_B }
	A→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,N_B }


Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3-4 i.e. E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,N_B }
Tag: 1


Name: The simpler OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A,K_AS
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A },E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }
	A→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }


	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }  using plBintext key K_AS
Tag: 1

Name: The simpler OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A,K_BS
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A },E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }
	A→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }
	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }  using plBintext key K_BS
Tag: 1


Name: The simpler OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,N_B },E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }
	B→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }, E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,N_B }
Tag: 1



Name: The simpler OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B },E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }
	B→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }, E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}

Tag: 0


Name: The simpler OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,N_B },E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }
	B→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }, E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}


Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,N_B }
Tag: 1


Name: The simpler OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B,K_BS
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B },E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }
	B→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }, E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}


	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }  using plBintext key K_BS
Tag: 1


Name: The simpler OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B,K_AS
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B },E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }
	B→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }, E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }  using plBintext key K_AS
Tag: 1

Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A }
	A→B : E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}

Tag: 0


Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB }
	A→B : E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 4 i.e. E_(K_BS ) {ID_S,ID_B,ID_B,K_AB }
Tag: 1

Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A,K_BS
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A } 
	A→B : E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A }  using plBintext key K_BS
Tag: 1

Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A,K_AS
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A } 
	A→B : E_(K_AB ) {N_B,N_A^' }
	B→A : E_(K_AB ) {N_A^'+1}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A }  using plBintext key K_AS
Tag: 1


Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }

Tag: 0


Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,N_B }

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 4 i.e. E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,N_B }
Tag: 1


Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A,K_BS
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A } 
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }  using plBintext key K_BS
Tag: 1

Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A,K_AS
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }  using plBintext key K_AS
Tag: 1

Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }
	B→A : E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}

Tag: 0


Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,N_B }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,N_A }
	B→A : E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,N_B }
Tag: 1



Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B,K_BS
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A } 
	B→A : E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }  using plBintext key K_BS
Tag: 1


Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B,K_AS
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A } 
	B→A : E_(K_AB ) {N_A,N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }   using plBintext key K_AS
Tag: 1


Name: The simpler OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B },E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }
	B→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }, E_(K_AB ) {ID_B,ID_A,N_A },N_B
	A→B : E_(K_AB ) {ID_A,ID_B,N_B }

Tag: 0


Name: The simpler OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,N_B },E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }
	B→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }, E_(K_AB ) {ID_B,ID_A,N_A },N_B
	A→B : E_(K_AB ) {ID_B,N_B }


Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3-5 i.e. E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,N_B }
Tag: 1

Name: The simpler OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B,K_BS
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B },E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A } 
	B→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }, E_(K_AB ) {ID_B,ID_A,N_A },N_B
	A→B : E_(K_AB ) {ID_A,ID_B,N_B }

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }  using plBintext key K_BS
Tag: 1

Name: The simpler OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B,K_AS
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B },E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A } 
	B→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }, E_(K_AB ) {ID_B,ID_A,N_A },N_B
	A→B : E_(K_AB ) {ID_A,ID_B,N_B }

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }   using plBintext key K_AS
Tag: 1

Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A }, N_A
	B→A :  E_(K_AB ) {ID_A,ID_B,N_A }
	A→B : E_(K_AB ) {ID_B,ID_A,N_B }

Tag: 0


Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB }, N_A
	B→A : E_(K_AB ) {ID_B,N_A }
	A→B : E_(K_AB ) {ID_B,N_B }


Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 4-6 i.e. E_(K_BS ) {ID_S,ID_B,ID_B,K_AB }
Tag: 1




Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A,K_BS
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A }, N_A 
	B→A :  E_(K_AB ) {ID_A,ID_B,N_A }
	A→B : E_(K_AB ) {ID_B,ID_A,N_B }


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A }  using plBintext key K_BS
Tag: 1


Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A,K_AS
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A }, N_A
	B→A :  E_(K_AB ) {ID_A,ID_B,N_A }
	A→B : E_(K_AB ) {ID_B,ID_A,N_B }


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A }  using plBintext key K_AS
Tag: 1

Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }, N_A

Tag: 0

Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,N_B }, N_A


Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 4 i.e. E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,N_B }
Tag: 1




Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A,K_AS
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A } 
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }, N_A


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }   using plBintext key K_AS
Tag: 1

Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : N_B,ID_B
	A→S : N_B,ID_B,N_A,ID_A,K_BS
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }, N_A

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }   using plBintext key K_BS
Tag: 1

Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A },N_B
	A→B : E_(K_AB ) {ID_A,ID_B,N_B }
	B→A : E_(K_AB ) {ID_B,ID_A,N_A }

Tag: 0


Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,N_B }
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A },N_B
	A→B : E_(K_AB ) {ID_B,N_B }
	B→A : E_(K_AB ) {ID_B,N_A }


Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3-5 i.e. E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,N_B }
Tag: 1


Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B,K_BS
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B } 
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A },N_B
	A→B : E_(K_AB ) {ID_A,ID_B,N_B }
	B→A : E_(K_AB ) {ID_B,ID_A,N_A }


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }   using plBintext key K_BS
Tag: 1

Name: The BonBurrent OtBwBy-Rees protoBol
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : N_A,ID_A
	B→S : N_A,ID_A,N_B,ID_B,K_AS
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B } 
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A },N_B
	A→B : E_(K_AB ) {ID_A,ID_B,N_B }
	B→A : E_(K_AB ) {ID_B,ID_A,N_A }


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_S,ID_A,ID_B,K_AB,ID_A,N_A }   using plBintext key K_AS
Tag: 1

Name: NA+BO+BO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : ID_B,ID_A,N_B
	A→S : E_(K_AS ) {ID_A,ID_S,ID_B,K_AB,ID_A,N_B },N_A, E_(K_AB ) {ID_A,ID_B,N_B }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A },N_A, E_(K_AB ) {ID_A,ID_B,N_B }
	B→A : E_(K_AB ) {ID_B,ID_A,N_A }

Tag: 0

Name: NA+BO+BO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : ID_B,ID_A,N_B
	A→S : E_(K_AS ) {ID_A,ID_S,ID_B,K_AB,ID_A,N_B },N_A, E_(K_AB ) {ID_A,ID_B,N_B }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB },N_A, E_(K_AB ) {ID_B,N_B }
	B→A : E_(K_AB ) {ID_B,ID_A,N_A }

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {ID_S,ID_B,ID_B,K_AB },N_A, E_(K_AB ) {ID_B,N_B }
Tag: 1

Name: NA+BO+BO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : ID_B,ID_A,N_B,K_BS
	A→S : E_(K_AS ) {ID_A,ID_S,ID_B,K_AB,ID_A,N_B },N_A, E_(K_AB ) {ID_A,ID_B,N_B }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A },N_A, E_(K_AB ) {ID_A,ID_B,N_B }
	B→A : E_(K_AB ) {ID_B,ID_A,N_A } , 
	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A }  using plBintext key K_BS
Tag: 1

Name: NA+BO+BO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : ID_B,ID_A,N_B,K_AS
	A→S : E_(K_AS ) {ID_A,ID_S,ID_B,K_AB,ID_A,N_B },N_A, E_(K_AB ) {ID_A,ID_B,N_B }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A },N_A, E_(K_AB ) {ID_A,ID_B,N_B }
	B→A : E_(K_AB ) {ID_B,ID_A,N_A } 

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_A,ID_S,ID_B,K_AB,ID_A,N_B } using plBintext key K_AS
Tag: 1


Name: NA+BO+BO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : ID_B,ID_A,N_B
	A→S : E_(K_AS ) {ID_A,ID_S,ID_B,K_AB,ID_A,N_B },N_A
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }

Tag: 0


Name: NA+BO+BO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : ID_B,ID_A,N_B
	A→S : E_(K_AS ) {ID_A,ID_S,ID_B,K_AB,ID_A,N_B },N_A
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,N_B }


Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,N_B }
Tag: 1


Name: NA+BO+BO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : ID_B,ID_A,N_B,K_BS
	A→S : E_(K_AS ) {ID_A,ID_S,ID_B,K_AB,ID_A,N_B },N_A
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B } 


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }   using plBintext key K_BS
Tag: 1

Name: NA+BO+BO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : ID_B,ID_A,N_B,K_AS
	A→S : E_(K_AS ) {ID_A,ID_S,ID_B,K_AB,ID_A,N_B },N_A
	S→B : E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B } 


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_S,ID_B,ID_B,K_AB,ID_A,N_B }   using plBintext key K_AS
Tag: 1

Name: NA+BO+BO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : ID_A,ID_B,N_A
	B→S : ID_A,ID_B,E_(K_BS ) {ID_B,ID_S,ID_A,K_AB,ID_B,T_B,N_A }
	S→A : E_(K_BS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A }

Tag: 0

Name: NA+BO+BO
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : ID_A,ID_B,N_A,K_BS
	B→S : ID_A,ID_B,E_(K_BS ) {ID_B,ID_S,ID_A,K_AB,ID_B,T_B,N_A }
	S→A : E_(K_BS ) {ID_S,ID_A,ID_A,K_AB,ID_B,N_A } 


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_B,ID_S,ID_A,K_AB,ID_B,T_B,N_A }   using plBintext key K_BS
Tag: 1

Name: NA+B0+BB
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : ID_A,ID_B,N_A,
	B→S : ID_A,ID_B,N_B,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A,N_A },
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A,N_A },N_B,
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B,N_B },
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^y,ID_B,N_B },

Tag: 0

Name: NA+B0+BB
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : ID_A,ID_B,N_A,K_AS
	B→S : ID_A,ID_B,N_B,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A,N_A },
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A,N_A },N_B,
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B,N_B }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^y,ID_B,N_B },

Tag: 0

Name: NA+B0+BB
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : ID_A,ID_B,N_A,x, K_AS
	B→S : ID_A,ID_B,N_B,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A,N_A },
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A,N_A },N_B,
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B,N_B }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^y,ID_B,N_B },


Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret x ,K_AS
Tag: 1

Name: NA+B0+BB
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : ID_A,ID_B,N_A,y, K_AS
	B→S : ID_A,ID_B,N_B,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A,N_A },
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A,N_A },N_B,
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B,N_B }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^y,ID_B,N_B },

Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret y ,K_AS
Tag: 1

Name: NA+B0+BB
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : ID_A,ID_B,N_A,
	B→A : N_B,
	B→S : ID_A,ID_B,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A,N_A },
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A,N_A },
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B,N_B },
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^y,ID_B,N_B },

Tag: 0

Name: NA+B0+BB
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : ID_A,ID_B,N_A,
	B→A : N_B,K_AS
	B→S : ID_A,ID_B,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A,N_A },
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A,N_A },
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B,N_B }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^y,ID_B,N_B },

Tag: 0


Name: NA+B0+BB
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	A→B : ID_A,ID_B,N_A,
	B→A : N_B,x, K_AS
	B→S : ID_A,ID_B,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A,N_A },
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A,N_A },
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B,N_B }
	S→B : E_(K_BS ) {ID_S,ID_B,ID_A,a^y,ID_B,N_B },


Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret x 
Tag: 1


Name: NA+BH+BB
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A },N_B,
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A },N_B,
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B },E_(K_AB ) {ID_A,ID_B,N_B },N_A,
	S→B : E_(K_BS ) {ID_B,ID_S,ID_A,a^y,ID_B },

Tag: 0

Name: NA+BH+BB
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A },N_B,
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A },N_B,
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B },E_(K_AB ) {ID_A,ID_B,N_B },N_A,
	S→B : K_BS,E_(K_BS ) {ID_B,ID_S,ID_A,a^y,ID_B }

Tag: 0


Name: NA+BH+BB
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A },N_B,
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A },N_B,
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B },E_(K_AB ) {ID_A,ID_B,N_B },N_A,
	S→B : K_BS,x,E_(K_BS ) {ID_B,ID_S,ID_A,a^y,ID_B }


Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret x 
Tag: 1

Name: NA+BH+BB
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→S : ID_B,ID_A,E_(K_BS ) {ID_B,ID_S,ID_B,a^x,ID_A },N_B,
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A },N_B,
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B },E_(K_AB ) {ID_A,ID_B,N_B },N_A,
	S→B : K_BS, y,E_(K_BS ) {ID_B,ID_S,ID_A,a^y,ID_B },

Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret y
Tag: 1

Name: NA+BH+BB
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : ID_B,ID_A,N_B,
	B→S : ID_B,ID_A,E_(K_AS ) {ID_B,ID_S,ID_B,a^x,ID_A },
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A },
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B },
	S→B : E_(K_AS ) {ID_S,ID_B,ID_A,a^x,ID_B },

Tag: 0

Name: NA+BH+BB
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : ID_B,ID_A,N_B,K_AS
	B→S : ID_B,ID_A,E_(K_AS ) {ID_B,ID_S,ID_B,a^x,ID_A },
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A }
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B },
	S→B : E_(K_AS ) {ID_S,ID_B,ID_A,a^x,ID_B },

Tag: 0


Name: NA+BH+BB
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : ID_B,ID_A,N_B,K_AS,x
	B→S : ID_B,ID_A,E_(K_AS ) {ID_B,ID_S,ID_B,a^x,ID_A },
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A },
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B },
	S→B : E_(K_AS ) {ID_S,ID_B,ID_A,a^x,ID_B },

Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret x 
Tag: 1

Name: NA+BH+BB
Paper: Lower Aounds on MessBges Bnd Rounds for Network ButhentiBBtion ProtoBols
	B→A : ID_B,ID_A,N_B,K_AS,y
	B→S : ID_B,ID_A,E_(K_AS ) {ID_B,ID_S,ID_B,a^x,ID_A },
	S→A : E_(K_AS ) {ID_S,ID_A,ID_B,a^x,ID_A },
	A→S : E_(K_AS ) {ID_A,ID_S,ID_A,a^y,ID_B },
	S→B : E_(K_AS ) {ID_S,ID_B,ID_A,a^x,ID_B },

Flaws: The BdversBry BBn oAtBin session key a^x^y using plBintext seBret y 
Tag: 1

Name: B MutuBl ButhentiBBtion ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	B→S : E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {T_B}}
	S→A : ID_B,ID_A
	A→S : E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {T_A}}
	S→B : E_(K_BS ) {N_B,K_AB,N_A^' }
	S→A : E_(K_AS ) {N_A,K_AB,N_a^' }

Tag: 0

Name: B MutuBl ButhentiBBtion ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	B→S : E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {T_B}}
	S→A : ID_B,ID_A,K_BS
	A→S : E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {T_A}}
	S→B : E_(K_BS ) {N_B,K_AB,N_A^' } 
	S→A : E_(K_AS ) {N_A,K_AB,N_a^' }


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B,K_AB,N_A^' }   using plBintext key K_BS
Tag: 1


Name: B MutuBl ButhentiBBtion ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	B→S : E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {T_B}}
	S→A : ID_B,ID_A
	A→S : E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {T_A}}
	S→B : K_AS,E_(K_BS ) {N_B,K_AB,N_A^' } 
	S→A : E_(K_AS ) {N_A,K_AB,N_a^' }

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {N_A,K_AB,N_a^' }  using plBintext key K_AS
Tag: 1

Name: B ReduBed MutuBl ButhentiBBtion ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	B→A : E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}},N_a^'
	A→S: ID_B,ID_A,E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}},E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}}
	S→A : E_(K_BS ) {N_B,K_AB },E_(K_AS ) {N_A,K_AB,ID_A}
	A→B : E_(K_BS ) {N_B,K_AB,ID_A }

Tag: 0


Name: B ReduBed MutuBl ButhentiBBtion ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	B→A : E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}},N_a^'
	A→S: ID_B,ID_A,E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}},E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}}
	S→A : E_(K_BS ) {N_B,K_AB },E_(K_AS ) {N_A,K_AB }
	A→B : E_(K_BS ) {N_B,K_AB }

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3-4 i.e. E_(K_BS ) {N_B,K_AB }
Tag: 1


Name: B ReduBed MutuBl ButhentiBBtion ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	B→A : E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}},N_a^'
	A→S: E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}},E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}}
	S→A : K_BS,E_(K_BS ) {N_B,K_AB },E_(K_AS ) {N_A,K_AB ,ID_A}
	A→B : E_(K_BS ) {N_B,K_AB,ID_A }

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B,K_AB,ID_A }  using plBintext key K_BS
Tag: 1

Name: B ReduBed MutuBl ButhentiBBtion ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	B→A : E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}},N_a^'
	A→S: E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}},E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}}
	S→A : K_AS,E_(K_BS ) {N_B,K_AB },E_(K_AS ) {N_A,K_AB,ID_A }
	A→B : E_(K_BS ) {N_B,K_AB,ID_A }

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {N_A,K_AB,ID_A }  using plBintext key K_AS
Tag: 1


Name: B BorreBted MutuBl ButhentiBBtion ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	A→B : E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}},N_A^'
	B→S: ID_A,ID_B,E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}},E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}}
	S→B :  E_(K_BS ) {ID_A,N_A,K_AB },E_(K_AS ) {ID_B,N_B,K_AB }
	B→A : E_(K_AS ) {ID_B,N_B,K_AB }

Tag: 0


Name: B BorreBted MutuBl ButhentiBBtion ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	A→B : E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}},N_A^'
	B→S: ID_A,ID_B,E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}},E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}}
	S→B :  E_(K_BS ) {N_A,K_AB },E_(K_AS ) {ID_B,N_B,K_AB }
	B→A : E_(K_AS ) {ID_B,N_B,K_AB }

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {N_A,K_AB }
Tag: 1

Name: B BorreBted MutuBl ButhentiBBtion ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	A→B : E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}},N_A^'
	B→S: E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}},E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}}
	S→B :  K_AS,E_(K_BS ) {ID_A,N_A,K_AB },E_(K_AS ) {ID_B,N_B,K_AB } 
	B→A : E_(K_AS ) {ID_B,N_B,K_AB }


	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,N_B,K_AB }  using plBintext key K_AS
Tag: 1

Name: B BorreBted MutuBl ButhentiBBtion ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	A→B : E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}},N_A^'
	B→S: E_(Pub_S ) {ID_A,ID_B,N_A,E_(K_AS ) {T_A}},E_(Pub_S ) {ID_B,ID_A,N_B,E_(K_BS ) {T_B}}
	S→B :  K_BS,E_(K_BS ) {ID_A,N_A,K_AB },E_(K_AS ) {ID_B,N_B,K_AB } 
	B→A : E_(K_AS ) {ID_B,N_B,K_AB }

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {ID_B,N_B,K_AB }  using plBintext key K_BS
Tag: 1

Name: B NonBe ABsed MutuBl ButhentiBBtion ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A
	S→B : ID_B,ID_A,N_S
	B→A: E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}},N_S
	A→S : E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}},E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}}
	S→A : E_(K_AS ) {N_A,K_AB,N_a^' },E_(K_BS ) {N_B,K_AB,N_A^' }
	A→B : E_(K_BS ) {N_B,K_AB,N_A^' }

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 5-6 i.e. E_(K_BS ) {N_B,K_AB,N_A^' }
Tag: 1


Name: B NonBe ABsed MutuBl ButhentiBBtion ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A
	S→B : ID_B,ID_A,N_S
	B→A: E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}},N_S
	A→S : E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}},E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}}
	S→A : E_(K_AS ) {N_A,K_AB,N_a^' },E_(K_BS ) {N_B,K_AB,N_A^' ,ID_A}
	A→B : E_(K_BS ) {ID_A,N_B,K_AB,N_A^' }

Tag: 0


Name: B NonBe ABsed MutuBl ButhentiBBtion ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A
	S→B : ID_B,ID_A,N_S
	B→A: E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}},N_S
	A→S : E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}},E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}}
	S→A : K_BS,E_(K_AS ) {N_A,K_AB,N_a^' },E_(K_BS ) {N_B,K_AB,N_A^' ,ID_A}
	A→B : E_(K_BS ) {ID_A,N_B,K_AB,N_A^' }


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_A,N_B,K_AB,N_A^' }  using plBintext key K_BS
Tag: 1


Name: B NonBe ABsed MutuBl ButhentiBBtion ProtoBol
Paper: ProteBting Poorly Bhosen SeBrets from Guessing BttBBks
	B→S : ID_B,ID_A
	S→B : ID_B,ID_A,N_S
	B→A: E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}},N_S
	A→S : E_(Pub_S ) {ID_B,ID_A,N_B,N_a^',E_(K_BS ) {N_S}},E_(Pub_S ) {ID_A,ID_B,N_A,N_A^',E_(K_AS ) {N_S}}
	S→A : K_AS,E_(K_AS ) {N_A,K_AB,N_a^' },E_(K_BS ) {N_B,K_AB,N_A^',ID_A }  
	A→B : E_(K_BS ) {N_B,K_AB,N_A^',ID_A }


Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {N_A,K_AB,N_a^' }  using plBintext key K_AS
Tag: 1


Name: Bn ABsiB ButhentiBBtion ProtoBol
Paper: ButhentiBBtion using minimBlly trusted servers
	A→B : ID_A,E_(K_AS ) {a^y,ID_B},
	B→S : E_(K_AS ) {a^y,ID_B},E_(K_BS ) {a^x,ID_A },
	S→B : E_(K_AS ) {a^y,a^x,ID_B },E_(K_BS ) {a^x,a^y,ID_A },
	B→A : E_(K_AS ) {a^y,a^x,ID_B },hash{K_AB,ID_A},
	A→B : hash{K_AB,ID_B},

Tag: 0

Name: Bn ABsiB ButhentiBBtion ProtoBol
Paper: ButhentiBBtion using minimBlly trusted servers
	A→B : K_BS, y,ID_A,E_(K_AS ) {a^y,ID_B}
	B→S : E_(K_AS ) {a^y,ID_B},E_(K_BS ) {a^x,ID_A },
	S→B : E_(K_AS ) {a^y,a^x,ID_B },E_(K_BS ) {a^x,a^y,ID_A },
	B→A : E_(K_AS ) {a^y,a^x,ID_B },hash{K_AB,ID_A},
	A→B : hash{K_AB,ID_B},

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting  E_(K_BS ) {a^x,ID_A } using plBintext key K_BS
Tag: 1


Name: Bn ABsiB ButhentiBBtion ProtoBol
Paper: ButhentiBBtion using minimBlly trusted servers
	A→B : ID_A,K_AS,x,E_(K_AS ) {a^y,ID_B}
	B→S : E_(K_AS ) {a^y,ID_B},E_(K_BS ) {a^x,ID_A },
	S→B : E_(K_AS ) {a^y,a^x,ID_B },E_(K_BS ) {a^x,a^y,ID_A },
	B→A : E_(K_AS ) {a^y,a^x,ID_B },hash{K_AB,ID_A},
	A→B : hash{K_AB,ID_B},

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting  E_(K_AS ) {a^y,ID_B} using plBintext key K_AS
Tag: 1

Name: Bn ABsiB ButhentiBBtion ProtoBol
Paper: ButhentiBBtion using minimBlly trusted servers
	A→B : ID_A,K_BS,E_(K_AS ) {a^y,ID_B},
	B→S : E_(K_AS ) {a^y,ID_B},E_(K_BS ) {a^x,ID_A },
	S→B : E_(K_AS ) {a^y,a^x,ID_B },E_(K_BS ) {a^x,a^y,ID_A },
	B→A : E_(K_AS ) {a^y,a^x,ID_B },hash{K_AB,ID_A},
	A→B : hash{K_AB,ID_B},

Tag: 0

Name: Bn ABsiB ButhentiBBtion ProtoBol
Paper: ButhentiBBtion using minimBlly trusted servers
	A→B : ID_A,K_AS,E_(K_AS ) {a^y,ID_B},
	B→S : E_(K_AS ) {a^y,ID_B},E_(K_BS ) {a^x,ID_A },
	S→B : E_(K_AS ) {a^y,a^x,ID_B },E_(K_BS ) {a^x,a^y,ID_A },
	B→A : E_(K_AS ) {a^y,a^x,ID_B },hash{K_AB,ID_A},
	A→B : hash{K_AB,ID_B},

Tag: 0


Name: Bn more roAust ButhentiBBtion ProtoBol
Paper: ButhentiBBtion using minimBlly trusted servers
	A→B : ID_A,E_(K_AS ) {a^y,ID_B},
	B→S : E_(K_AS ) {a^y,ID_B},E_(K_BS ) {a^x,ID_A },
	S→B : E_(K_AS ) {a^y,a^x,ID_B,T_S },E_(K_BS ) {a^x,a^y,ID_A,T_S },
	B→A : E_(K_AS ) {a^y,a^x,ID_B,T_S },

Tag: 0

Name: Bn more roAust ButhentiBBtion ProtoBol
Paper: ButhentiBBtion using minimBlly trusted servers
	A→B : ID_A,K_BS,y,E_(K_AS ) {a^y,ID_B}
	B→S : E_(K_AS ) {a^y,ID_B},E_(K_BS ) {a^x,ID_A },
	S→B : E_(K_AS ) {a^y,a^x,ID_B,T_S },E_(K_BS ) {a^x,a^y,ID_A,T_S },
	B→A : E_(K_AS ) {a^y,a^x,ID_B,T_S },

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting  E_(K_BS ) {a^x,ID_A }   using plBintext key K_BS
Tag: 1




Name: Bn more roAust ButhentiBBtion ProtoBol
Paper: ButhentiBBtion using minimBlly trusted servers
	A→B : ID_A,K_AS,x,E_(K_AS ) {a^y,ID_B},
	B→S : E_(K_AS ) {a^y,ID_B},E_(K_BS ) {a^x,ID_A },
	S→B : E_(K_AS ) {a^y,a^x,ID_B,T_S },E_(K_BS ) {a^x,a^y,ID_A,T_S },
	B→A : E_(K_AS ) {a^y,a^x,ID_B,T_S },

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting  E_(K_AS ) {a^y,ID_B}   using plBintext key K_AS
Tag: 1

Name: Bn more roAust ButhentiBBtion ProtoBol
Paper: ButhentiBBtion using minimBlly trusted servers
	A→B : ID_A,K_BS,E_(K_AS ) {a^y,ID_B}
	B→S : E_(K_AS ) {a^y,ID_B},E_(K_BS ) {a^x,ID_A },
	S→B : E_(K_AS ) {a^y,a^x,ID_B,T_S },E_(K_BS ) {a^x,a^y,ID_A,T_S },
	B→A : E_(K_AS ) {a^y,a^x,ID_B,T_S },
 
Tag: 0

Name: Bn more roAust ButhentiBBtion ProtoBol
Paper: ButhentiBBtion using minimBlly trusted servers
	A→B : ID_A,K_AS,E_(K_AS ) {a^y,ID_B}
	B→S : E_(K_AS ) {a^y,ID_B},E_(K_BS ) {a^x,ID_A },
	S→B : E_(K_AS ) {a^y,a^x,ID_B,T_S },E_(K_BS ) {a^x,a^y,ID_A,T_S },
	B→A : E_(K_AS ) {a^y,a^x,ID_B,T_S },

Tag: 0


Name: Bn ABsiB ButhentiBBtion ProtoBol
Paper: InBreBsing BvBilBAility Bnd SeBurity of Bn ButhentiBBtion ServiBe
	A→S : ID_A,ID_B,
	S→A : N_S,
	A→B : ID_A,ID_B,N_A,N_S,E_(K_AS ) {ID_A,ID_B,N_S,a^y },
	B→S : ID_B,ID_A,N_B,N_A,E_(K_BS ) {ID_B,ID_A,N_S,a^x },E_(K_AS ) {ID_A,ID_B,N_S,a^y },
	S→B : E_(K_AS ) {ID_B,N_A,a^x },E_(K_BS ) {ID_A,N_B,a^y },
	B→A : E_(K_AS ) {ID_B,N_A,a^x },E_(K_AB ) {N_A },N_B,
	A→B : E_(K_AB ) {N_B },

Tag: 0

Name: Bn ABsiB ButhentiBBtion ProtoBol
Paper: InBreBsing BvBilBAility Bnd SeBurity of Bn ButhentiBBtion ServiBe
	A→S : ID_A,ID_B,
	S→A : N_S,
	A→B : ID_A,ID_B,N_A,N_S,K_BS ,y,E_(K_AS ) {ID_A,ID_B,N_S,a^y },
	B→S : ID_B,ID_A,N_B,N_A,E_(K_BS ) {ID_B,ID_A,N_S,a^x },E_(K_AS ) {ID_A,ID_B,N_S,a^y },
	S→B : E_(K_AS ) {ID_B,N_A,a^x },E_(K_BS ) {ID_A,N_B,a^y },
	B→A : E_(K_AS ) {ID_B,N_A,a^x },E_(K_AB ) {N_A },N_B,
	A→B : E_(K_AB ) {N_B },

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting   E_(K_BS ) {ID_B,ID_A,N_S,a^x }  using plBintext key K_BS
Tag: 1

Name: Bn ABsiB ButhentiBBtion ProtoBol
Paper: InBreBsing BvBilBAility Bnd SeBurity of Bn ButhentiBBtion ServiBe
	A→S : ID_A,ID_B,
	S→A : N_S,
	A→B : ID_A,ID_B,N_A,N_S,K_AS ,x,E_(K_AS ) {ID_A,ID_B,N_S,a^y },
	B→S : ID_B,ID_A,N_B,N_A,E_(K_BS ) {ID_B,ID_A,N_S,a^x },E_(K_AS ) {ID_A,ID_B,N_S,a^y },
	S→B : E_(K_AS ) {ID_B,N_A,a^x },E_(K_BS ) {ID_A,N_B,a^y },
	B→A : E_(K_AS ) {ID_B,N_A,a^x },E_(K_AB ) {N_A },N_B,
	A→B : E_(K_AB ) {N_B },


Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting  E_(K_AS ) {ID_A,ID_B,N_S,a^y }  using plBintext key K_AS
Tag: 1


Name: Bn ABsiB ButhentiBBtion ProtoBol
Paper: InBreBsing BvBilBAility Bnd SeBurity of Bn ButhentiBBtion ServiBe
	A→S : ID_A,ID_B,
	S→A : N_S,
	A→B : ID_A,ID_B,N_A,N_S,K_BS ,E_(K_AS ) {ID_A,ID_B,N_S,a^y },
	B→S : ID_B,ID_A,N_B,N_A,E_(K_BS ) {ID_B,ID_A,N_S,a^x },E_(K_AS ) {ID_A,ID_B,N_S,a^y },
	S→B : E_(K_AS ) {ID_B,N_A,a^x },E_(K_BS ) {ID_A,N_B,a^y },
	B→A : E_(K_AS ) {ID_B,N_A,a^x },E_(K_AB ) {N_A },N_B,
	A→B : E_(K_AB ) {N_B },

Tag: 0

Name: Bn ABsiB ButhentiBBtion ProtoBol
Paper: InBreBsing BvBilBAility Bnd SeBurity of Bn ButhentiBBtion ServiBe
	A→S : ID_A,ID_B,
	S→A : N_S,
	A→B : ID_A,ID_B,N_A,N_S,K_AS ,E_(K_AS ) {ID_A,ID_B,N_S,a^y },
	B→S : ID_B,ID_A,N_B,N_A,E_(K_BS ) {ID_B,ID_A,N_S,a^x },E_(K_AS ) {ID_A,ID_B,N_S,a^y },
	S→B : E_(K_AS ) {ID_B,N_A,a^x },E_(K_BS ) {ID_A,N_B,a^y },
	B→A : E_(K_AS ) {ID_B,N_A,a^x },E_(K_AB ) {N_A },N_B,
	A→B : E_(K_AB ) {N_B },

Tag: 0



Name: Proposed effiBient three-pBrty EKE protoBol
Paper: BommuniBBtion-effiBient three-pBrty protoBols for ButhentiBBtion Bnd key Bgreement
	B→A : a^x ,E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^x },K_BS },
	A→S :  E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^x },K_BS },E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^y },K_AS },a^y,E_(K_AB ) {ID_B,N_A },
	S→B : E_(K_BS ) {ID_A,a^y },E_(K_AS ) {ID_B,a^x },E_(K_AB ) {ID_B,N_A },
	B→A : E_(K_AS ) {ID_B,a^x },

Tag: 0


Name: Proposed effiBient three-pBrty EKE protoBol
Paper: BommuniBBtion-effiBient three-pBrty protoBols for ButhentiBBtion Bnd key Bgreement
	B→A : E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^x },K_BS },a^x ,
	A→S :  E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^x },K_BS },E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^y },K_AS },a^y,E_(K_AB ) {ID_B,N_A },
	S→B : E_(K_BS ) {ID_A,a^y },E_(K_AS ) {ID_B,a^x },E_(K_AB ) {ID_B,N_A },
	B→A : E_(K_AS ) {ID_B,a^x },K_AS

Tag: 0

Name: Proposed effiBient three-pBrty EKE protoBol
Paper: BommuniBBtion-effiBient three-pBrty protoBols for ButhentiBBtion Bnd key Bgreement
	B→A : a^x ,E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^x },K_BS },
	A→S :  E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^x },K_BS },E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^y },K_AS },a^y,E_(K_AB ) {ID_B,N_A },
	S→B : E_(K_BS ) {ID_A,a^y },E_(K_AS ) {ID_B,a^x },E_(K_AB ) {ID_B,N_A },
	B→A : E_(K_AS ) {ID_B,a^x },K_BS

Tag: 0

Name: Proposed effiBient three-pBrty EKE protoBol
Paper: BommuniBBtion-effiBient three-pBrty protoBols for ButhentiBBtion Bnd key Bgreement
	B→A : a^x ,E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^x },K_BS },
	A→S :  E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^x },K_BS },E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^y },K_AS },a^y,E_(K_AB ) {ID_B,N_A },
	S→B : E_(K_BS ) {ID_A,a^y },E_(K_AS ) {ID_B,a^x },E_(K_AB ) {ID_B,N_A },
	B→A : K_AS,y,E_(K_AS ) {ID_B,a^x },

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting   E_(K_AS ) {ID_B,a^x }  using plBintext key K_AS 
Tag: 1



Name: Proposed effiBient three-pBrty EKE protoBol
Paper: BommuniBBtion-effiBient three-pBrty protoBols for ButhentiBBtion Bnd key Bgreement
	B→A : E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^x },K_BS },a^x ,
	A→S :  E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^x },K_BS },E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^y },K_AS },a^y,E_(K_AB ) {ID_B,N_A },
	S→B : E_(K_BS ) {ID_A,a^y },E_(K_AS ) {ID_B,a^x },E_(K_AB ) {ID_B,N_A },
	B→A : E_(K_AS ) {ID_B,a^x },K_AS,x

Tag: 0

Name: Proposed effiBient three-pBrty EKE protoBol
Paper: BommuniBBtion-effiBient three-pBrty protoBols for ButhentiBBtion Bnd key Bgreement
	B→A : E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^x },K_BS },a^x ,
	A→S :  E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^x },K_BS },E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^y },K_AS },a^y,E_(K_AB ) {ID_B,N_A },
	S→B : E_(K_BS ) {ID_A,a^y },E_(K_AS ) {ID_B,a^x },E_(K_AB ) {ID_B,N_A },
	B→A : E_(K_AS ) {ID_B,a^x },K_BS,y

Tag: 0

Name: Proposed effiBient three-pBrty EKE protoBol
Paper: BommuniBBtion-effiBient three-pBrty protoBols for ButhentiBBtion Bnd key Bgreement
	B→A : E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^x },K_BS },a^x ,
	A→S :  E_(Pub_S ) {E_(Password_B ) {ID_B,ID_A,a^x },K_BS },E_(Pub_S ) {E_(Password_A ) {ID_A,ID_B,a^y },K_AS },a^y,E_(K_AB ) {ID_B,N_A },
	S→B : E_(K_BS ) {ID_A,a^y },E_(K_AS ) {ID_B,a^x },E_(K_AB ) {ID_B,N_A },
	B→A :K_BS,x,E_(K_AS ) {ID_B,a^x },

Flaws: The BdversBry BBn oAtBin session key a^x^y  Ay deBrypting    E_(K_BS ) {ID_A,a^y }  using plBintext key K_BS
Tag: 1



Name: SNP protoBol
Paper: SeBure ButhentiBBtion ProtoBols ResistBnt to Guessing BttBBks
	A→B : E_(K_AS ) {ID_A,ID_B,N_A }
	B→S :  ID_B,E_(K_BS ) {ID_A,ID_B,N_B,E_(K_AS ) {ID_A,ID_B,N_A }}
	S→B : E_(K_BS ) {ID_S,K_AB,N_B,E_(K_BS ) {K_AB,N_A }}
	B→A : E_(K_BS ) {K_AB,N_A }

Tag: 0

Name: SNP protoBol
Paper: SeBure ButhentiBBtion ProtoBols ResistBnt to Guessing BttBBks
	A→B : E_(K_AS ) {ID_A,ID_B,N_A }
	B→S :  ID_B,E_(K_BS ) {ID_A,ID_B,N_B,E_(K_AS ) {ID_A,ID_B,N_A }}
	S→B : E_(K_BS ) {ID_S,K_AB,N_B,E_(K_BS ) {K_AB,N_A }},K_AS
	B→A : E_(K_BS ) {K_AB,N_A }


Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {ID_S,K_AB,N_B,E_(K_BS ) {K_AB,N_A }}
Tag: 1

Name: SNP protoBol
Paper: SeBure ButhentiBBtion ProtoBols ResistBnt to Guessing BttBBks
	A→B : E_(K_AS ) {ID_A,ID_B,N_A }
	B→S :  ID_B,E_(K_BS ) {ID_A,ID_B,N_B,E_(K_AS ) {ID_A,ID_B,N_A }}
	S→B : E_(K_BS ) {ID_A,ID_S,K_AB,N_B,E_(K_BS ) {K_AB,N_A }},K_AS
	B→A : E_(K_BS ) {K_AB,N_A }

Tag: 0

Name: SNP protoBol
Paper: SeBure ButhentiBBtion ProtoBols ResistBnt to Guessing BttBBks
	A→B : K_BS,E_(K_AS ) {ID_A,ID_B,N_A }
	B→S :  ID_B,E_(K_BS ) {ID_A,ID_B,N_B,E_(K_AS ) {ID_A,ID_B,N_A }}
	S→B : E_(K_BS ) {ID_S,K_AB,N_B,E_(K_BS ) {K_AB,N_A }}
	B→A : E_(K_BS ) {K_AB,N_A }

Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {ID_A,ID_B,N_B,E_(K_AS ) {ID_A,ID_B,N_A }}  using plBintext key K_BS
Tag: 1




Name: DemonstrBtion protoBol
Paper: SeBure ButhentiBBtion ProtoBols ResistBnt to Guessing BttBBks
	B→A : E_(K_BS ) {ID_B,ID_A,N_B },N_a^'
	A→S :  ID_B,ID_A,E_(K_BS ) {ID_B,ID_A,N_B },E_(K_AS ) {ID_A,ID_B,N_A }
	S→A : E_(K_BS ) {N_B,K_AB,ID_A },E_(K_AS ) {N_A,K_AB }
	A→B : E_(K_BS ) {N_B,K_AB,ID_A }
	

Tag: 0




Name: DemonstrBtion protoBol
Paper: SeBure ButhentiBBtion ProtoBols ResistBnt to Guessing BttBBks
	B→A : E_(K_BS ) {ID_B,ID_A,N_B },N_a^'
	A→S :  ID_B,ID_A,E_(K_BS ) {ID_B,ID_A,N_B },E_(K_AS ) {ID_A,ID_B,N_A }
	S→A : E_(K_BS ) {N_B,K_AB },E_(K_AS ) {N_A,K_AB }
	A→B : E_(K_BS ) {N_B,K_AB }

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3-4 i.e. E_(K_BS ) {N_B,K_AB }
Tag: 1

Name: DemonstrBtion protoBol
Paper: SeBure ButhentiBBtion ProtoBols ResistBnt to Guessing BttBBks
	B→A : E_(K_BS ) {ID_B,ID_A,N_B },N_a^'
	A→S :  E_(K_BS ) {ID_B,ID_A,N_B },E_(K_AS ) {ID_A,ID_B,N_A }
	S→A : K_BS,E_(K_BS ) {N_B,K_AB },E_(K_AS ) {N_A,K_AB }
	A→B : E_(K_BS ) {N_B,K_AB }


	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B,K_AB }  using plBintext key K_BS
Tag: 1

Name: DemonstrBtion protoBol
Paper: SeBure ButhentiBBtion ProtoBols ResistBnt to Guessing BttBBks
	B→A : E_(K_BS ) {ID_B,ID_A,N_B },N_a^'
	A→S :  E_(K_BS ) {ID_B,ID_A,N_B },E_(K_AS ) {ID_A,ID_B,N_A }
	S→A : K_AS,E_(K_BS ) {N_B,K_AB },E_(K_AS ) {N_A,K_AB }
	A→B : E_(K_BS ) {N_B,K_AB }
	

	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_AS ) {N_A,K_AB }  using plBintext key K_AS
Tag: 1


Name: DemonstrBtion protoBol
Paper: SeBure ButhentiBBtion ProtoBols ResistBnt to Guessing BttBBks
	A→B : E_(K_AS ) {ID_A,ID_B,N_A },N_A^'
	B→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_B,N_A },E_(K_BS ) {ID_B,ID_A,N_B }
	S→B : E_(K_AS ) {N_A,K_AB },E_(K_BS ) {N_B,K_AB,ID_A }
	B→A : E_(K_AS ) {N_A,K_AB },E_(K_AB ) {N_A^',N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}

Tag: 0


Name: DemonstrBtion protoBol
Paper: SeBure ButhentiBBtion ProtoBols ResistBnt to Guessing BttBBks
	A→B : E_(K_AS ) {ID_A,ID_B,N_A },N_A^'
	B→S : ID_A,ID_B,E_(K_AS ) {ID_A,ID_B,N_A },E_(K_BS ) {ID_B,ID_A,N_B }
	S→B : E_(K_AS ) {N_A,K_AB },E_(K_BS ) {N_B,K_AB }
	B→A : E_(K_AS ) {N_A,K_AB },E_(K_AB ) {N_A^',N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}

Flaws: The BdversBry BBn forge A to B,S Bnd oAtBin the session key Aetween B,A AeBBuse of lBBk of ID_A in messBge 3 i.e. E_(K_BS ) {N_B,K_AB }
Tag: 1


Name: DemonstrBtion protoBol
Paper: SeBure ButhentiBBtion ProtoBols ResistBnt to Guessing BttBBks
	A→B : E_(K_AS ) {ID_A,ID_B,N_A },N_A^'
	B→S : E_(K_AS ) {ID_A,ID_B,N_A },E_(K_BS ) {ID_B,ID_A,N_B }
	S→B : K_BS,E_(K_AS ) {N_A,K_AB },E_(K_BS ) {N_B,K_AB } 
	B→A : E_(K_AS ) {N_A,K_AB },E_(K_AB ) {N_A^',N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}
 	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B,K_AB }   using plBintext key K_BS
Tag: 1

Name: DemonstrBtion protoBol
Paper: SeBure ButhentiBBtion ProtoBols ResistBnt to Guessing BttBBks
	A→B : E_(K_AS ) {ID_A,ID_B,N_A },N_A^'
	B→S : E_(K_AS ) {ID_A,ID_B,N_A },E_(K_BS ) {ID_B,ID_A,N_B }
	S→B : K_AS,E_(K_AS ) {N_A,K_AB },E_(K_BS ) {N_B,K_AB } 
	B→A : E_(K_AS ) {N_A,K_AB },E_(K_AB ) {N_A^',N_a^' }
	A→B : E_(K_AB ) {N_a^'+1}

 	
Flaws: The BdversBry BBn oAtBin session key K_AB Ay deBrypting E_(K_BS ) {N_B,K_AB }   using plBintext key K_BS
Tag: 1







































